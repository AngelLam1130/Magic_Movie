{"ast":null,"code":"\"use strict\";\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Sequence = exports.GenesisState_GenMsgs = exports.GenesisState = exports.Contract = exports.Code = void 0;\nvar _tx = require(\"./tx\");\nvar _types = require(\"./types\");\nvar _helpers = require(\"../../../helpers\");\nvar _m0 = _interopRequireWildcard(require(\"protobufjs/minimal\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj[\"default\"] = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction createBaseGenesisState() {\n  return {\n    params: _types.Params.fromPartial({}),\n    codes: [],\n    contracts: [],\n    sequences: [],\n    genMsgs: []\n  };\n}\nvar GenesisState = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.params !== undefined) {\n      _types.Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n    }\n    var _iterator = _createForOfIteratorHelper(message.codes),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        Code.encode(v, writer.uint32(18).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    var _iterator2 = _createForOfIteratorHelper(message.contracts),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _v = _step2.value;\n        Contract.encode(_v, writer.uint32(26).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    var _iterator3 = _createForOfIteratorHelper(message.sequences),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var _v2 = _step3.value;\n        Sequence.encode(_v2, writer.uint32(34).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    var _iterator4 = _createForOfIteratorHelper(message.genMsgs),\n      _step4;\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var _v3 = _step4.value;\n        GenesisState_GenMsgs.encode(_v3, writer.uint32(42).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseGenesisState();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.params = _types.Params.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.codes.push(Code.decode(reader, reader.uint32()));\n          break;\n        case 3:\n          message.contracts.push(Contract.decode(reader, reader.uint32()));\n          break;\n        case 4:\n          message.sequences.push(Sequence.decode(reader, reader.uint32()));\n          break;\n        case 5:\n          message.genMsgs.push(GenesisState_GenMsgs.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$codes, _object$contracts, _object$sequences, _object$genMsgs;\n    var message = createBaseGenesisState();\n    message.params = object.params !== undefined && object.params !== null ? _types.Params.fromPartial(object.params) : undefined;\n    message.codes = ((_object$codes = object.codes) === null || _object$codes === void 0 ? void 0 : _object$codes.map(function (e) {\n      return Code.fromPartial(e);\n    })) || [];\n    message.contracts = ((_object$contracts = object.contracts) === null || _object$contracts === void 0 ? void 0 : _object$contracts.map(function (e) {\n      return Contract.fromPartial(e);\n    })) || [];\n    message.sequences = ((_object$sequences = object.sequences) === null || _object$sequences === void 0 ? void 0 : _object$sequences.map(function (e) {\n      return Sequence.fromPartial(e);\n    })) || [];\n    message.genMsgs = ((_object$genMsgs = object.genMsgs) === null || _object$genMsgs === void 0 ? void 0 : _object$genMsgs.map(function (e) {\n      return GenesisState_GenMsgs.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nexports.GenesisState = GenesisState;\nfunction createBaseGenesisState_GenMsgs() {\n  return {\n    storeCode: undefined,\n    instantiateContract: undefined,\n    executeContract: undefined\n  };\n}\nvar GenesisState_GenMsgs = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.storeCode !== undefined) {\n      _tx.MsgStoreCode.encode(message.storeCode, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.instantiateContract !== undefined) {\n      _tx.MsgInstantiateContract.encode(message.instantiateContract, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.executeContract !== undefined) {\n      _tx.MsgExecuteContract.encode(message.executeContract, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseGenesisState_GenMsgs();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.storeCode = _tx.MsgStoreCode.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.instantiateContract = _tx.MsgInstantiateContract.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.executeContract = _tx.MsgExecuteContract.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseGenesisState_GenMsgs();\n    message.storeCode = object.storeCode !== undefined && object.storeCode !== null ? _tx.MsgStoreCode.fromPartial(object.storeCode) : undefined;\n    message.instantiateContract = object.instantiateContract !== undefined && object.instantiateContract !== null ? _tx.MsgInstantiateContract.fromPartial(object.instantiateContract) : undefined;\n    message.executeContract = object.executeContract !== undefined && object.executeContract !== null ? _tx.MsgExecuteContract.fromPartial(object.executeContract) : undefined;\n    return message;\n  }\n};\nexports.GenesisState_GenMsgs = GenesisState_GenMsgs;\nfunction createBaseCode() {\n  return {\n    codeId: _helpers.Long.UZERO,\n    codeInfo: _types.CodeInfo.fromPartial({}),\n    codeBytes: new Uint8Array(),\n    pinned: false\n  };\n}\nvar Code = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (!message.codeId.isZero()) {\n      writer.uint32(8).uint64(message.codeId);\n    }\n    if (message.codeInfo !== undefined) {\n      _types.CodeInfo.encode(message.codeInfo, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.codeBytes.length !== 0) {\n      writer.uint32(26).bytes(message.codeBytes);\n    }\n    if (message.pinned === true) {\n      writer.uint32(32).bool(message.pinned);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseCode();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.codeId = reader.uint64();\n          break;\n        case 2:\n          message.codeInfo = _types.CodeInfo.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.codeBytes = reader.bytes();\n          break;\n        case 4:\n          message.pinned = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$codeBytes, _object$pinned;\n    var message = createBaseCode();\n    message.codeId = object.codeId !== undefined && object.codeId !== null ? _helpers.Long.fromValue(object.codeId) : _helpers.Long.UZERO;\n    message.codeInfo = object.codeInfo !== undefined && object.codeInfo !== null ? _types.CodeInfo.fromPartial(object.codeInfo) : undefined;\n    message.codeBytes = (_object$codeBytes = object.codeBytes) !== null && _object$codeBytes !== void 0 ? _object$codeBytes : new Uint8Array();\n    message.pinned = (_object$pinned = object.pinned) !== null && _object$pinned !== void 0 ? _object$pinned : false;\n    return message;\n  }\n};\nexports.Code = Code;\nfunction createBaseContract() {\n  return {\n    contractAddress: \"\",\n    contractInfo: _types.ContractInfo.fromPartial({}),\n    contractState: []\n  };\n}\nvar Contract = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.contractAddress !== \"\") {\n      writer.uint32(10).string(message.contractAddress);\n    }\n    if (message.contractInfo !== undefined) {\n      _types.ContractInfo.encode(message.contractInfo, writer.uint32(18).fork()).ldelim();\n    }\n    var _iterator5 = _createForOfIteratorHelper(message.contractState),\n      _step5;\n    try {\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        var v = _step5.value;\n        _types.Model.encode(v, writer.uint32(26).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseContract();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.contractAddress = reader.string();\n          break;\n        case 2:\n          message.contractInfo = _types.ContractInfo.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.contractState.push(_types.Model.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$contractAddre, _object$contractState;\n    var message = createBaseContract();\n    message.contractAddress = (_object$contractAddre = object.contractAddress) !== null && _object$contractAddre !== void 0 ? _object$contractAddre : \"\";\n    message.contractInfo = object.contractInfo !== undefined && object.contractInfo !== null ? _types.ContractInfo.fromPartial(object.contractInfo) : undefined;\n    message.contractState = ((_object$contractState = object.contractState) === null || _object$contractState === void 0 ? void 0 : _object$contractState.map(function (e) {\n      return _types.Model.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nexports.Contract = Contract;\nfunction createBaseSequence() {\n  return {\n    idKey: new Uint8Array(),\n    value: _helpers.Long.UZERO\n  };\n}\nvar Sequence = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.idKey.length !== 0) {\n      writer.uint32(10).bytes(message.idKey);\n    }\n    if (!message.value.isZero()) {\n      writer.uint32(16).uint64(message.value);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseSequence();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.idKey = reader.bytes();\n          break;\n        case 2:\n          message.value = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$idKey;\n    var message = createBaseSequence();\n    message.idKey = (_object$idKey = object.idKey) !== null && _object$idKey !== void 0 ? _object$idKey : new Uint8Array();\n    message.value = object.value !== undefined && object.value !== null ? _helpers.Long.fromValue(object.value) : _helpers.Long.UZERO;\n    return message;\n  }\n};\nexports.Sequence = Sequence;","map":null,"metadata":{},"sourceType":"script"}