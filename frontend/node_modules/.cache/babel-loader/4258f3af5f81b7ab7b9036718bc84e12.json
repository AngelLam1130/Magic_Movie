{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/linanqi/Hackathon/GameRoom/frontend/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/Users/linanqi/Hackathon/GameRoom/frontend/node_modules/@babel/runtime/helpers/createClass\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Event = exports.LastCommitInfo = exports.BlockParams = exports.ConsensusParams = exports.ResponseApplySnapshotChunk = exports.ResponseLoadSnapshotChunk = exports.ResponseOfferSnapshot = exports.ResponseListSnapshots = exports.ResponseCommit = exports.ResponseEndBlock = exports.ResponseDeliverTx = exports.ResponseCheckTx = exports.ResponseBeginBlock = exports.ResponseQuery = exports.ResponseInitChain = exports.ResponseSetOption = exports.ResponseInfo = exports.ResponseFlush = exports.ResponseEcho = exports.ResponseException = exports.Response = exports.RequestApplySnapshotChunk = exports.RequestLoadSnapshotChunk = exports.RequestOfferSnapshot = exports.RequestListSnapshots = exports.RequestCommit = exports.RequestEndBlock = exports.RequestDeliverTx = exports.RequestCheckTx = exports.RequestBeginBlock = exports.RequestQuery = exports.RequestInitChain = exports.RequestSetOption = exports.RequestInfo = exports.RequestFlush = exports.RequestEcho = exports.Request = exports.responseApplySnapshotChunk_ResultToJSON = exports.responseApplySnapshotChunk_ResultFromJSON = exports.ResponseApplySnapshotChunk_Result = exports.responseOfferSnapshot_ResultToJSON = exports.responseOfferSnapshot_ResultFromJSON = exports.ResponseOfferSnapshot_Result = exports.evidenceTypeToJSON = exports.evidenceTypeFromJSON = exports.EvidenceType = exports.checkTxTypeToJSON = exports.checkTxTypeFromJSON = exports.CheckTxType = exports.protobufPackage = void 0;\nexports.ABCIApplicationClientImpl = exports.Snapshot = exports.Evidence = exports.VoteInfo = exports.ValidatorUpdate = exports.Validator = exports.TxResult = exports.EventAttribute = void 0;\n/* eslint-disable */\nvar long_1 = __importDefault(require(\"long\"));\nvar minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nvar timestamp_1 = require(\"../../google/protobuf/timestamp\");\nvar keys_1 = require(\"../crypto/keys\");\nvar proof_1 = require(\"../crypto/proof\");\nvar params_1 = require(\"../types/params\");\nvar types_1 = require(\"../types/types\");\nexports.protobufPackage = \"tendermint.abci\";\nvar CheckTxType;\n(function (CheckTxType) {\n  CheckTxType[CheckTxType[\"NEW\"] = 0] = \"NEW\";\n  CheckTxType[CheckTxType[\"RECHECK\"] = 1] = \"RECHECK\";\n  CheckTxType[CheckTxType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(CheckTxType = exports.CheckTxType || (exports.CheckTxType = {}));\nfunction checkTxTypeFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"NEW\":\n      return CheckTxType.NEW;\n    case 1:\n    case \"RECHECK\":\n      return CheckTxType.RECHECK;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return CheckTxType.UNRECOGNIZED;\n  }\n}\nexports.checkTxTypeFromJSON = checkTxTypeFromJSON;\nfunction checkTxTypeToJSON(object) {\n  switch (object) {\n    case CheckTxType.NEW:\n      return \"NEW\";\n    case CheckTxType.RECHECK:\n      return \"RECHECK\";\n    case CheckTxType.UNRECOGNIZED:\n    default:\n      return \"UNRECOGNIZED\";\n  }\n}\nexports.checkTxTypeToJSON = checkTxTypeToJSON;\nvar EvidenceType;\n(function (EvidenceType) {\n  EvidenceType[EvidenceType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  EvidenceType[EvidenceType[\"DUPLICATE_VOTE\"] = 1] = \"DUPLICATE_VOTE\";\n  EvidenceType[EvidenceType[\"LIGHT_CLIENT_ATTACK\"] = 2] = \"LIGHT_CLIENT_ATTACK\";\n  EvidenceType[EvidenceType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(EvidenceType = exports.EvidenceType || (exports.EvidenceType = {}));\nfunction evidenceTypeFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"UNKNOWN\":\n      return EvidenceType.UNKNOWN;\n    case 1:\n    case \"DUPLICATE_VOTE\":\n      return EvidenceType.DUPLICATE_VOTE;\n    case 2:\n    case \"LIGHT_CLIENT_ATTACK\":\n      return EvidenceType.LIGHT_CLIENT_ATTACK;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return EvidenceType.UNRECOGNIZED;\n  }\n}\nexports.evidenceTypeFromJSON = evidenceTypeFromJSON;\nfunction evidenceTypeToJSON(object) {\n  switch (object) {\n    case EvidenceType.UNKNOWN:\n      return \"UNKNOWN\";\n    case EvidenceType.DUPLICATE_VOTE:\n      return \"DUPLICATE_VOTE\";\n    case EvidenceType.LIGHT_CLIENT_ATTACK:\n      return \"LIGHT_CLIENT_ATTACK\";\n    case EvidenceType.UNRECOGNIZED:\n    default:\n      return \"UNRECOGNIZED\";\n  }\n}\nexports.evidenceTypeToJSON = evidenceTypeToJSON;\nvar ResponseOfferSnapshot_Result;\n(function (ResponseOfferSnapshot_Result) {\n  /** UNKNOWN - Unknown result, abort all snapshot restoration */\n  ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  /** ACCEPT - Snapshot accepted, apply chunks */\n  ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n  /** ABORT - Abort all snapshot restoration */\n  ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ABORT\"] = 2] = \"ABORT\";\n  /** REJECT - Reject this specific snapshot, try others */\n  ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT\"] = 3] = \"REJECT\";\n  /** REJECT_FORMAT - Reject all snapshots of this format, try others */\n  ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_FORMAT\"] = 4] = \"REJECT_FORMAT\";\n  /** REJECT_SENDER - Reject all snapshots from the sender(s), try others */\n  ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_SENDER\"] = 5] = \"REJECT_SENDER\";\n  ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseOfferSnapshot_Result = exports.ResponseOfferSnapshot_Result || (exports.ResponseOfferSnapshot_Result = {}));\nfunction responseOfferSnapshot_ResultFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"UNKNOWN\":\n      return ResponseOfferSnapshot_Result.UNKNOWN;\n    case 1:\n    case \"ACCEPT\":\n      return ResponseOfferSnapshot_Result.ACCEPT;\n    case 2:\n    case \"ABORT\":\n      return ResponseOfferSnapshot_Result.ABORT;\n    case 3:\n    case \"REJECT\":\n      return ResponseOfferSnapshot_Result.REJECT;\n    case 4:\n    case \"REJECT_FORMAT\":\n      return ResponseOfferSnapshot_Result.REJECT_FORMAT;\n    case 5:\n    case \"REJECT_SENDER\":\n      return ResponseOfferSnapshot_Result.REJECT_SENDER;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return ResponseOfferSnapshot_Result.UNRECOGNIZED;\n  }\n}\nexports.responseOfferSnapshot_ResultFromJSON = responseOfferSnapshot_ResultFromJSON;\nfunction responseOfferSnapshot_ResultToJSON(object) {\n  switch (object) {\n    case ResponseOfferSnapshot_Result.UNKNOWN:\n      return \"UNKNOWN\";\n    case ResponseOfferSnapshot_Result.ACCEPT:\n      return \"ACCEPT\";\n    case ResponseOfferSnapshot_Result.ABORT:\n      return \"ABORT\";\n    case ResponseOfferSnapshot_Result.REJECT:\n      return \"REJECT\";\n    case ResponseOfferSnapshot_Result.REJECT_FORMAT:\n      return \"REJECT_FORMAT\";\n    case ResponseOfferSnapshot_Result.REJECT_SENDER:\n      return \"REJECT_SENDER\";\n    case ResponseOfferSnapshot_Result.UNRECOGNIZED:\n    default:\n      return \"UNRECOGNIZED\";\n  }\n}\nexports.responseOfferSnapshot_ResultToJSON = responseOfferSnapshot_ResultToJSON;\nvar ResponseApplySnapshotChunk_Result;\n(function (ResponseApplySnapshotChunk_Result) {\n  /** UNKNOWN - Unknown result, abort all snapshot restoration */\n  ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  /** ACCEPT - Chunk successfully accepted */\n  ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n  /** ABORT - Abort all snapshot restoration */\n  ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ABORT\"] = 2] = \"ABORT\";\n  /** RETRY - Retry chunk (combine with refetch and reject) */\n  ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY\"] = 3] = \"RETRY\";\n  /** RETRY_SNAPSHOT - Retry snapshot (combine with refetch and reject) */\n  ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY_SNAPSHOT\"] = 4] = \"RETRY_SNAPSHOT\";\n  /** REJECT_SNAPSHOT - Reject this snapshot, try others */\n  ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"REJECT_SNAPSHOT\"] = 5] = \"REJECT_SNAPSHOT\";\n  ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseApplySnapshotChunk_Result = exports.ResponseApplySnapshotChunk_Result || (exports.ResponseApplySnapshotChunk_Result = {}));\nfunction responseApplySnapshotChunk_ResultFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"UNKNOWN\":\n      return ResponseApplySnapshotChunk_Result.UNKNOWN;\n    case 1:\n    case \"ACCEPT\":\n      return ResponseApplySnapshotChunk_Result.ACCEPT;\n    case 2:\n    case \"ABORT\":\n      return ResponseApplySnapshotChunk_Result.ABORT;\n    case 3:\n    case \"RETRY\":\n      return ResponseApplySnapshotChunk_Result.RETRY;\n    case 4:\n    case \"RETRY_SNAPSHOT\":\n      return ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT;\n    case 5:\n    case \"REJECT_SNAPSHOT\":\n      return ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return ResponseApplySnapshotChunk_Result.UNRECOGNIZED;\n  }\n}\nexports.responseApplySnapshotChunk_ResultFromJSON = responseApplySnapshotChunk_ResultFromJSON;\nfunction responseApplySnapshotChunk_ResultToJSON(object) {\n  switch (object) {\n    case ResponseApplySnapshotChunk_Result.UNKNOWN:\n      return \"UNKNOWN\";\n    case ResponseApplySnapshotChunk_Result.ACCEPT:\n      return \"ACCEPT\";\n    case ResponseApplySnapshotChunk_Result.ABORT:\n      return \"ABORT\";\n    case ResponseApplySnapshotChunk_Result.RETRY:\n      return \"RETRY\";\n    case ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT:\n      return \"RETRY_SNAPSHOT\";\n    case ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT:\n      return \"REJECT_SNAPSHOT\";\n    case ResponseApplySnapshotChunk_Result.UNRECOGNIZED:\n    default:\n      return \"UNRECOGNIZED\";\n  }\n}\nexports.responseApplySnapshotChunk_ResultToJSON = responseApplySnapshotChunk_ResultToJSON;\nfunction createBaseRequest() {\n  return {\n    echo: undefined,\n    flush: undefined,\n    info: undefined,\n    setOption: undefined,\n    initChain: undefined,\n    query: undefined,\n    beginBlock: undefined,\n    checkTx: undefined,\n    deliverTx: undefined,\n    endBlock: undefined,\n    commit: undefined,\n    listSnapshots: undefined,\n    offerSnapshot: undefined,\n    loadSnapshotChunk: undefined,\n    applySnapshotChunk: undefined\n  };\n}\nexports.Request = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.echo !== undefined) {\n      exports.RequestEcho.encode(message.echo, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.flush !== undefined) {\n      exports.RequestFlush.encode(message.flush, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.info !== undefined) {\n      exports.RequestInfo.encode(message.info, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.setOption !== undefined) {\n      exports.RequestSetOption.encode(message.setOption, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.initChain !== undefined) {\n      exports.RequestInitChain.encode(message.initChain, writer.uint32(42).fork()).ldelim();\n    }\n    if (message.query !== undefined) {\n      exports.RequestQuery.encode(message.query, writer.uint32(50).fork()).ldelim();\n    }\n    if (message.beginBlock !== undefined) {\n      exports.RequestBeginBlock.encode(message.beginBlock, writer.uint32(58).fork()).ldelim();\n    }\n    if (message.checkTx !== undefined) {\n      exports.RequestCheckTx.encode(message.checkTx, writer.uint32(66).fork()).ldelim();\n    }\n    if (message.deliverTx !== undefined) {\n      exports.RequestDeliverTx.encode(message.deliverTx, writer.uint32(74).fork()).ldelim();\n    }\n    if (message.endBlock !== undefined) {\n      exports.RequestEndBlock.encode(message.endBlock, writer.uint32(82).fork()).ldelim();\n    }\n    if (message.commit !== undefined) {\n      exports.RequestCommit.encode(message.commit, writer.uint32(90).fork()).ldelim();\n    }\n    if (message.listSnapshots !== undefined) {\n      exports.RequestListSnapshots.encode(message.listSnapshots, writer.uint32(98).fork()).ldelim();\n    }\n    if (message.offerSnapshot !== undefined) {\n      exports.RequestOfferSnapshot.encode(message.offerSnapshot, writer.uint32(106).fork()).ldelim();\n    }\n    if (message.loadSnapshotChunk !== undefined) {\n      exports.RequestLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(114).fork()).ldelim();\n    }\n    if (message.applySnapshotChunk !== undefined) {\n      exports.RequestApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(122).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.echo = exports.RequestEcho.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.flush = exports.RequestFlush.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.info = exports.RequestInfo.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.setOption = exports.RequestSetOption.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.initChain = exports.RequestInitChain.decode(reader, reader.uint32());\n          break;\n        case 6:\n          message.query = exports.RequestQuery.decode(reader, reader.uint32());\n          break;\n        case 7:\n          message.beginBlock = exports.RequestBeginBlock.decode(reader, reader.uint32());\n          break;\n        case 8:\n          message.checkTx = exports.RequestCheckTx.decode(reader, reader.uint32());\n          break;\n        case 9:\n          message.deliverTx = exports.RequestDeliverTx.decode(reader, reader.uint32());\n          break;\n        case 10:\n          message.endBlock = exports.RequestEndBlock.decode(reader, reader.uint32());\n          break;\n        case 11:\n          message.commit = exports.RequestCommit.decode(reader, reader.uint32());\n          break;\n        case 12:\n          message.listSnapshots = exports.RequestListSnapshots.decode(reader, reader.uint32());\n          break;\n        case 13:\n          message.offerSnapshot = exports.RequestOfferSnapshot.decode(reader, reader.uint32());\n          break;\n        case 14:\n          message.loadSnapshotChunk = exports.RequestLoadSnapshotChunk.decode(reader, reader.uint32());\n          break;\n        case 15:\n          message.applySnapshotChunk = exports.RequestApplySnapshotChunk.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      echo: isSet(object.echo) ? exports.RequestEcho.fromJSON(object.echo) : undefined,\n      flush: isSet(object.flush) ? exports.RequestFlush.fromJSON(object.flush) : undefined,\n      info: isSet(object.info) ? exports.RequestInfo.fromJSON(object.info) : undefined,\n      setOption: isSet(object.setOption) ? exports.RequestSetOption.fromJSON(object.setOption) : undefined,\n      initChain: isSet(object.initChain) ? exports.RequestInitChain.fromJSON(object.initChain) : undefined,\n      query: isSet(object.query) ? exports.RequestQuery.fromJSON(object.query) : undefined,\n      beginBlock: isSet(object.beginBlock) ? exports.RequestBeginBlock.fromJSON(object.beginBlock) : undefined,\n      checkTx: isSet(object.checkTx) ? exports.RequestCheckTx.fromJSON(object.checkTx) : undefined,\n      deliverTx: isSet(object.deliverTx) ? exports.RequestDeliverTx.fromJSON(object.deliverTx) : undefined,\n      endBlock: isSet(object.endBlock) ? exports.RequestEndBlock.fromJSON(object.endBlock) : undefined,\n      commit: isSet(object.commit) ? exports.RequestCommit.fromJSON(object.commit) : undefined,\n      listSnapshots: isSet(object.listSnapshots) ? exports.RequestListSnapshots.fromJSON(object.listSnapshots) : undefined,\n      offerSnapshot: isSet(object.offerSnapshot) ? exports.RequestOfferSnapshot.fromJSON(object.offerSnapshot) : undefined,\n      loadSnapshotChunk: isSet(object.loadSnapshotChunk) ? exports.RequestLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk) : undefined,\n      applySnapshotChunk: isSet(object.applySnapshotChunk) ? exports.RequestApplySnapshotChunk.fromJSON(object.applySnapshotChunk) : undefined\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.echo !== undefined && (obj.echo = message.echo ? exports.RequestEcho.toJSON(message.echo) : undefined);\n    message.flush !== undefined && (obj.flush = message.flush ? exports.RequestFlush.toJSON(message.flush) : undefined);\n    message.info !== undefined && (obj.info = message.info ? exports.RequestInfo.toJSON(message.info) : undefined);\n    message.setOption !== undefined && (obj.setOption = message.setOption ? exports.RequestSetOption.toJSON(message.setOption) : undefined);\n    message.initChain !== undefined && (obj.initChain = message.initChain ? exports.RequestInitChain.toJSON(message.initChain) : undefined);\n    message.query !== undefined && (obj.query = message.query ? exports.RequestQuery.toJSON(message.query) : undefined);\n    message.beginBlock !== undefined && (obj.beginBlock = message.beginBlock ? exports.RequestBeginBlock.toJSON(message.beginBlock) : undefined);\n    message.checkTx !== undefined && (obj.checkTx = message.checkTx ? exports.RequestCheckTx.toJSON(message.checkTx) : undefined);\n    message.deliverTx !== undefined && (obj.deliverTx = message.deliverTx ? exports.RequestDeliverTx.toJSON(message.deliverTx) : undefined);\n    message.endBlock !== undefined && (obj.endBlock = message.endBlock ? exports.RequestEndBlock.toJSON(message.endBlock) : undefined);\n    message.commit !== undefined && (obj.commit = message.commit ? exports.RequestCommit.toJSON(message.commit) : undefined);\n    message.listSnapshots !== undefined && (obj.listSnapshots = message.listSnapshots ? exports.RequestListSnapshots.toJSON(message.listSnapshots) : undefined);\n    message.offerSnapshot !== undefined && (obj.offerSnapshot = message.offerSnapshot ? exports.RequestOfferSnapshot.toJSON(message.offerSnapshot) : undefined);\n    message.loadSnapshotChunk !== undefined && (obj.loadSnapshotChunk = message.loadSnapshotChunk ? exports.RequestLoadSnapshotChunk.toJSON(message.loadSnapshotChunk) : undefined);\n    message.applySnapshotChunk !== undefined && (obj.applySnapshotChunk = message.applySnapshotChunk ? exports.RequestApplySnapshotChunk.toJSON(message.applySnapshotChunk) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseRequest();\n    message.echo = object.echo !== undefined && object.echo !== null ? exports.RequestEcho.fromPartial(object.echo) : undefined;\n    message.flush = object.flush !== undefined && object.flush !== null ? exports.RequestFlush.fromPartial(object.flush) : undefined;\n    message.info = object.info !== undefined && object.info !== null ? exports.RequestInfo.fromPartial(object.info) : undefined;\n    message.setOption = object.setOption !== undefined && object.setOption !== null ? exports.RequestSetOption.fromPartial(object.setOption) : undefined;\n    message.initChain = object.initChain !== undefined && object.initChain !== null ? exports.RequestInitChain.fromPartial(object.initChain) : undefined;\n    message.query = object.query !== undefined && object.query !== null ? exports.RequestQuery.fromPartial(object.query) : undefined;\n    message.beginBlock = object.beginBlock !== undefined && object.beginBlock !== null ? exports.RequestBeginBlock.fromPartial(object.beginBlock) : undefined;\n    message.checkTx = object.checkTx !== undefined && object.checkTx !== null ? exports.RequestCheckTx.fromPartial(object.checkTx) : undefined;\n    message.deliverTx = object.deliverTx !== undefined && object.deliverTx !== null ? exports.RequestDeliverTx.fromPartial(object.deliverTx) : undefined;\n    message.endBlock = object.endBlock !== undefined && object.endBlock !== null ? exports.RequestEndBlock.fromPartial(object.endBlock) : undefined;\n    message.commit = object.commit !== undefined && object.commit !== null ? exports.RequestCommit.fromPartial(object.commit) : undefined;\n    message.listSnapshots = object.listSnapshots !== undefined && object.listSnapshots !== null ? exports.RequestListSnapshots.fromPartial(object.listSnapshots) : undefined;\n    message.offerSnapshot = object.offerSnapshot !== undefined && object.offerSnapshot !== null ? exports.RequestOfferSnapshot.fromPartial(object.offerSnapshot) : undefined;\n    message.loadSnapshotChunk = object.loadSnapshotChunk !== undefined && object.loadSnapshotChunk !== null ? exports.RequestLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk) : undefined;\n    message.applySnapshotChunk = object.applySnapshotChunk !== undefined && object.applySnapshotChunk !== null ? exports.RequestApplySnapshotChunk.fromPartial(object.applySnapshotChunk) : undefined;\n    return message;\n  }\n};\nfunction createBaseRequestEcho() {\n  return {\n    message: \"\"\n  };\n}\nexports.RequestEcho = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.message !== \"\") {\n      writer.uint32(10).string(message.message);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestEcho();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.message = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      message: isSet(object.message) ? String(object.message) : \"\"\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.message !== undefined && (obj.message = message.message);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseRequestEcho();\n    message.message = (_a = object.message) !== null && _a !== void 0 ? _a : \"\";\n    return message;\n  }\n};\nfunction createBaseRequestFlush() {\n  return {};\n}\nexports.RequestFlush = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestFlush();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(_) {\n    return {};\n  },\n  toJSON: function toJSON(_) {\n    var obj = {};\n    return obj;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseRequestFlush();\n    return message;\n  }\n};\nfunction createBaseRequestInfo() {\n  return {\n    version: \"\",\n    blockVersion: long_1.default.UZERO,\n    p2pVersion: long_1.default.UZERO\n  };\n}\nexports.RequestInfo = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.version !== \"\") {\n      writer.uint32(10).string(message.version);\n    }\n    if (!message.blockVersion.isZero()) {\n      writer.uint32(16).uint64(message.blockVersion);\n    }\n    if (!message.p2pVersion.isZero()) {\n      writer.uint32(24).uint64(message.p2pVersion);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestInfo();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.version = reader.string();\n          break;\n        case 2:\n          message.blockVersion = reader.uint64();\n          break;\n        case 3:\n          message.p2pVersion = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      version: isSet(object.version) ? String(object.version) : \"\",\n      blockVersion: isSet(object.blockVersion) ? long_1.default.fromValue(object.blockVersion) : long_1.default.UZERO,\n      p2pVersion: isSet(object.p2pVersion) ? long_1.default.fromValue(object.p2pVersion) : long_1.default.UZERO\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.version !== undefined && (obj.version = message.version);\n    message.blockVersion !== undefined && (obj.blockVersion = (message.blockVersion || long_1.default.UZERO).toString());\n    message.p2pVersion !== undefined && (obj.p2pVersion = (message.p2pVersion || long_1.default.UZERO).toString());\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseRequestInfo();\n    message.version = (_a = object.version) !== null && _a !== void 0 ? _a : \"\";\n    message.blockVersion = object.blockVersion !== undefined && object.blockVersion !== null ? long_1.default.fromValue(object.blockVersion) : long_1.default.UZERO;\n    message.p2pVersion = object.p2pVersion !== undefined && object.p2pVersion !== null ? long_1.default.fromValue(object.p2pVersion) : long_1.default.UZERO;\n    return message;\n  }\n};\nfunction createBaseRequestSetOption() {\n  return {\n    key: \"\",\n    value: \"\"\n  };\n}\nexports.RequestSetOption = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.key !== \"\") {\n      writer.uint32(10).string(message.key);\n    }\n    if (message.value !== \"\") {\n      writer.uint32(18).string(message.value);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestSetOption();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.string();\n          break;\n        case 2:\n          message.value = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      key: isSet(object.key) ? String(object.key) : \"\",\n      value: isSet(object.value) ? String(object.value) : \"\"\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.key !== undefined && (obj.key = message.key);\n    message.value !== undefined && (obj.value = message.value);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b;\n    var message = createBaseRequestSetOption();\n    message.key = (_a = object.key) !== null && _a !== void 0 ? _a : \"\";\n    message.value = (_b = object.value) !== null && _b !== void 0 ? _b : \"\";\n    return message;\n  }\n};\nfunction createBaseRequestInitChain() {\n  return {\n    time: undefined,\n    chainId: \"\",\n    consensusParams: undefined,\n    validators: [],\n    appStateBytes: new Uint8Array(),\n    initialHeight: long_1.default.ZERO\n  };\n}\nexports.RequestInitChain = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.time !== undefined) {\n      timestamp_1.Timestamp.encode(message.time, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.chainId !== \"\") {\n      writer.uint32(18).string(message.chainId);\n    }\n    if (message.consensusParams !== undefined) {\n      exports.ConsensusParams.encode(message.consensusParams, writer.uint32(26).fork()).ldelim();\n    }\n    var _iterator = _createForOfIteratorHelper(message.validators),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        exports.ValidatorUpdate.encode(v, writer.uint32(34).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    if (message.appStateBytes.length !== 0) {\n      writer.uint32(42).bytes(message.appStateBytes);\n    }\n    if (!message.initialHeight.isZero()) {\n      writer.uint32(48).int64(message.initialHeight);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestInitChain();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.time = timestamp_1.Timestamp.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.chainId = reader.string();\n          break;\n        case 3:\n          message.consensusParams = exports.ConsensusParams.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.validators.push(exports.ValidatorUpdate.decode(reader, reader.uint32()));\n          break;\n        case 5:\n          message.appStateBytes = reader.bytes();\n          break;\n        case 6:\n          message.initialHeight = reader.int64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      time: isSet(object.time) ? fromJsonTimestamp(object.time) : undefined,\n      chainId: isSet(object.chainId) ? String(object.chainId) : \"\",\n      consensusParams: isSet(object.consensusParams) ? exports.ConsensusParams.fromJSON(object.consensusParams) : undefined,\n      validators: Array.isArray(object === null || object === void 0 ? void 0 : object.validators) ? object.validators.map(function (e) {\n        return exports.ValidatorUpdate.fromJSON(e);\n      }) : [],\n      appStateBytes: isSet(object.appStateBytes) ? bytesFromBase64(object.appStateBytes) : new Uint8Array(),\n      initialHeight: isSet(object.initialHeight) ? long_1.default.fromValue(object.initialHeight) : long_1.default.ZERO\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.time !== undefined && (obj.time = fromTimestamp(message.time).toISOString());\n    message.chainId !== undefined && (obj.chainId = message.chainId);\n    message.consensusParams !== undefined && (obj.consensusParams = message.consensusParams ? exports.ConsensusParams.toJSON(message.consensusParams) : undefined);\n    if (message.validators) {\n      obj.validators = message.validators.map(function (e) {\n        return e ? exports.ValidatorUpdate.toJSON(e) : undefined;\n      });\n    } else {\n      obj.validators = [];\n    }\n    message.appStateBytes !== undefined && (obj.appStateBytes = base64FromBytes(message.appStateBytes !== undefined ? message.appStateBytes : new Uint8Array()));\n    message.initialHeight !== undefined && (obj.initialHeight = (message.initialHeight || long_1.default.ZERO).toString());\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c;\n    var message = createBaseRequestInitChain();\n    message.time = object.time !== undefined && object.time !== null ? timestamp_1.Timestamp.fromPartial(object.time) : undefined;\n    message.chainId = (_a = object.chainId) !== null && _a !== void 0 ? _a : \"\";\n    message.consensusParams = object.consensusParams !== undefined && object.consensusParams !== null ? exports.ConsensusParams.fromPartial(object.consensusParams) : undefined;\n    message.validators = ((_b = object.validators) === null || _b === void 0 ? void 0 : _b.map(function (e) {\n      return exports.ValidatorUpdate.fromPartial(e);\n    })) || [];\n    message.appStateBytes = (_c = object.appStateBytes) !== null && _c !== void 0 ? _c : new Uint8Array();\n    message.initialHeight = object.initialHeight !== undefined && object.initialHeight !== null ? long_1.default.fromValue(object.initialHeight) : long_1.default.ZERO;\n    return message;\n  }\n};\nfunction createBaseRequestQuery() {\n  return {\n    data: new Uint8Array(),\n    path: \"\",\n    height: long_1.default.ZERO,\n    prove: false\n  };\n}\nexports.RequestQuery = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.data.length !== 0) {\n      writer.uint32(10).bytes(message.data);\n    }\n    if (message.path !== \"\") {\n      writer.uint32(18).string(message.path);\n    }\n    if (!message.height.isZero()) {\n      writer.uint32(24).int64(message.height);\n    }\n    if (message.prove === true) {\n      writer.uint32(32).bool(message.prove);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestQuery();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.data = reader.bytes();\n          break;\n        case 2:\n          message.path = reader.string();\n          break;\n        case 3:\n          message.height = reader.int64();\n          break;\n        case 4:\n          message.prove = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      data: isSet(object.data) ? bytesFromBase64(object.data) : new Uint8Array(),\n      path: isSet(object.path) ? String(object.path) : \"\",\n      height: isSet(object.height) ? long_1.default.fromValue(object.height) : long_1.default.ZERO,\n      prove: isSet(object.prove) ? Boolean(object.prove) : false\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n    message.path !== undefined && (obj.path = message.path);\n    message.height !== undefined && (obj.height = (message.height || long_1.default.ZERO).toString());\n    message.prove !== undefined && (obj.prove = message.prove);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c;\n    var message = createBaseRequestQuery();\n    message.data = (_a = object.data) !== null && _a !== void 0 ? _a : new Uint8Array();\n    message.path = (_b = object.path) !== null && _b !== void 0 ? _b : \"\";\n    message.height = object.height !== undefined && object.height !== null ? long_1.default.fromValue(object.height) : long_1.default.ZERO;\n    message.prove = (_c = object.prove) !== null && _c !== void 0 ? _c : false;\n    return message;\n  }\n};\nfunction createBaseRequestBeginBlock() {\n  return {\n    hash: new Uint8Array(),\n    header: undefined,\n    lastCommitInfo: undefined,\n    byzantineValidators: []\n  };\n}\nexports.RequestBeginBlock = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.hash.length !== 0) {\n      writer.uint32(10).bytes(message.hash);\n    }\n    if (message.header !== undefined) {\n      types_1.Header.encode(message.header, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.lastCommitInfo !== undefined) {\n      exports.LastCommitInfo.encode(message.lastCommitInfo, writer.uint32(26).fork()).ldelim();\n    }\n    var _iterator2 = _createForOfIteratorHelper(message.byzantineValidators),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var v = _step2.value;\n        exports.Evidence.encode(v, writer.uint32(34).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestBeginBlock();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.hash = reader.bytes();\n          break;\n        case 2:\n          message.header = types_1.Header.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.lastCommitInfo = exports.LastCommitInfo.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.byzantineValidators.push(exports.Evidence.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      hash: isSet(object.hash) ? bytesFromBase64(object.hash) : new Uint8Array(),\n      header: isSet(object.header) ? types_1.Header.fromJSON(object.header) : undefined,\n      lastCommitInfo: isSet(object.lastCommitInfo) ? exports.LastCommitInfo.fromJSON(object.lastCommitInfo) : undefined,\n      byzantineValidators: Array.isArray(object === null || object === void 0 ? void 0 : object.byzantineValidators) ? object.byzantineValidators.map(function (e) {\n        return exports.Evidence.fromJSON(e);\n      }) : []\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n    message.header !== undefined && (obj.header = message.header ? types_1.Header.toJSON(message.header) : undefined);\n    message.lastCommitInfo !== undefined && (obj.lastCommitInfo = message.lastCommitInfo ? exports.LastCommitInfo.toJSON(message.lastCommitInfo) : undefined);\n    if (message.byzantineValidators) {\n      obj.byzantineValidators = message.byzantineValidators.map(function (e) {\n        return e ? exports.Evidence.toJSON(e) : undefined;\n      });\n    } else {\n      obj.byzantineValidators = [];\n    }\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b;\n    var message = createBaseRequestBeginBlock();\n    message.hash = (_a = object.hash) !== null && _a !== void 0 ? _a : new Uint8Array();\n    message.header = object.header !== undefined && object.header !== null ? types_1.Header.fromPartial(object.header) : undefined;\n    message.lastCommitInfo = object.lastCommitInfo !== undefined && object.lastCommitInfo !== null ? exports.LastCommitInfo.fromPartial(object.lastCommitInfo) : undefined;\n    message.byzantineValidators = ((_b = object.byzantineValidators) === null || _b === void 0 ? void 0 : _b.map(function (e) {\n      return exports.Evidence.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nfunction createBaseRequestCheckTx() {\n  return {\n    tx: new Uint8Array(),\n    type: 0\n  };\n}\nexports.RequestCheckTx = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.tx.length !== 0) {\n      writer.uint32(10).bytes(message.tx);\n    }\n    if (message.type !== 0) {\n      writer.uint32(16).int32(message.type);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestCheckTx();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.tx = reader.bytes();\n          break;\n        case 2:\n          message.type = reader.int32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      tx: isSet(object.tx) ? bytesFromBase64(object.tx) : new Uint8Array(),\n      type: isSet(object.type) ? checkTxTypeFromJSON(object.type) : 0\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.tx !== undefined && (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n    message.type !== undefined && (obj.type = checkTxTypeToJSON(message.type));\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b;\n    var message = createBaseRequestCheckTx();\n    message.tx = (_a = object.tx) !== null && _a !== void 0 ? _a : new Uint8Array();\n    message.type = (_b = object.type) !== null && _b !== void 0 ? _b : 0;\n    return message;\n  }\n};\nfunction createBaseRequestDeliverTx() {\n  return {\n    tx: new Uint8Array()\n  };\n}\nexports.RequestDeliverTx = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.tx.length !== 0) {\n      writer.uint32(10).bytes(message.tx);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestDeliverTx();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.tx = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      tx: isSet(object.tx) ? bytesFromBase64(object.tx) : new Uint8Array()\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.tx !== undefined && (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseRequestDeliverTx();\n    message.tx = (_a = object.tx) !== null && _a !== void 0 ? _a : new Uint8Array();\n    return message;\n  }\n};\nfunction createBaseRequestEndBlock() {\n  return {\n    height: long_1.default.ZERO\n  };\n}\nexports.RequestEndBlock = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (!message.height.isZero()) {\n      writer.uint32(8).int64(message.height);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestEndBlock();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.height = reader.int64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      height: isSet(object.height) ? long_1.default.fromValue(object.height) : long_1.default.ZERO\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.height !== undefined && (obj.height = (message.height || long_1.default.ZERO).toString());\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseRequestEndBlock();\n    message.height = object.height !== undefined && object.height !== null ? long_1.default.fromValue(object.height) : long_1.default.ZERO;\n    return message;\n  }\n};\nfunction createBaseRequestCommit() {\n  return {};\n}\nexports.RequestCommit = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestCommit();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(_) {\n    return {};\n  },\n  toJSON: function toJSON(_) {\n    var obj = {};\n    return obj;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseRequestCommit();\n    return message;\n  }\n};\nfunction createBaseRequestListSnapshots() {\n  return {};\n}\nexports.RequestListSnapshots = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestListSnapshots();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(_) {\n    return {};\n  },\n  toJSON: function toJSON(_) {\n    var obj = {};\n    return obj;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseRequestListSnapshots();\n    return message;\n  }\n};\nfunction createBaseRequestOfferSnapshot() {\n  return {\n    snapshot: undefined,\n    appHash: new Uint8Array()\n  };\n}\nexports.RequestOfferSnapshot = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.snapshot !== undefined) {\n      exports.Snapshot.encode(message.snapshot, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.appHash.length !== 0) {\n      writer.uint32(18).bytes(message.appHash);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestOfferSnapshot();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.snapshot = exports.Snapshot.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.appHash = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      snapshot: isSet(object.snapshot) ? exports.Snapshot.fromJSON(object.snapshot) : undefined,\n      appHash: isSet(object.appHash) ? bytesFromBase64(object.appHash) : new Uint8Array()\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.snapshot !== undefined && (obj.snapshot = message.snapshot ? exports.Snapshot.toJSON(message.snapshot) : undefined);\n    message.appHash !== undefined && (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseRequestOfferSnapshot();\n    message.snapshot = object.snapshot !== undefined && object.snapshot !== null ? exports.Snapshot.fromPartial(object.snapshot) : undefined;\n    message.appHash = (_a = object.appHash) !== null && _a !== void 0 ? _a : new Uint8Array();\n    return message;\n  }\n};\nfunction createBaseRequestLoadSnapshotChunk() {\n  return {\n    height: long_1.default.UZERO,\n    format: 0,\n    chunk: 0\n  };\n}\nexports.RequestLoadSnapshotChunk = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (!message.height.isZero()) {\n      writer.uint32(8).uint64(message.height);\n    }\n    if (message.format !== 0) {\n      writer.uint32(16).uint32(message.format);\n    }\n    if (message.chunk !== 0) {\n      writer.uint32(24).uint32(message.chunk);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestLoadSnapshotChunk();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.height = reader.uint64();\n          break;\n        case 2:\n          message.format = reader.uint32();\n          break;\n        case 3:\n          message.chunk = reader.uint32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      height: isSet(object.height) ? long_1.default.fromValue(object.height) : long_1.default.UZERO,\n      format: isSet(object.format) ? Number(object.format) : 0,\n      chunk: isSet(object.chunk) ? Number(object.chunk) : 0\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.height !== undefined && (obj.height = (message.height || long_1.default.UZERO).toString());\n    message.format !== undefined && (obj.format = Math.round(message.format));\n    message.chunk !== undefined && (obj.chunk = Math.round(message.chunk));\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b;\n    var message = createBaseRequestLoadSnapshotChunk();\n    message.height = object.height !== undefined && object.height !== null ? long_1.default.fromValue(object.height) : long_1.default.UZERO;\n    message.format = (_a = object.format) !== null && _a !== void 0 ? _a : 0;\n    message.chunk = (_b = object.chunk) !== null && _b !== void 0 ? _b : 0;\n    return message;\n  }\n};\nfunction createBaseRequestApplySnapshotChunk() {\n  return {\n    index: 0,\n    chunk: new Uint8Array(),\n    sender: \"\"\n  };\n}\nexports.RequestApplySnapshotChunk = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.index !== 0) {\n      writer.uint32(8).uint32(message.index);\n    }\n    if (message.chunk.length !== 0) {\n      writer.uint32(18).bytes(message.chunk);\n    }\n    if (message.sender !== \"\") {\n      writer.uint32(26).string(message.sender);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestApplySnapshotChunk();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.index = reader.uint32();\n          break;\n        case 2:\n          message.chunk = reader.bytes();\n          break;\n        case 3:\n          message.sender = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      index: isSet(object.index) ? Number(object.index) : 0,\n      chunk: isSet(object.chunk) ? bytesFromBase64(object.chunk) : new Uint8Array(),\n      sender: isSet(object.sender) ? String(object.sender) : \"\"\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.index !== undefined && (obj.index = Math.round(message.index));\n    message.chunk !== undefined && (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n    message.sender !== undefined && (obj.sender = message.sender);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c;\n    var message = createBaseRequestApplySnapshotChunk();\n    message.index = (_a = object.index) !== null && _a !== void 0 ? _a : 0;\n    message.chunk = (_b = object.chunk) !== null && _b !== void 0 ? _b : new Uint8Array();\n    message.sender = (_c = object.sender) !== null && _c !== void 0 ? _c : \"\";\n    return message;\n  }\n};\nfunction createBaseResponse() {\n  return {\n    exception: undefined,\n    echo: undefined,\n    flush: undefined,\n    info: undefined,\n    setOption: undefined,\n    initChain: undefined,\n    query: undefined,\n    beginBlock: undefined,\n    checkTx: undefined,\n    deliverTx: undefined,\n    endBlock: undefined,\n    commit: undefined,\n    listSnapshots: undefined,\n    offerSnapshot: undefined,\n    loadSnapshotChunk: undefined,\n    applySnapshotChunk: undefined\n  };\n}\nexports.Response = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.exception !== undefined) {\n      exports.ResponseException.encode(message.exception, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.echo !== undefined) {\n      exports.ResponseEcho.encode(message.echo, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.flush !== undefined) {\n      exports.ResponseFlush.encode(message.flush, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.info !== undefined) {\n      exports.ResponseInfo.encode(message.info, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.setOption !== undefined) {\n      exports.ResponseSetOption.encode(message.setOption, writer.uint32(42).fork()).ldelim();\n    }\n    if (message.initChain !== undefined) {\n      exports.ResponseInitChain.encode(message.initChain, writer.uint32(50).fork()).ldelim();\n    }\n    if (message.query !== undefined) {\n      exports.ResponseQuery.encode(message.query, writer.uint32(58).fork()).ldelim();\n    }\n    if (message.beginBlock !== undefined) {\n      exports.ResponseBeginBlock.encode(message.beginBlock, writer.uint32(66).fork()).ldelim();\n    }\n    if (message.checkTx !== undefined) {\n      exports.ResponseCheckTx.encode(message.checkTx, writer.uint32(74).fork()).ldelim();\n    }\n    if (message.deliverTx !== undefined) {\n      exports.ResponseDeliverTx.encode(message.deliverTx, writer.uint32(82).fork()).ldelim();\n    }\n    if (message.endBlock !== undefined) {\n      exports.ResponseEndBlock.encode(message.endBlock, writer.uint32(90).fork()).ldelim();\n    }\n    if (message.commit !== undefined) {\n      exports.ResponseCommit.encode(message.commit, writer.uint32(98).fork()).ldelim();\n    }\n    if (message.listSnapshots !== undefined) {\n      exports.ResponseListSnapshots.encode(message.listSnapshots, writer.uint32(106).fork()).ldelim();\n    }\n    if (message.offerSnapshot !== undefined) {\n      exports.ResponseOfferSnapshot.encode(message.offerSnapshot, writer.uint32(114).fork()).ldelim();\n    }\n    if (message.loadSnapshotChunk !== undefined) {\n      exports.ResponseLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(122).fork()).ldelim();\n    }\n    if (message.applySnapshotChunk !== undefined) {\n      exports.ResponseApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(130).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.exception = exports.ResponseException.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.echo = exports.ResponseEcho.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.flush = exports.ResponseFlush.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.info = exports.ResponseInfo.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.setOption = exports.ResponseSetOption.decode(reader, reader.uint32());\n          break;\n        case 6:\n          message.initChain = exports.ResponseInitChain.decode(reader, reader.uint32());\n          break;\n        case 7:\n          message.query = exports.ResponseQuery.decode(reader, reader.uint32());\n          break;\n        case 8:\n          message.beginBlock = exports.ResponseBeginBlock.decode(reader, reader.uint32());\n          break;\n        case 9:\n          message.checkTx = exports.ResponseCheckTx.decode(reader, reader.uint32());\n          break;\n        case 10:\n          message.deliverTx = exports.ResponseDeliverTx.decode(reader, reader.uint32());\n          break;\n        case 11:\n          message.endBlock = exports.ResponseEndBlock.decode(reader, reader.uint32());\n          break;\n        case 12:\n          message.commit = exports.ResponseCommit.decode(reader, reader.uint32());\n          break;\n        case 13:\n          message.listSnapshots = exports.ResponseListSnapshots.decode(reader, reader.uint32());\n          break;\n        case 14:\n          message.offerSnapshot = exports.ResponseOfferSnapshot.decode(reader, reader.uint32());\n          break;\n        case 15:\n          message.loadSnapshotChunk = exports.ResponseLoadSnapshotChunk.decode(reader, reader.uint32());\n          break;\n        case 16:\n          message.applySnapshotChunk = exports.ResponseApplySnapshotChunk.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      exception: isSet(object.exception) ? exports.ResponseException.fromJSON(object.exception) : undefined,\n      echo: isSet(object.echo) ? exports.ResponseEcho.fromJSON(object.echo) : undefined,\n      flush: isSet(object.flush) ? exports.ResponseFlush.fromJSON(object.flush) : undefined,\n      info: isSet(object.info) ? exports.ResponseInfo.fromJSON(object.info) : undefined,\n      setOption: isSet(object.setOption) ? exports.ResponseSetOption.fromJSON(object.setOption) : undefined,\n      initChain: isSet(object.initChain) ? exports.ResponseInitChain.fromJSON(object.initChain) : undefined,\n      query: isSet(object.query) ? exports.ResponseQuery.fromJSON(object.query) : undefined,\n      beginBlock: isSet(object.beginBlock) ? exports.ResponseBeginBlock.fromJSON(object.beginBlock) : undefined,\n      checkTx: isSet(object.checkTx) ? exports.ResponseCheckTx.fromJSON(object.checkTx) : undefined,\n      deliverTx: isSet(object.deliverTx) ? exports.ResponseDeliverTx.fromJSON(object.deliverTx) : undefined,\n      endBlock: isSet(object.endBlock) ? exports.ResponseEndBlock.fromJSON(object.endBlock) : undefined,\n      commit: isSet(object.commit) ? exports.ResponseCommit.fromJSON(object.commit) : undefined,\n      listSnapshots: isSet(object.listSnapshots) ? exports.ResponseListSnapshots.fromJSON(object.listSnapshots) : undefined,\n      offerSnapshot: isSet(object.offerSnapshot) ? exports.ResponseOfferSnapshot.fromJSON(object.offerSnapshot) : undefined,\n      loadSnapshotChunk: isSet(object.loadSnapshotChunk) ? exports.ResponseLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk) : undefined,\n      applySnapshotChunk: isSet(object.applySnapshotChunk) ? exports.ResponseApplySnapshotChunk.fromJSON(object.applySnapshotChunk) : undefined\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.exception !== undefined && (obj.exception = message.exception ? exports.ResponseException.toJSON(message.exception) : undefined);\n    message.echo !== undefined && (obj.echo = message.echo ? exports.ResponseEcho.toJSON(message.echo) : undefined);\n    message.flush !== undefined && (obj.flush = message.flush ? exports.ResponseFlush.toJSON(message.flush) : undefined);\n    message.info !== undefined && (obj.info = message.info ? exports.ResponseInfo.toJSON(message.info) : undefined);\n    message.setOption !== undefined && (obj.setOption = message.setOption ? exports.ResponseSetOption.toJSON(message.setOption) : undefined);\n    message.initChain !== undefined && (obj.initChain = message.initChain ? exports.ResponseInitChain.toJSON(message.initChain) : undefined);\n    message.query !== undefined && (obj.query = message.query ? exports.ResponseQuery.toJSON(message.query) : undefined);\n    message.beginBlock !== undefined && (obj.beginBlock = message.beginBlock ? exports.ResponseBeginBlock.toJSON(message.beginBlock) : undefined);\n    message.checkTx !== undefined && (obj.checkTx = message.checkTx ? exports.ResponseCheckTx.toJSON(message.checkTx) : undefined);\n    message.deliverTx !== undefined && (obj.deliverTx = message.deliverTx ? exports.ResponseDeliverTx.toJSON(message.deliverTx) : undefined);\n    message.endBlock !== undefined && (obj.endBlock = message.endBlock ? exports.ResponseEndBlock.toJSON(message.endBlock) : undefined);\n    message.commit !== undefined && (obj.commit = message.commit ? exports.ResponseCommit.toJSON(message.commit) : undefined);\n    message.listSnapshots !== undefined && (obj.listSnapshots = message.listSnapshots ? exports.ResponseListSnapshots.toJSON(message.listSnapshots) : undefined);\n    message.offerSnapshot !== undefined && (obj.offerSnapshot = message.offerSnapshot ? exports.ResponseOfferSnapshot.toJSON(message.offerSnapshot) : undefined);\n    message.loadSnapshotChunk !== undefined && (obj.loadSnapshotChunk = message.loadSnapshotChunk ? exports.ResponseLoadSnapshotChunk.toJSON(message.loadSnapshotChunk) : undefined);\n    message.applySnapshotChunk !== undefined && (obj.applySnapshotChunk = message.applySnapshotChunk ? exports.ResponseApplySnapshotChunk.toJSON(message.applySnapshotChunk) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseResponse();\n    message.exception = object.exception !== undefined && object.exception !== null ? exports.ResponseException.fromPartial(object.exception) : undefined;\n    message.echo = object.echo !== undefined && object.echo !== null ? exports.ResponseEcho.fromPartial(object.echo) : undefined;\n    message.flush = object.flush !== undefined && object.flush !== null ? exports.ResponseFlush.fromPartial(object.flush) : undefined;\n    message.info = object.info !== undefined && object.info !== null ? exports.ResponseInfo.fromPartial(object.info) : undefined;\n    message.setOption = object.setOption !== undefined && object.setOption !== null ? exports.ResponseSetOption.fromPartial(object.setOption) : undefined;\n    message.initChain = object.initChain !== undefined && object.initChain !== null ? exports.ResponseInitChain.fromPartial(object.initChain) : undefined;\n    message.query = object.query !== undefined && object.query !== null ? exports.ResponseQuery.fromPartial(object.query) : undefined;\n    message.beginBlock = object.beginBlock !== undefined && object.beginBlock !== null ? exports.ResponseBeginBlock.fromPartial(object.beginBlock) : undefined;\n    message.checkTx = object.checkTx !== undefined && object.checkTx !== null ? exports.ResponseCheckTx.fromPartial(object.checkTx) : undefined;\n    message.deliverTx = object.deliverTx !== undefined && object.deliverTx !== null ? exports.ResponseDeliverTx.fromPartial(object.deliverTx) : undefined;\n    message.endBlock = object.endBlock !== undefined && object.endBlock !== null ? exports.ResponseEndBlock.fromPartial(object.endBlock) : undefined;\n    message.commit = object.commit !== undefined && object.commit !== null ? exports.ResponseCommit.fromPartial(object.commit) : undefined;\n    message.listSnapshots = object.listSnapshots !== undefined && object.listSnapshots !== null ? exports.ResponseListSnapshots.fromPartial(object.listSnapshots) : undefined;\n    message.offerSnapshot = object.offerSnapshot !== undefined && object.offerSnapshot !== null ? exports.ResponseOfferSnapshot.fromPartial(object.offerSnapshot) : undefined;\n    message.loadSnapshotChunk = object.loadSnapshotChunk !== undefined && object.loadSnapshotChunk !== null ? exports.ResponseLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk) : undefined;\n    message.applySnapshotChunk = object.applySnapshotChunk !== undefined && object.applySnapshotChunk !== null ? exports.ResponseApplySnapshotChunk.fromPartial(object.applySnapshotChunk) : undefined;\n    return message;\n  }\n};\nfunction createBaseResponseException() {\n  return {\n    error: \"\"\n  };\n}\nexports.ResponseException = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.error !== \"\") {\n      writer.uint32(10).string(message.error);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseException();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.error = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      error: isSet(object.error) ? String(object.error) : \"\"\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.error !== undefined && (obj.error = message.error);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseResponseException();\n    message.error = (_a = object.error) !== null && _a !== void 0 ? _a : \"\";\n    return message;\n  }\n};\nfunction createBaseResponseEcho() {\n  return {\n    message: \"\"\n  };\n}\nexports.ResponseEcho = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.message !== \"\") {\n      writer.uint32(10).string(message.message);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseEcho();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.message = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      message: isSet(object.message) ? String(object.message) : \"\"\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.message !== undefined && (obj.message = message.message);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseResponseEcho();\n    message.message = (_a = object.message) !== null && _a !== void 0 ? _a : \"\";\n    return message;\n  }\n};\nfunction createBaseResponseFlush() {\n  return {};\n}\nexports.ResponseFlush = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseFlush();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(_) {\n    return {};\n  },\n  toJSON: function toJSON(_) {\n    var obj = {};\n    return obj;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseResponseFlush();\n    return message;\n  }\n};\nfunction createBaseResponseInfo() {\n  return {\n    data: \"\",\n    version: \"\",\n    appVersion: long_1.default.UZERO,\n    lastBlockHeight: long_1.default.ZERO,\n    lastBlockAppHash: new Uint8Array()\n  };\n}\nexports.ResponseInfo = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.data !== \"\") {\n      writer.uint32(10).string(message.data);\n    }\n    if (message.version !== \"\") {\n      writer.uint32(18).string(message.version);\n    }\n    if (!message.appVersion.isZero()) {\n      writer.uint32(24).uint64(message.appVersion);\n    }\n    if (!message.lastBlockHeight.isZero()) {\n      writer.uint32(32).int64(message.lastBlockHeight);\n    }\n    if (message.lastBlockAppHash.length !== 0) {\n      writer.uint32(42).bytes(message.lastBlockAppHash);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseInfo();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.data = reader.string();\n          break;\n        case 2:\n          message.version = reader.string();\n          break;\n        case 3:\n          message.appVersion = reader.uint64();\n          break;\n        case 4:\n          message.lastBlockHeight = reader.int64();\n          break;\n        case 5:\n          message.lastBlockAppHash = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      data: isSet(object.data) ? String(object.data) : \"\",\n      version: isSet(object.version) ? String(object.version) : \"\",\n      appVersion: isSet(object.appVersion) ? long_1.default.fromValue(object.appVersion) : long_1.default.UZERO,\n      lastBlockHeight: isSet(object.lastBlockHeight) ? long_1.default.fromValue(object.lastBlockHeight) : long_1.default.ZERO,\n      lastBlockAppHash: isSet(object.lastBlockAppHash) ? bytesFromBase64(object.lastBlockAppHash) : new Uint8Array()\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.data !== undefined && (obj.data = message.data);\n    message.version !== undefined && (obj.version = message.version);\n    message.appVersion !== undefined && (obj.appVersion = (message.appVersion || long_1.default.UZERO).toString());\n    message.lastBlockHeight !== undefined && (obj.lastBlockHeight = (message.lastBlockHeight || long_1.default.ZERO).toString());\n    message.lastBlockAppHash !== undefined && (obj.lastBlockAppHash = base64FromBytes(message.lastBlockAppHash !== undefined ? message.lastBlockAppHash : new Uint8Array()));\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c;\n    var message = createBaseResponseInfo();\n    message.data = (_a = object.data) !== null && _a !== void 0 ? _a : \"\";\n    message.version = (_b = object.version) !== null && _b !== void 0 ? _b : \"\";\n    message.appVersion = object.appVersion !== undefined && object.appVersion !== null ? long_1.default.fromValue(object.appVersion) : long_1.default.UZERO;\n    message.lastBlockHeight = object.lastBlockHeight !== undefined && object.lastBlockHeight !== null ? long_1.default.fromValue(object.lastBlockHeight) : long_1.default.ZERO;\n    message.lastBlockAppHash = (_c = object.lastBlockAppHash) !== null && _c !== void 0 ? _c : new Uint8Array();\n    return message;\n  }\n};\nfunction createBaseResponseSetOption() {\n  return {\n    code: 0,\n    log: \"\",\n    info: \"\"\n  };\n}\nexports.ResponseSetOption = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.code !== 0) {\n      writer.uint32(8).uint32(message.code);\n    }\n    if (message.log !== \"\") {\n      writer.uint32(26).string(message.log);\n    }\n    if (message.info !== \"\") {\n      writer.uint32(34).string(message.info);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseSetOption();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.code = reader.uint32();\n          break;\n        case 3:\n          message.log = reader.string();\n          break;\n        case 4:\n          message.info = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      code: isSet(object.code) ? Number(object.code) : 0,\n      log: isSet(object.log) ? String(object.log) : \"\",\n      info: isSet(object.info) ? String(object.info) : \"\"\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.code !== undefined && (obj.code = Math.round(message.code));\n    message.log !== undefined && (obj.log = message.log);\n    message.info !== undefined && (obj.info = message.info);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c;\n    var message = createBaseResponseSetOption();\n    message.code = (_a = object.code) !== null && _a !== void 0 ? _a : 0;\n    message.log = (_b = object.log) !== null && _b !== void 0 ? _b : \"\";\n    message.info = (_c = object.info) !== null && _c !== void 0 ? _c : \"\";\n    return message;\n  }\n};\nfunction createBaseResponseInitChain() {\n  return {\n    consensusParams: undefined,\n    validators: [],\n    appHash: new Uint8Array()\n  };\n}\nexports.ResponseInitChain = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.consensusParams !== undefined) {\n      exports.ConsensusParams.encode(message.consensusParams, writer.uint32(10).fork()).ldelim();\n    }\n    var _iterator3 = _createForOfIteratorHelper(message.validators),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var v = _step3.value;\n        exports.ValidatorUpdate.encode(v, writer.uint32(18).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    if (message.appHash.length !== 0) {\n      writer.uint32(26).bytes(message.appHash);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseInitChain();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.consensusParams = exports.ConsensusParams.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.validators.push(exports.ValidatorUpdate.decode(reader, reader.uint32()));\n          break;\n        case 3:\n          message.appHash = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      consensusParams: isSet(object.consensusParams) ? exports.ConsensusParams.fromJSON(object.consensusParams) : undefined,\n      validators: Array.isArray(object === null || object === void 0 ? void 0 : object.validators) ? object.validators.map(function (e) {\n        return exports.ValidatorUpdate.fromJSON(e);\n      }) : [],\n      appHash: isSet(object.appHash) ? bytesFromBase64(object.appHash) : new Uint8Array()\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.consensusParams !== undefined && (obj.consensusParams = message.consensusParams ? exports.ConsensusParams.toJSON(message.consensusParams) : undefined);\n    if (message.validators) {\n      obj.validators = message.validators.map(function (e) {\n        return e ? exports.ValidatorUpdate.toJSON(e) : undefined;\n      });\n    } else {\n      obj.validators = [];\n    }\n    message.appHash !== undefined && (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b;\n    var message = createBaseResponseInitChain();\n    message.consensusParams = object.consensusParams !== undefined && object.consensusParams !== null ? exports.ConsensusParams.fromPartial(object.consensusParams) : undefined;\n    message.validators = ((_a = object.validators) === null || _a === void 0 ? void 0 : _a.map(function (e) {\n      return exports.ValidatorUpdate.fromPartial(e);\n    })) || [];\n    message.appHash = (_b = object.appHash) !== null && _b !== void 0 ? _b : new Uint8Array();\n    return message;\n  }\n};\nfunction createBaseResponseQuery() {\n  return {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    index: long_1.default.ZERO,\n    key: new Uint8Array(),\n    value: new Uint8Array(),\n    proofOps: undefined,\n    height: long_1.default.ZERO,\n    codespace: \"\"\n  };\n}\nexports.ResponseQuery = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.code !== 0) {\n      writer.uint32(8).uint32(message.code);\n    }\n    if (message.log !== \"\") {\n      writer.uint32(26).string(message.log);\n    }\n    if (message.info !== \"\") {\n      writer.uint32(34).string(message.info);\n    }\n    if (!message.index.isZero()) {\n      writer.uint32(40).int64(message.index);\n    }\n    if (message.key.length !== 0) {\n      writer.uint32(50).bytes(message.key);\n    }\n    if (message.value.length !== 0) {\n      writer.uint32(58).bytes(message.value);\n    }\n    if (message.proofOps !== undefined) {\n      proof_1.ProofOps.encode(message.proofOps, writer.uint32(66).fork()).ldelim();\n    }\n    if (!message.height.isZero()) {\n      writer.uint32(72).int64(message.height);\n    }\n    if (message.codespace !== \"\") {\n      writer.uint32(82).string(message.codespace);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseQuery();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.code = reader.uint32();\n          break;\n        case 3:\n          message.log = reader.string();\n          break;\n        case 4:\n          message.info = reader.string();\n          break;\n        case 5:\n          message.index = reader.int64();\n          break;\n        case 6:\n          message.key = reader.bytes();\n          break;\n        case 7:\n          message.value = reader.bytes();\n          break;\n        case 8:\n          message.proofOps = proof_1.ProofOps.decode(reader, reader.uint32());\n          break;\n        case 9:\n          message.height = reader.int64();\n          break;\n        case 10:\n          message.codespace = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      code: isSet(object.code) ? Number(object.code) : 0,\n      log: isSet(object.log) ? String(object.log) : \"\",\n      info: isSet(object.info) ? String(object.info) : \"\",\n      index: isSet(object.index) ? long_1.default.fromValue(object.index) : long_1.default.ZERO,\n      key: isSet(object.key) ? bytesFromBase64(object.key) : new Uint8Array(),\n      value: isSet(object.value) ? bytesFromBase64(object.value) : new Uint8Array(),\n      proofOps: isSet(object.proofOps) ? proof_1.ProofOps.fromJSON(object.proofOps) : undefined,\n      height: isSet(object.height) ? long_1.default.fromValue(object.height) : long_1.default.ZERO,\n      codespace: isSet(object.codespace) ? String(object.codespace) : \"\"\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.code !== undefined && (obj.code = Math.round(message.code));\n    message.log !== undefined && (obj.log = message.log);\n    message.info !== undefined && (obj.info = message.info);\n    message.index !== undefined && (obj.index = (message.index || long_1.default.ZERO).toString());\n    message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n    message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n    message.proofOps !== undefined && (obj.proofOps = message.proofOps ? proof_1.ProofOps.toJSON(message.proofOps) : undefined);\n    message.height !== undefined && (obj.height = (message.height || long_1.default.ZERO).toString());\n    message.codespace !== undefined && (obj.codespace = message.codespace);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c, _d, _e, _f;\n    var message = createBaseResponseQuery();\n    message.code = (_a = object.code) !== null && _a !== void 0 ? _a : 0;\n    message.log = (_b = object.log) !== null && _b !== void 0 ? _b : \"\";\n    message.info = (_c = object.info) !== null && _c !== void 0 ? _c : \"\";\n    message.index = object.index !== undefined && object.index !== null ? long_1.default.fromValue(object.index) : long_1.default.ZERO;\n    message.key = (_d = object.key) !== null && _d !== void 0 ? _d : new Uint8Array();\n    message.value = (_e = object.value) !== null && _e !== void 0 ? _e : new Uint8Array();\n    message.proofOps = object.proofOps !== undefined && object.proofOps !== null ? proof_1.ProofOps.fromPartial(object.proofOps) : undefined;\n    message.height = object.height !== undefined && object.height !== null ? long_1.default.fromValue(object.height) : long_1.default.ZERO;\n    message.codespace = (_f = object.codespace) !== null && _f !== void 0 ? _f : \"\";\n    return message;\n  }\n};\nfunction createBaseResponseBeginBlock() {\n  return {\n    events: []\n  };\n}\nexports.ResponseBeginBlock = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    var _iterator4 = _createForOfIteratorHelper(message.events),\n      _step4;\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var v = _step4.value;\n        exports.Event.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseBeginBlock();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.events.push(exports.Event.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      events: Array.isArray(object === null || object === void 0 ? void 0 : object.events) ? object.events.map(function (e) {\n        return exports.Event.fromJSON(e);\n      }) : []\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    if (message.events) {\n      obj.events = message.events.map(function (e) {\n        return e ? exports.Event.toJSON(e) : undefined;\n      });\n    } else {\n      obj.events = [];\n    }\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseResponseBeginBlock();\n    message.events = ((_a = object.events) === null || _a === void 0 ? void 0 : _a.map(function (e) {\n      return exports.Event.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nfunction createBaseResponseCheckTx() {\n  return {\n    code: 0,\n    data: new Uint8Array(),\n    log: \"\",\n    info: \"\",\n    gasWanted: long_1.default.ZERO,\n    gasUsed: long_1.default.ZERO,\n    events: [],\n    codespace: \"\"\n  };\n}\nexports.ResponseCheckTx = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.code !== 0) {\n      writer.uint32(8).uint32(message.code);\n    }\n    if (message.data.length !== 0) {\n      writer.uint32(18).bytes(message.data);\n    }\n    if (message.log !== \"\") {\n      writer.uint32(26).string(message.log);\n    }\n    if (message.info !== \"\") {\n      writer.uint32(34).string(message.info);\n    }\n    if (!message.gasWanted.isZero()) {\n      writer.uint32(40).int64(message.gasWanted);\n    }\n    if (!message.gasUsed.isZero()) {\n      writer.uint32(48).int64(message.gasUsed);\n    }\n    var _iterator5 = _createForOfIteratorHelper(message.events),\n      _step5;\n    try {\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        var v = _step5.value;\n        exports.Event.encode(v, writer.uint32(58).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n    if (message.codespace !== \"\") {\n      writer.uint32(66).string(message.codespace);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseCheckTx();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.code = reader.uint32();\n          break;\n        case 2:\n          message.data = reader.bytes();\n          break;\n        case 3:\n          message.log = reader.string();\n          break;\n        case 4:\n          message.info = reader.string();\n          break;\n        case 5:\n          message.gasWanted = reader.int64();\n          break;\n        case 6:\n          message.gasUsed = reader.int64();\n          break;\n        case 7:\n          message.events.push(exports.Event.decode(reader, reader.uint32()));\n          break;\n        case 8:\n          message.codespace = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      code: isSet(object.code) ? Number(object.code) : 0,\n      data: isSet(object.data) ? bytesFromBase64(object.data) : new Uint8Array(),\n      log: isSet(object.log) ? String(object.log) : \"\",\n      info: isSet(object.info) ? String(object.info) : \"\",\n      gasWanted: isSet(object.gas_wanted) ? long_1.default.fromValue(object.gas_wanted) : long_1.default.ZERO,\n      gasUsed: isSet(object.gas_used) ? long_1.default.fromValue(object.gas_used) : long_1.default.ZERO,\n      events: Array.isArray(object === null || object === void 0 ? void 0 : object.events) ? object.events.map(function (e) {\n        return exports.Event.fromJSON(e);\n      }) : [],\n      codespace: isSet(object.codespace) ? String(object.codespace) : \"\"\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.code !== undefined && (obj.code = Math.round(message.code));\n    message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n    message.log !== undefined && (obj.log = message.log);\n    message.info !== undefined && (obj.info = message.info);\n    message.gasWanted !== undefined && (obj.gas_wanted = (message.gasWanted || long_1.default.ZERO).toString());\n    message.gasUsed !== undefined && (obj.gas_used = (message.gasUsed || long_1.default.ZERO).toString());\n    if (message.events) {\n      obj.events = message.events.map(function (e) {\n        return e ? exports.Event.toJSON(e) : undefined;\n      });\n    } else {\n      obj.events = [];\n    }\n    message.codespace !== undefined && (obj.codespace = message.codespace);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c, _d, _e, _f;\n    var message = createBaseResponseCheckTx();\n    message.code = (_a = object.code) !== null && _a !== void 0 ? _a : 0;\n    message.data = (_b = object.data) !== null && _b !== void 0 ? _b : new Uint8Array();\n    message.log = (_c = object.log) !== null && _c !== void 0 ? _c : \"\";\n    message.info = (_d = object.info) !== null && _d !== void 0 ? _d : \"\";\n    message.gasWanted = object.gasWanted !== undefined && object.gasWanted !== null ? long_1.default.fromValue(object.gasWanted) : long_1.default.ZERO;\n    message.gasUsed = object.gasUsed !== undefined && object.gasUsed !== null ? long_1.default.fromValue(object.gasUsed) : long_1.default.ZERO;\n    message.events = ((_e = object.events) === null || _e === void 0 ? void 0 : _e.map(function (e) {\n      return exports.Event.fromPartial(e);\n    })) || [];\n    message.codespace = (_f = object.codespace) !== null && _f !== void 0 ? _f : \"\";\n    return message;\n  }\n};\nfunction createBaseResponseDeliverTx() {\n  return {\n    code: 0,\n    data: new Uint8Array(),\n    log: \"\",\n    info: \"\",\n    gasWanted: long_1.default.ZERO,\n    gasUsed: long_1.default.ZERO,\n    events: [],\n    codespace: \"\"\n  };\n}\nexports.ResponseDeliverTx = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.code !== 0) {\n      writer.uint32(8).uint32(message.code);\n    }\n    if (message.data.length !== 0) {\n      writer.uint32(18).bytes(message.data);\n    }\n    if (message.log !== \"\") {\n      writer.uint32(26).string(message.log);\n    }\n    if (message.info !== \"\") {\n      writer.uint32(34).string(message.info);\n    }\n    if (!message.gasWanted.isZero()) {\n      writer.uint32(40).int64(message.gasWanted);\n    }\n    if (!message.gasUsed.isZero()) {\n      writer.uint32(48).int64(message.gasUsed);\n    }\n    var _iterator6 = _createForOfIteratorHelper(message.events),\n      _step6;\n    try {\n      for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n        var v = _step6.value;\n        exports.Event.encode(v, writer.uint32(58).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator6.e(err);\n    } finally {\n      _iterator6.f();\n    }\n    if (message.codespace !== \"\") {\n      writer.uint32(66).string(message.codespace);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseDeliverTx();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.code = reader.uint32();\n          break;\n        case 2:\n          message.data = reader.bytes();\n          break;\n        case 3:\n          message.log = reader.string();\n          break;\n        case 4:\n          message.info = reader.string();\n          break;\n        case 5:\n          message.gasWanted = reader.int64();\n          break;\n        case 6:\n          message.gasUsed = reader.int64();\n          break;\n        case 7:\n          message.events.push(exports.Event.decode(reader, reader.uint32()));\n          break;\n        case 8:\n          message.codespace = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      code: isSet(object.code) ? Number(object.code) : 0,\n      data: isSet(object.data) ? bytesFromBase64(object.data) : new Uint8Array(),\n      log: isSet(object.log) ? String(object.log) : \"\",\n      info: isSet(object.info) ? String(object.info) : \"\",\n      gasWanted: isSet(object.gas_wanted) ? long_1.default.fromValue(object.gas_wanted) : long_1.default.ZERO,\n      gasUsed: isSet(object.gas_used) ? long_1.default.fromValue(object.gas_used) : long_1.default.ZERO,\n      events: Array.isArray(object === null || object === void 0 ? void 0 : object.events) ? object.events.map(function (e) {\n        return exports.Event.fromJSON(e);\n      }) : [],\n      codespace: isSet(object.codespace) ? String(object.codespace) : \"\"\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.code !== undefined && (obj.code = Math.round(message.code));\n    message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n    message.log !== undefined && (obj.log = message.log);\n    message.info !== undefined && (obj.info = message.info);\n    message.gasWanted !== undefined && (obj.gas_wanted = (message.gasWanted || long_1.default.ZERO).toString());\n    message.gasUsed !== undefined && (obj.gas_used = (message.gasUsed || long_1.default.ZERO).toString());\n    if (message.events) {\n      obj.events = message.events.map(function (e) {\n        return e ? exports.Event.toJSON(e) : undefined;\n      });\n    } else {\n      obj.events = [];\n    }\n    message.codespace !== undefined && (obj.codespace = message.codespace);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c, _d, _e, _f;\n    var message = createBaseResponseDeliverTx();\n    message.code = (_a = object.code) !== null && _a !== void 0 ? _a : 0;\n    message.data = (_b = object.data) !== null && _b !== void 0 ? _b : new Uint8Array();\n    message.log = (_c = object.log) !== null && _c !== void 0 ? _c : \"\";\n    message.info = (_d = object.info) !== null && _d !== void 0 ? _d : \"\";\n    message.gasWanted = object.gasWanted !== undefined && object.gasWanted !== null ? long_1.default.fromValue(object.gasWanted) : long_1.default.ZERO;\n    message.gasUsed = object.gasUsed !== undefined && object.gasUsed !== null ? long_1.default.fromValue(object.gasUsed) : long_1.default.ZERO;\n    message.events = ((_e = object.events) === null || _e === void 0 ? void 0 : _e.map(function (e) {\n      return exports.Event.fromPartial(e);\n    })) || [];\n    message.codespace = (_f = object.codespace) !== null && _f !== void 0 ? _f : \"\";\n    return message;\n  }\n};\nfunction createBaseResponseEndBlock() {\n  return {\n    validatorUpdates: [],\n    consensusParamUpdates: undefined,\n    events: []\n  };\n}\nexports.ResponseEndBlock = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    var _iterator7 = _createForOfIteratorHelper(message.validatorUpdates),\n      _step7;\n    try {\n      for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n        var v = _step7.value;\n        exports.ValidatorUpdate.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator7.e(err);\n    } finally {\n      _iterator7.f();\n    }\n    if (message.consensusParamUpdates !== undefined) {\n      exports.ConsensusParams.encode(message.consensusParamUpdates, writer.uint32(18).fork()).ldelim();\n    }\n    var _iterator8 = _createForOfIteratorHelper(message.events),\n      _step8;\n    try {\n      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n        var _v = _step8.value;\n        exports.Event.encode(_v, writer.uint32(26).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator8.e(err);\n    } finally {\n      _iterator8.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseEndBlock();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.validatorUpdates.push(exports.ValidatorUpdate.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.consensusParamUpdates = exports.ConsensusParams.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.events.push(exports.Event.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      validatorUpdates: Array.isArray(object === null || object === void 0 ? void 0 : object.validatorUpdates) ? object.validatorUpdates.map(function (e) {\n        return exports.ValidatorUpdate.fromJSON(e);\n      }) : [],\n      consensusParamUpdates: isSet(object.consensusParamUpdates) ? exports.ConsensusParams.fromJSON(object.consensusParamUpdates) : undefined,\n      events: Array.isArray(object === null || object === void 0 ? void 0 : object.events) ? object.events.map(function (e) {\n        return exports.Event.fromJSON(e);\n      }) : []\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    if (message.validatorUpdates) {\n      obj.validatorUpdates = message.validatorUpdates.map(function (e) {\n        return e ? exports.ValidatorUpdate.toJSON(e) : undefined;\n      });\n    } else {\n      obj.validatorUpdates = [];\n    }\n    message.consensusParamUpdates !== undefined && (obj.consensusParamUpdates = message.consensusParamUpdates ? exports.ConsensusParams.toJSON(message.consensusParamUpdates) : undefined);\n    if (message.events) {\n      obj.events = message.events.map(function (e) {\n        return e ? exports.Event.toJSON(e) : undefined;\n      });\n    } else {\n      obj.events = [];\n    }\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b;\n    var message = createBaseResponseEndBlock();\n    message.validatorUpdates = ((_a = object.validatorUpdates) === null || _a === void 0 ? void 0 : _a.map(function (e) {\n      return exports.ValidatorUpdate.fromPartial(e);\n    })) || [];\n    message.consensusParamUpdates = object.consensusParamUpdates !== undefined && object.consensusParamUpdates !== null ? exports.ConsensusParams.fromPartial(object.consensusParamUpdates) : undefined;\n    message.events = ((_b = object.events) === null || _b === void 0 ? void 0 : _b.map(function (e) {\n      return exports.Event.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nfunction createBaseResponseCommit() {\n  return {\n    data: new Uint8Array(),\n    retainHeight: long_1.default.ZERO\n  };\n}\nexports.ResponseCommit = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.data.length !== 0) {\n      writer.uint32(18).bytes(message.data);\n    }\n    if (!message.retainHeight.isZero()) {\n      writer.uint32(24).int64(message.retainHeight);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseCommit();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 2:\n          message.data = reader.bytes();\n          break;\n        case 3:\n          message.retainHeight = reader.int64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      data: isSet(object.data) ? bytesFromBase64(object.data) : new Uint8Array(),\n      retainHeight: isSet(object.retainHeight) ? long_1.default.fromValue(object.retainHeight) : long_1.default.ZERO\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n    message.retainHeight !== undefined && (obj.retainHeight = (message.retainHeight || long_1.default.ZERO).toString());\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseResponseCommit();\n    message.data = (_a = object.data) !== null && _a !== void 0 ? _a : new Uint8Array();\n    message.retainHeight = object.retainHeight !== undefined && object.retainHeight !== null ? long_1.default.fromValue(object.retainHeight) : long_1.default.ZERO;\n    return message;\n  }\n};\nfunction createBaseResponseListSnapshots() {\n  return {\n    snapshots: []\n  };\n}\nexports.ResponseListSnapshots = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    var _iterator9 = _createForOfIteratorHelper(message.snapshots),\n      _step9;\n    try {\n      for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n        var v = _step9.value;\n        exports.Snapshot.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator9.e(err);\n    } finally {\n      _iterator9.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseListSnapshots();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.snapshots.push(exports.Snapshot.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      snapshots: Array.isArray(object === null || object === void 0 ? void 0 : object.snapshots) ? object.snapshots.map(function (e) {\n        return exports.Snapshot.fromJSON(e);\n      }) : []\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    if (message.snapshots) {\n      obj.snapshots = message.snapshots.map(function (e) {\n        return e ? exports.Snapshot.toJSON(e) : undefined;\n      });\n    } else {\n      obj.snapshots = [];\n    }\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseResponseListSnapshots();\n    message.snapshots = ((_a = object.snapshots) === null || _a === void 0 ? void 0 : _a.map(function (e) {\n      return exports.Snapshot.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nfunction createBaseResponseOfferSnapshot() {\n  return {\n    result: 0\n  };\n}\nexports.ResponseOfferSnapshot = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.result !== 0) {\n      writer.uint32(8).int32(message.result);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseOfferSnapshot();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.result = reader.int32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      result: isSet(object.result) ? responseOfferSnapshot_ResultFromJSON(object.result) : 0\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.result !== undefined && (obj.result = responseOfferSnapshot_ResultToJSON(message.result));\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseResponseOfferSnapshot();\n    message.result = (_a = object.result) !== null && _a !== void 0 ? _a : 0;\n    return message;\n  }\n};\nfunction createBaseResponseLoadSnapshotChunk() {\n  return {\n    chunk: new Uint8Array()\n  };\n}\nexports.ResponseLoadSnapshotChunk = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.chunk.length !== 0) {\n      writer.uint32(10).bytes(message.chunk);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseLoadSnapshotChunk();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.chunk = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      chunk: isSet(object.chunk) ? bytesFromBase64(object.chunk) : new Uint8Array()\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.chunk !== undefined && (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseResponseLoadSnapshotChunk();\n    message.chunk = (_a = object.chunk) !== null && _a !== void 0 ? _a : new Uint8Array();\n    return message;\n  }\n};\nfunction createBaseResponseApplySnapshotChunk() {\n  return {\n    result: 0,\n    refetchChunks: [],\n    rejectSenders: []\n  };\n}\nexports.ResponseApplySnapshotChunk = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.result !== 0) {\n      writer.uint32(8).int32(message.result);\n    }\n    writer.uint32(18).fork();\n    var _iterator10 = _createForOfIteratorHelper(message.refetchChunks),\n      _step10;\n    try {\n      for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n        var v = _step10.value;\n        writer.uint32(v);\n      }\n    } catch (err) {\n      _iterator10.e(err);\n    } finally {\n      _iterator10.f();\n    }\n    writer.ldelim();\n    var _iterator11 = _createForOfIteratorHelper(message.rejectSenders),\n      _step11;\n    try {\n      for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n        var _v2 = _step11.value;\n        writer.uint32(26).string(_v2);\n      }\n    } catch (err) {\n      _iterator11.e(err);\n    } finally {\n      _iterator11.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseApplySnapshotChunk();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.result = reader.int32();\n          break;\n        case 2:\n          if ((tag & 7) === 2) {\n            var end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.refetchChunks.push(reader.uint32());\n            }\n          } else {\n            message.refetchChunks.push(reader.uint32());\n          }\n          break;\n        case 3:\n          message.rejectSenders.push(reader.string());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      result: isSet(object.result) ? responseApplySnapshotChunk_ResultFromJSON(object.result) : 0,\n      refetchChunks: Array.isArray(object === null || object === void 0 ? void 0 : object.refetchChunks) ? object.refetchChunks.map(function (e) {\n        return Number(e);\n      }) : [],\n      rejectSenders: Array.isArray(object === null || object === void 0 ? void 0 : object.rejectSenders) ? object.rejectSenders.map(function (e) {\n        return String(e);\n      }) : []\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.result !== undefined && (obj.result = responseApplySnapshotChunk_ResultToJSON(message.result));\n    if (message.refetchChunks) {\n      obj.refetchChunks = message.refetchChunks.map(function (e) {\n        return Math.round(e);\n      });\n    } else {\n      obj.refetchChunks = [];\n    }\n    if (message.rejectSenders) {\n      obj.rejectSenders = message.rejectSenders.map(function (e) {\n        return e;\n      });\n    } else {\n      obj.rejectSenders = [];\n    }\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c;\n    var message = createBaseResponseApplySnapshotChunk();\n    message.result = (_a = object.result) !== null && _a !== void 0 ? _a : 0;\n    message.refetchChunks = ((_b = object.refetchChunks) === null || _b === void 0 ? void 0 : _b.map(function (e) {\n      return e;\n    })) || [];\n    message.rejectSenders = ((_c = object.rejectSenders) === null || _c === void 0 ? void 0 : _c.map(function (e) {\n      return e;\n    })) || [];\n    return message;\n  }\n};\nfunction createBaseConsensusParams() {\n  return {\n    block: undefined,\n    evidence: undefined,\n    validator: undefined,\n    version: undefined\n  };\n}\nexports.ConsensusParams = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.block !== undefined) {\n      exports.BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.evidence !== undefined) {\n      params_1.EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.validator !== undefined) {\n      params_1.ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.version !== undefined) {\n      params_1.VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseConsensusParams();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.block = exports.BlockParams.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.evidence = params_1.EvidenceParams.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.validator = params_1.ValidatorParams.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.version = params_1.VersionParams.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      block: isSet(object.block) ? exports.BlockParams.fromJSON(object.block) : undefined,\n      evidence: isSet(object.evidence) ? params_1.EvidenceParams.fromJSON(object.evidence) : undefined,\n      validator: isSet(object.validator) ? params_1.ValidatorParams.fromJSON(object.validator) : undefined,\n      version: isSet(object.version) ? params_1.VersionParams.fromJSON(object.version) : undefined\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.block !== undefined && (obj.block = message.block ? exports.BlockParams.toJSON(message.block) : undefined);\n    message.evidence !== undefined && (obj.evidence = message.evidence ? params_1.EvidenceParams.toJSON(message.evidence) : undefined);\n    message.validator !== undefined && (obj.validator = message.validator ? params_1.ValidatorParams.toJSON(message.validator) : undefined);\n    message.version !== undefined && (obj.version = message.version ? params_1.VersionParams.toJSON(message.version) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseConsensusParams();\n    message.block = object.block !== undefined && object.block !== null ? exports.BlockParams.fromPartial(object.block) : undefined;\n    message.evidence = object.evidence !== undefined && object.evidence !== null ? params_1.EvidenceParams.fromPartial(object.evidence) : undefined;\n    message.validator = object.validator !== undefined && object.validator !== null ? params_1.ValidatorParams.fromPartial(object.validator) : undefined;\n    message.version = object.version !== undefined && object.version !== null ? params_1.VersionParams.fromPartial(object.version) : undefined;\n    return message;\n  }\n};\nfunction createBaseBlockParams() {\n  return {\n    maxBytes: long_1.default.ZERO,\n    maxGas: long_1.default.ZERO\n  };\n}\nexports.BlockParams = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (!message.maxBytes.isZero()) {\n      writer.uint32(8).int64(message.maxBytes);\n    }\n    if (!message.maxGas.isZero()) {\n      writer.uint32(16).int64(message.maxGas);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseBlockParams();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.maxBytes = reader.int64();\n          break;\n        case 2:\n          message.maxGas = reader.int64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      maxBytes: isSet(object.maxBytes) ? long_1.default.fromValue(object.maxBytes) : long_1.default.ZERO,\n      maxGas: isSet(object.maxGas) ? long_1.default.fromValue(object.maxGas) : long_1.default.ZERO\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.maxBytes !== undefined && (obj.maxBytes = (message.maxBytes || long_1.default.ZERO).toString());\n    message.maxGas !== undefined && (obj.maxGas = (message.maxGas || long_1.default.ZERO).toString());\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseBlockParams();\n    message.maxBytes = object.maxBytes !== undefined && object.maxBytes !== null ? long_1.default.fromValue(object.maxBytes) : long_1.default.ZERO;\n    message.maxGas = object.maxGas !== undefined && object.maxGas !== null ? long_1.default.fromValue(object.maxGas) : long_1.default.ZERO;\n    return message;\n  }\n};\nfunction createBaseLastCommitInfo() {\n  return {\n    round: 0,\n    votes: []\n  };\n}\nexports.LastCommitInfo = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.round !== 0) {\n      writer.uint32(8).int32(message.round);\n    }\n    var _iterator12 = _createForOfIteratorHelper(message.votes),\n      _step12;\n    try {\n      for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n        var v = _step12.value;\n        exports.VoteInfo.encode(v, writer.uint32(18).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator12.e(err);\n    } finally {\n      _iterator12.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseLastCommitInfo();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.round = reader.int32();\n          break;\n        case 2:\n          message.votes.push(exports.VoteInfo.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      round: isSet(object.round) ? Number(object.round) : 0,\n      votes: Array.isArray(object === null || object === void 0 ? void 0 : object.votes) ? object.votes.map(function (e) {\n        return exports.VoteInfo.fromJSON(e);\n      }) : []\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.round !== undefined && (obj.round = Math.round(message.round));\n    if (message.votes) {\n      obj.votes = message.votes.map(function (e) {\n        return e ? exports.VoteInfo.toJSON(e) : undefined;\n      });\n    } else {\n      obj.votes = [];\n    }\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b;\n    var message = createBaseLastCommitInfo();\n    message.round = (_a = object.round) !== null && _a !== void 0 ? _a : 0;\n    message.votes = ((_b = object.votes) === null || _b === void 0 ? void 0 : _b.map(function (e) {\n      return exports.VoteInfo.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nfunction createBaseEvent() {\n  return {\n    type: \"\",\n    attributes: []\n  };\n}\nexports.Event = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.type !== \"\") {\n      writer.uint32(10).string(message.type);\n    }\n    var _iterator13 = _createForOfIteratorHelper(message.attributes),\n      _step13;\n    try {\n      for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n        var v = _step13.value;\n        exports.EventAttribute.encode(v, writer.uint32(18).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator13.e(err);\n    } finally {\n      _iterator13.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseEvent();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.type = reader.string();\n          break;\n        case 2:\n          message.attributes.push(exports.EventAttribute.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      type: isSet(object.type) ? String(object.type) : \"\",\n      attributes: Array.isArray(object === null || object === void 0 ? void 0 : object.attributes) ? object.attributes.map(function (e) {\n        return exports.EventAttribute.fromJSON(e);\n      }) : []\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.type !== undefined && (obj.type = message.type);\n    if (message.attributes) {\n      obj.attributes = message.attributes.map(function (e) {\n        return e ? exports.EventAttribute.toJSON(e) : undefined;\n      });\n    } else {\n      obj.attributes = [];\n    }\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b;\n    var message = createBaseEvent();\n    message.type = (_a = object.type) !== null && _a !== void 0 ? _a : \"\";\n    message.attributes = ((_b = object.attributes) === null || _b === void 0 ? void 0 : _b.map(function (e) {\n      return exports.EventAttribute.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nfunction createBaseEventAttribute() {\n  return {\n    key: new Uint8Array(),\n    value: new Uint8Array(),\n    index: false\n  };\n}\nexports.EventAttribute = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.key.length !== 0) {\n      writer.uint32(10).bytes(message.key);\n    }\n    if (message.value.length !== 0) {\n      writer.uint32(18).bytes(message.value);\n    }\n    if (message.index === true) {\n      writer.uint32(24).bool(message.index);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseEventAttribute();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.bytes();\n          break;\n        case 2:\n          message.value = reader.bytes();\n          break;\n        case 3:\n          message.index = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      key: isSet(object.key) ? bytesFromBase64(object.key) : new Uint8Array(),\n      value: isSet(object.value) ? bytesFromBase64(object.value) : new Uint8Array(),\n      index: isSet(object.index) ? Boolean(object.index) : false\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n    message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n    message.index !== undefined && (obj.index = message.index);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c;\n    var message = createBaseEventAttribute();\n    message.key = (_a = object.key) !== null && _a !== void 0 ? _a : new Uint8Array();\n    message.value = (_b = object.value) !== null && _b !== void 0 ? _b : new Uint8Array();\n    message.index = (_c = object.index) !== null && _c !== void 0 ? _c : false;\n    return message;\n  }\n};\nfunction createBaseTxResult() {\n  return {\n    height: long_1.default.ZERO,\n    index: 0,\n    tx: new Uint8Array(),\n    result: undefined\n  };\n}\nexports.TxResult = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (!message.height.isZero()) {\n      writer.uint32(8).int64(message.height);\n    }\n    if (message.index !== 0) {\n      writer.uint32(16).uint32(message.index);\n    }\n    if (message.tx.length !== 0) {\n      writer.uint32(26).bytes(message.tx);\n    }\n    if (message.result !== undefined) {\n      exports.ResponseDeliverTx.encode(message.result, writer.uint32(34).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseTxResult();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.height = reader.int64();\n          break;\n        case 2:\n          message.index = reader.uint32();\n          break;\n        case 3:\n          message.tx = reader.bytes();\n          break;\n        case 4:\n          message.result = exports.ResponseDeliverTx.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      height: isSet(object.height) ? long_1.default.fromValue(object.height) : long_1.default.ZERO,\n      index: isSet(object.index) ? Number(object.index) : 0,\n      tx: isSet(object.tx) ? bytesFromBase64(object.tx) : new Uint8Array(),\n      result: isSet(object.result) ? exports.ResponseDeliverTx.fromJSON(object.result) : undefined\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.height !== undefined && (obj.height = (message.height || long_1.default.ZERO).toString());\n    message.index !== undefined && (obj.index = Math.round(message.index));\n    message.tx !== undefined && (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n    message.result !== undefined && (obj.result = message.result ? exports.ResponseDeliverTx.toJSON(message.result) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b;\n    var message = createBaseTxResult();\n    message.height = object.height !== undefined && object.height !== null ? long_1.default.fromValue(object.height) : long_1.default.ZERO;\n    message.index = (_a = object.index) !== null && _a !== void 0 ? _a : 0;\n    message.tx = (_b = object.tx) !== null && _b !== void 0 ? _b : new Uint8Array();\n    message.result = object.result !== undefined && object.result !== null ? exports.ResponseDeliverTx.fromPartial(object.result) : undefined;\n    return message;\n  }\n};\nfunction createBaseValidator() {\n  return {\n    address: new Uint8Array(),\n    power: long_1.default.ZERO\n  };\n}\nexports.Validator = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.address.length !== 0) {\n      writer.uint32(10).bytes(message.address);\n    }\n    if (!message.power.isZero()) {\n      writer.uint32(24).int64(message.power);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseValidator();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.address = reader.bytes();\n          break;\n        case 3:\n          message.power = reader.int64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      address: isSet(object.address) ? bytesFromBase64(object.address) : new Uint8Array(),\n      power: isSet(object.power) ? long_1.default.fromValue(object.power) : long_1.default.ZERO\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.address !== undefined && (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n    message.power !== undefined && (obj.power = (message.power || long_1.default.ZERO).toString());\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseValidator();\n    message.address = (_a = object.address) !== null && _a !== void 0 ? _a : new Uint8Array();\n    message.power = object.power !== undefined && object.power !== null ? long_1.default.fromValue(object.power) : long_1.default.ZERO;\n    return message;\n  }\n};\nfunction createBaseValidatorUpdate() {\n  return {\n    pubKey: undefined,\n    power: long_1.default.ZERO\n  };\n}\nexports.ValidatorUpdate = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.pubKey !== undefined) {\n      keys_1.PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n    }\n    if (!message.power.isZero()) {\n      writer.uint32(16).int64(message.power);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseValidatorUpdate();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.pubKey = keys_1.PublicKey.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.power = reader.int64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      pubKey: isSet(object.pubKey) ? keys_1.PublicKey.fromJSON(object.pubKey) : undefined,\n      power: isSet(object.power) ? long_1.default.fromValue(object.power) : long_1.default.ZERO\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.pubKey !== undefined && (obj.pubKey = message.pubKey ? keys_1.PublicKey.toJSON(message.pubKey) : undefined);\n    message.power !== undefined && (obj.power = (message.power || long_1.default.ZERO).toString());\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseValidatorUpdate();\n    message.pubKey = object.pubKey !== undefined && object.pubKey !== null ? keys_1.PublicKey.fromPartial(object.pubKey) : undefined;\n    message.power = object.power !== undefined && object.power !== null ? long_1.default.fromValue(object.power) : long_1.default.ZERO;\n    return message;\n  }\n};\nfunction createBaseVoteInfo() {\n  return {\n    validator: undefined,\n    signedLastBlock: false\n  };\n}\nexports.VoteInfo = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.validator !== undefined) {\n      exports.Validator.encode(message.validator, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.signedLastBlock === true) {\n      writer.uint32(16).bool(message.signedLastBlock);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseVoteInfo();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.validator = exports.Validator.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.signedLastBlock = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      validator: isSet(object.validator) ? exports.Validator.fromJSON(object.validator) : undefined,\n      signedLastBlock: isSet(object.signedLastBlock) ? Boolean(object.signedLastBlock) : false\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.validator !== undefined && (obj.validator = message.validator ? exports.Validator.toJSON(message.validator) : undefined);\n    message.signedLastBlock !== undefined && (obj.signedLastBlock = message.signedLastBlock);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseVoteInfo();\n    message.validator = object.validator !== undefined && object.validator !== null ? exports.Validator.fromPartial(object.validator) : undefined;\n    message.signedLastBlock = (_a = object.signedLastBlock) !== null && _a !== void 0 ? _a : false;\n    return message;\n  }\n};\nfunction createBaseEvidence() {\n  return {\n    type: 0,\n    validator: undefined,\n    height: long_1.default.ZERO,\n    time: undefined,\n    totalVotingPower: long_1.default.ZERO\n  };\n}\nexports.Evidence = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.type !== 0) {\n      writer.uint32(8).int32(message.type);\n    }\n    if (message.validator !== undefined) {\n      exports.Validator.encode(message.validator, writer.uint32(18).fork()).ldelim();\n    }\n    if (!message.height.isZero()) {\n      writer.uint32(24).int64(message.height);\n    }\n    if (message.time !== undefined) {\n      timestamp_1.Timestamp.encode(message.time, writer.uint32(34).fork()).ldelim();\n    }\n    if (!message.totalVotingPower.isZero()) {\n      writer.uint32(40).int64(message.totalVotingPower);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseEvidence();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.type = reader.int32();\n          break;\n        case 2:\n          message.validator = exports.Validator.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.height = reader.int64();\n          break;\n        case 4:\n          message.time = timestamp_1.Timestamp.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.totalVotingPower = reader.int64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      type: isSet(object.type) ? evidenceTypeFromJSON(object.type) : 0,\n      validator: isSet(object.validator) ? exports.Validator.fromJSON(object.validator) : undefined,\n      height: isSet(object.height) ? long_1.default.fromValue(object.height) : long_1.default.ZERO,\n      time: isSet(object.time) ? fromJsonTimestamp(object.time) : undefined,\n      totalVotingPower: isSet(object.totalVotingPower) ? long_1.default.fromValue(object.totalVotingPower) : long_1.default.ZERO\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.type !== undefined && (obj.type = evidenceTypeToJSON(message.type));\n    message.validator !== undefined && (obj.validator = message.validator ? exports.Validator.toJSON(message.validator) : undefined);\n    message.height !== undefined && (obj.height = (message.height || long_1.default.ZERO).toString());\n    message.time !== undefined && (obj.time = fromTimestamp(message.time).toISOString());\n    message.totalVotingPower !== undefined && (obj.totalVotingPower = (message.totalVotingPower || long_1.default.ZERO).toString());\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseEvidence();\n    message.type = (_a = object.type) !== null && _a !== void 0 ? _a : 0;\n    message.validator = object.validator !== undefined && object.validator !== null ? exports.Validator.fromPartial(object.validator) : undefined;\n    message.height = object.height !== undefined && object.height !== null ? long_1.default.fromValue(object.height) : long_1.default.ZERO;\n    message.time = object.time !== undefined && object.time !== null ? timestamp_1.Timestamp.fromPartial(object.time) : undefined;\n    message.totalVotingPower = object.totalVotingPower !== undefined && object.totalVotingPower !== null ? long_1.default.fromValue(object.totalVotingPower) : long_1.default.ZERO;\n    return message;\n  }\n};\nfunction createBaseSnapshot() {\n  return {\n    height: long_1.default.UZERO,\n    format: 0,\n    chunks: 0,\n    hash: new Uint8Array(),\n    metadata: new Uint8Array()\n  };\n}\nexports.Snapshot = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (!message.height.isZero()) {\n      writer.uint32(8).uint64(message.height);\n    }\n    if (message.format !== 0) {\n      writer.uint32(16).uint32(message.format);\n    }\n    if (message.chunks !== 0) {\n      writer.uint32(24).uint32(message.chunks);\n    }\n    if (message.hash.length !== 0) {\n      writer.uint32(34).bytes(message.hash);\n    }\n    if (message.metadata.length !== 0) {\n      writer.uint32(42).bytes(message.metadata);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseSnapshot();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.height = reader.uint64();\n          break;\n        case 2:\n          message.format = reader.uint32();\n          break;\n        case 3:\n          message.chunks = reader.uint32();\n          break;\n        case 4:\n          message.hash = reader.bytes();\n          break;\n        case 5:\n          message.metadata = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      height: isSet(object.height) ? long_1.default.fromValue(object.height) : long_1.default.UZERO,\n      format: isSet(object.format) ? Number(object.format) : 0,\n      chunks: isSet(object.chunks) ? Number(object.chunks) : 0,\n      hash: isSet(object.hash) ? bytesFromBase64(object.hash) : new Uint8Array(),\n      metadata: isSet(object.metadata) ? bytesFromBase64(object.metadata) : new Uint8Array()\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.height !== undefined && (obj.height = (message.height || long_1.default.UZERO).toString());\n    message.format !== undefined && (obj.format = Math.round(message.format));\n    message.chunks !== undefined && (obj.chunks = Math.round(message.chunks));\n    message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n    message.metadata !== undefined && (obj.metadata = base64FromBytes(message.metadata !== undefined ? message.metadata : new Uint8Array()));\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c, _d;\n    var message = createBaseSnapshot();\n    message.height = object.height !== undefined && object.height !== null ? long_1.default.fromValue(object.height) : long_1.default.UZERO;\n    message.format = (_a = object.format) !== null && _a !== void 0 ? _a : 0;\n    message.chunks = (_b = object.chunks) !== null && _b !== void 0 ? _b : 0;\n    message.hash = (_c = object.hash) !== null && _c !== void 0 ? _c : new Uint8Array();\n    message.metadata = (_d = object.metadata) !== null && _d !== void 0 ? _d : new Uint8Array();\n    return message;\n  }\n};\nvar ABCIApplicationClientImpl = /*#__PURE__*/function () {\n  function ABCIApplicationClientImpl(rpc) {\n    _classCallCheck(this, ABCIApplicationClientImpl);\n    this.rpc = rpc;\n    this.Echo = this.Echo.bind(this);\n    this.Flush = this.Flush.bind(this);\n    this.Info = this.Info.bind(this);\n    this.SetOption = this.SetOption.bind(this);\n    this.DeliverTx = this.DeliverTx.bind(this);\n    this.CheckTx = this.CheckTx.bind(this);\n    this.Query = this.Query.bind(this);\n    this.Commit = this.Commit.bind(this);\n    this.InitChain = this.InitChain.bind(this);\n    this.BeginBlock = this.BeginBlock.bind(this);\n    this.EndBlock = this.EndBlock.bind(this);\n    this.ListSnapshots = this.ListSnapshots.bind(this);\n    this.OfferSnapshot = this.OfferSnapshot.bind(this);\n    this.LoadSnapshotChunk = this.LoadSnapshotChunk.bind(this);\n    this.ApplySnapshotChunk = this.ApplySnapshotChunk.bind(this);\n  }\n  _createClass(ABCIApplicationClientImpl, [{\n    key: \"Echo\",\n    value: function Echo(request) {\n      var data = exports.RequestEcho.encode(request).finish();\n      var promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Echo\", data);\n      return promise.then(function (data) {\n        return exports.ResponseEcho.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }, {\n    key: \"Flush\",\n    value: function Flush(request) {\n      var data = exports.RequestFlush.encode(request).finish();\n      var promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Flush\", data);\n      return promise.then(function (data) {\n        return exports.ResponseFlush.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }, {\n    key: \"Info\",\n    value: function Info(request) {\n      var data = exports.RequestInfo.encode(request).finish();\n      var promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Info\", data);\n      return promise.then(function (data) {\n        return exports.ResponseInfo.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }, {\n    key: \"SetOption\",\n    value: function SetOption(request) {\n      var data = exports.RequestSetOption.encode(request).finish();\n      var promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"SetOption\", data);\n      return promise.then(function (data) {\n        return exports.ResponseSetOption.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }, {\n    key: \"DeliverTx\",\n    value: function DeliverTx(request) {\n      var data = exports.RequestDeliverTx.encode(request).finish();\n      var promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"DeliverTx\", data);\n      return promise.then(function (data) {\n        return exports.ResponseDeliverTx.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }, {\n    key: \"CheckTx\",\n    value: function CheckTx(request) {\n      var data = exports.RequestCheckTx.encode(request).finish();\n      var promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"CheckTx\", data);\n      return promise.then(function (data) {\n        return exports.ResponseCheckTx.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }, {\n    key: \"Query\",\n    value: function Query(request) {\n      var data = exports.RequestQuery.encode(request).finish();\n      var promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Query\", data);\n      return promise.then(function (data) {\n        return exports.ResponseQuery.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }, {\n    key: \"Commit\",\n    value: function Commit(request) {\n      var data = exports.RequestCommit.encode(request).finish();\n      var promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Commit\", data);\n      return promise.then(function (data) {\n        return exports.ResponseCommit.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }, {\n    key: \"InitChain\",\n    value: function InitChain(request) {\n      var data = exports.RequestInitChain.encode(request).finish();\n      var promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"InitChain\", data);\n      return promise.then(function (data) {\n        return exports.ResponseInitChain.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }, {\n    key: \"BeginBlock\",\n    value: function BeginBlock(request) {\n      var data = exports.RequestBeginBlock.encode(request).finish();\n      var promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"BeginBlock\", data);\n      return promise.then(function (data) {\n        return exports.ResponseBeginBlock.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }, {\n    key: \"EndBlock\",\n    value: function EndBlock(request) {\n      var data = exports.RequestEndBlock.encode(request).finish();\n      var promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"EndBlock\", data);\n      return promise.then(function (data) {\n        return exports.ResponseEndBlock.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }, {\n    key: \"ListSnapshots\",\n    value: function ListSnapshots(request) {\n      var data = exports.RequestListSnapshots.encode(request).finish();\n      var promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"ListSnapshots\", data);\n      return promise.then(function (data) {\n        return exports.ResponseListSnapshots.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }, {\n    key: \"OfferSnapshot\",\n    value: function OfferSnapshot(request) {\n      var data = exports.RequestOfferSnapshot.encode(request).finish();\n      var promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"OfferSnapshot\", data);\n      return promise.then(function (data) {\n        return exports.ResponseOfferSnapshot.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }, {\n    key: \"LoadSnapshotChunk\",\n    value: function LoadSnapshotChunk(request) {\n      var data = exports.RequestLoadSnapshotChunk.encode(request).finish();\n      var promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"LoadSnapshotChunk\", data);\n      return promise.then(function (data) {\n        return exports.ResponseLoadSnapshotChunk.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }, {\n    key: \"ApplySnapshotChunk\",\n    value: function ApplySnapshotChunk(request) {\n      var data = exports.RequestApplySnapshotChunk.encode(request).finish();\n      var promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"ApplySnapshotChunk\", data);\n      return promise.then(function (data) {\n        return exports.ResponseApplySnapshotChunk.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }]);\n  return ABCIApplicationClientImpl;\n}();\nexports.ABCIApplicationClientImpl = ABCIApplicationClientImpl;\nvar globalThis = function () {\n  if (typeof globalThis !== \"undefined\") {\n    return globalThis;\n  }\n  if (typeof self !== \"undefined\") {\n    return self;\n  }\n  if (typeof window !== \"undefined\") {\n    return window;\n  }\n  if (typeof global !== \"undefined\") {\n    return global;\n  }\n  throw \"Unable to locate global object\";\n}();\nfunction bytesFromBase64(b64) {\n  if (globalThis.Buffer) {\n    return Uint8Array.from(globalThis.Buffer.from(b64, \"base64\"));\n  } else {\n    var bin = globalThis.atob(b64);\n    var arr = new Uint8Array(bin.length);\n    for (var i = 0; i < bin.length; ++i) {\n      arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n  }\n}\nfunction base64FromBytes(arr) {\n  if (globalThis.Buffer) {\n    return globalThis.Buffer.from(arr).toString(\"base64\");\n  } else {\n    var bin = [];\n    arr.forEach(function (byte) {\n      bin.push(String.fromCharCode(byte));\n    });\n    return globalThis.btoa(bin.join(\"\"));\n  }\n}\nfunction toTimestamp(date) {\n  var seconds = numberToLong(date.getTime() / 1000);\n  var nanos = date.getTime() % 1000 * 1000000;\n  return {\n    seconds: seconds,\n    nanos: nanos\n  };\n}\nfunction fromTimestamp(t) {\n  var millis = t.seconds.toNumber() * 1000;\n  millis += t.nanos / 1000000;\n  return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n  if (o instanceof Date) {\n    return toTimestamp(o);\n  } else if (typeof o === \"string\") {\n    return toTimestamp(new Date(o));\n  } else {\n    return timestamp_1.Timestamp.fromJSON(o);\n  }\n}\nfunction numberToLong(number) {\n  return long_1.default.fromNumber(number);\n}\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}\nfunction isSet(value) {\n  return value !== null && value !== undefined;\n}","map":null,"metadata":{},"sourceType":"script"}