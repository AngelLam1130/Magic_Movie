{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LCDQueryClient = void 0;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _helpers = require(\"../../../../helpers\");\nvar LCDQueryClient = /*#__PURE__*/function () {\n  function LCDQueryClient(_ref) {\n    var requestClient = _ref.requestClient;\n    (0, _classCallCheck2[\"default\"])(this, LCDQueryClient);\n    (0, _defineProperty2[\"default\"])(this, \"req\", void 0);\n    this.req = requestClient;\n    this.denomTrace = this.denomTrace.bind(this);\n    this.denomTraces = this.denomTraces.bind(this);\n    this.params = this.params.bind(this);\n  }\n  /* DenomTrace queries a denomination trace information. */\n  (0, _createClass2[\"default\"])(LCDQueryClient, [{\n    key: \"denomTrace\",\n    value: function () {\n      var _denomTrace = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(params) {\n        var endpoint;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              endpoint = \"ibc/apps/transfer/v1/denom_traces/\".concat(params.hash);\n              _context.next = 3;\n              return this.req.get(endpoint);\n            case 3:\n              return _context.abrupt(\"return\", _context.sent);\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function denomTrace(_x) {\n        return _denomTrace.apply(this, arguments);\n      }\n      return denomTrace;\n    }() /* DenomTraces queries all denomination traces. */\n  }, {\n    key: \"denomTraces\",\n    value: function () {\n      var _denomTraces = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        var params,\n          options,\n          endpoint,\n          _args2 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              params = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {\n                pagination: undefined\n              };\n              options = {\n                params: {}\n              };\n              if (typeof (params === null || params === void 0 ? void 0 : params.pagination) !== \"undefined\") {\n                (0, _helpers.setPaginationParams)(options, params.pagination);\n              }\n              endpoint = \"ibc/apps/transfer/v1/denom_traces\";\n              _context2.next = 6;\n              return this.req.get(endpoint, options);\n            case 6:\n              return _context2.abrupt(\"return\", _context2.sent);\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function denomTraces() {\n        return _denomTraces.apply(this, arguments);\n      }\n      return denomTraces;\n    }() /* Params queries all parameters of the ibc-transfer module. */\n  }, {\n    key: \"params\",\n    value: function () {\n      var _params2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3() {\n        var _params,\n          endpoint,\n          _args3 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _params = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {};\n              endpoint = \"ibc/apps/transfer/v1/params\";\n              _context3.next = 4;\n              return this.req.get(endpoint);\n            case 4:\n              return _context3.abrupt(\"return\", _context3.sent);\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function params() {\n        return _params2.apply(this, arguments);\n      }\n      return params;\n    }()\n  }]);\n  return LCDQueryClient;\n}();\nexports.LCDQueryClient = LCDQueryClient;","map":null,"metadata":{},"sourceType":"script"}