{"ast":null,"code":"\"use strict\";\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VoteInfo = exports.ValidatorUpdate = exports.Validator = exports.TxResult = exports.Snapshot = exports.ResponseSetOption = exports.ResponseQuery = exports.ResponseOfferSnapshot_ResultSDKType = exports.ResponseOfferSnapshot_Result = exports.ResponseOfferSnapshot = exports.ResponseLoadSnapshotChunk = exports.ResponseListSnapshots = exports.ResponseInitChain = exports.ResponseInfo = exports.ResponseFlush = exports.ResponseException = exports.ResponseEndBlock = exports.ResponseEcho = exports.ResponseDeliverTx = exports.ResponseCommit = exports.ResponseCheckTx = exports.ResponseBeginBlock = exports.ResponseApplySnapshotChunk_ResultSDKType = exports.ResponseApplySnapshotChunk_Result = exports.ResponseApplySnapshotChunk = exports.Response = exports.RequestSetOption = exports.RequestQuery = exports.RequestOfferSnapshot = exports.RequestLoadSnapshotChunk = exports.RequestListSnapshots = exports.RequestInitChain = exports.RequestInfo = exports.RequestFlush = exports.RequestEndBlock = exports.RequestEcho = exports.RequestDeliverTx = exports.RequestCommit = exports.RequestCheckTx = exports.RequestBeginBlock = exports.RequestApplySnapshotChunk = exports.Request = exports.LastCommitInfo = exports.EvidenceTypeSDKType = exports.EvidenceType = exports.Evidence = exports.EventAttribute = exports.Event = exports.ConsensusParams = exports.CheckTxTypeSDKType = exports.CheckTxType = exports.BlockParams = void 0;\nexports.checkTxTypeFromJSON = checkTxTypeFromJSON;\nexports.checkTxTypeToJSON = checkTxTypeToJSON;\nexports.evidenceTypeFromJSON = evidenceTypeFromJSON;\nexports.evidenceTypeToJSON = evidenceTypeToJSON;\nexports.responseApplySnapshotChunk_ResultFromJSON = responseApplySnapshotChunk_ResultFromJSON;\nexports.responseApplySnapshotChunk_ResultToJSON = responseApplySnapshotChunk_ResultToJSON;\nexports.responseOfferSnapshot_ResultFromJSON = responseOfferSnapshot_ResultFromJSON;\nexports.responseOfferSnapshot_ResultToJSON = responseOfferSnapshot_ResultToJSON;\nvar _timestamp = require(\"../../google/protobuf/timestamp\");\nvar _types = require(\"../types/types\");\nvar _proof = require(\"../crypto/proof\");\nvar _params = require(\"../types/params\");\nvar _keys = require(\"../crypto/keys\");\nvar _helpers = require(\"../../helpers\");\nvar _m0 = _interopRequireWildcard(require(\"protobufjs/minimal\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj[\"default\"] = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nvar CheckTxType;\nexports.CheckTxType = CheckTxType;\n(function (CheckTxType) {\n  CheckTxType[CheckTxType[\"NEW\"] = 0] = \"NEW\";\n  CheckTxType[CheckTxType[\"RECHECK\"] = 1] = \"RECHECK\";\n  CheckTxType[CheckTxType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(CheckTxType || (exports.CheckTxType = CheckTxType = {}));\nvar CheckTxTypeSDKType = CheckTxType;\nexports.CheckTxTypeSDKType = CheckTxTypeSDKType;\nfunction checkTxTypeFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"NEW\":\n      return CheckTxType.NEW;\n    case 1:\n    case \"RECHECK\":\n      return CheckTxType.RECHECK;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return CheckTxType.UNRECOGNIZED;\n  }\n}\nfunction checkTxTypeToJSON(object) {\n  switch (object) {\n    case CheckTxType.NEW:\n      return \"NEW\";\n    case CheckTxType.RECHECK:\n      return \"RECHECK\";\n    case CheckTxType.UNRECOGNIZED:\n    default:\n      return \"UNRECOGNIZED\";\n  }\n}\nvar ResponseOfferSnapshot_Result;\nexports.ResponseOfferSnapshot_Result = ResponseOfferSnapshot_Result;\n(function (ResponseOfferSnapshot_Result) {\n  ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n  ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ABORT\"] = 2] = \"ABORT\";\n  ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT\"] = 3] = \"REJECT\";\n  ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_FORMAT\"] = 4] = \"REJECT_FORMAT\";\n  ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_SENDER\"] = 5] = \"REJECT_SENDER\";\n  ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseOfferSnapshot_Result || (exports.ResponseOfferSnapshot_Result = ResponseOfferSnapshot_Result = {}));\nvar ResponseOfferSnapshot_ResultSDKType = ResponseOfferSnapshot_Result;\nexports.ResponseOfferSnapshot_ResultSDKType = ResponseOfferSnapshot_ResultSDKType;\nfunction responseOfferSnapshot_ResultFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"UNKNOWN\":\n      return ResponseOfferSnapshot_Result.UNKNOWN;\n    case 1:\n    case \"ACCEPT\":\n      return ResponseOfferSnapshot_Result.ACCEPT;\n    case 2:\n    case \"ABORT\":\n      return ResponseOfferSnapshot_Result.ABORT;\n    case 3:\n    case \"REJECT\":\n      return ResponseOfferSnapshot_Result.REJECT;\n    case 4:\n    case \"REJECT_FORMAT\":\n      return ResponseOfferSnapshot_Result.REJECT_FORMAT;\n    case 5:\n    case \"REJECT_SENDER\":\n      return ResponseOfferSnapshot_Result.REJECT_SENDER;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return ResponseOfferSnapshot_Result.UNRECOGNIZED;\n  }\n}\nfunction responseOfferSnapshot_ResultToJSON(object) {\n  switch (object) {\n    case ResponseOfferSnapshot_Result.UNKNOWN:\n      return \"UNKNOWN\";\n    case ResponseOfferSnapshot_Result.ACCEPT:\n      return \"ACCEPT\";\n    case ResponseOfferSnapshot_Result.ABORT:\n      return \"ABORT\";\n    case ResponseOfferSnapshot_Result.REJECT:\n      return \"REJECT\";\n    case ResponseOfferSnapshot_Result.REJECT_FORMAT:\n      return \"REJECT_FORMAT\";\n    case ResponseOfferSnapshot_Result.REJECT_SENDER:\n      return \"REJECT_SENDER\";\n    case ResponseOfferSnapshot_Result.UNRECOGNIZED:\n    default:\n      return \"UNRECOGNIZED\";\n  }\n}\nvar ResponseApplySnapshotChunk_Result;\nexports.ResponseApplySnapshotChunk_Result = ResponseApplySnapshotChunk_Result;\n(function (ResponseApplySnapshotChunk_Result) {\n  ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n  ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ABORT\"] = 2] = \"ABORT\";\n  ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY\"] = 3] = \"RETRY\";\n  ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY_SNAPSHOT\"] = 4] = \"RETRY_SNAPSHOT\";\n  ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"REJECT_SNAPSHOT\"] = 5] = \"REJECT_SNAPSHOT\";\n  ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseApplySnapshotChunk_Result || (exports.ResponseApplySnapshotChunk_Result = ResponseApplySnapshotChunk_Result = {}));\nvar ResponseApplySnapshotChunk_ResultSDKType = ResponseApplySnapshotChunk_Result;\nexports.ResponseApplySnapshotChunk_ResultSDKType = ResponseApplySnapshotChunk_ResultSDKType;\nfunction responseApplySnapshotChunk_ResultFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"UNKNOWN\":\n      return ResponseApplySnapshotChunk_Result.UNKNOWN;\n    case 1:\n    case \"ACCEPT\":\n      return ResponseApplySnapshotChunk_Result.ACCEPT;\n    case 2:\n    case \"ABORT\":\n      return ResponseApplySnapshotChunk_Result.ABORT;\n    case 3:\n    case \"RETRY\":\n      return ResponseApplySnapshotChunk_Result.RETRY;\n    case 4:\n    case \"RETRY_SNAPSHOT\":\n      return ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT;\n    case 5:\n    case \"REJECT_SNAPSHOT\":\n      return ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return ResponseApplySnapshotChunk_Result.UNRECOGNIZED;\n  }\n}\nfunction responseApplySnapshotChunk_ResultToJSON(object) {\n  switch (object) {\n    case ResponseApplySnapshotChunk_Result.UNKNOWN:\n      return \"UNKNOWN\";\n    case ResponseApplySnapshotChunk_Result.ACCEPT:\n      return \"ACCEPT\";\n    case ResponseApplySnapshotChunk_Result.ABORT:\n      return \"ABORT\";\n    case ResponseApplySnapshotChunk_Result.RETRY:\n      return \"RETRY\";\n    case ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT:\n      return \"RETRY_SNAPSHOT\";\n    case ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT:\n      return \"REJECT_SNAPSHOT\";\n    case ResponseApplySnapshotChunk_Result.UNRECOGNIZED:\n    default:\n      return \"UNRECOGNIZED\";\n  }\n}\nvar EvidenceType;\nexports.EvidenceType = EvidenceType;\n(function (EvidenceType) {\n  EvidenceType[EvidenceType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  EvidenceType[EvidenceType[\"DUPLICATE_VOTE\"] = 1] = \"DUPLICATE_VOTE\";\n  EvidenceType[EvidenceType[\"LIGHT_CLIENT_ATTACK\"] = 2] = \"LIGHT_CLIENT_ATTACK\";\n  EvidenceType[EvidenceType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(EvidenceType || (exports.EvidenceType = EvidenceType = {}));\nvar EvidenceTypeSDKType = EvidenceType;\nexports.EvidenceTypeSDKType = EvidenceTypeSDKType;\nfunction evidenceTypeFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"UNKNOWN\":\n      return EvidenceType.UNKNOWN;\n    case 1:\n    case \"DUPLICATE_VOTE\":\n      return EvidenceType.DUPLICATE_VOTE;\n    case 2:\n    case \"LIGHT_CLIENT_ATTACK\":\n      return EvidenceType.LIGHT_CLIENT_ATTACK;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return EvidenceType.UNRECOGNIZED;\n  }\n}\nfunction evidenceTypeToJSON(object) {\n  switch (object) {\n    case EvidenceType.UNKNOWN:\n      return \"UNKNOWN\";\n    case EvidenceType.DUPLICATE_VOTE:\n      return \"DUPLICATE_VOTE\";\n    case EvidenceType.LIGHT_CLIENT_ATTACK:\n      return \"LIGHT_CLIENT_ATTACK\";\n    case EvidenceType.UNRECOGNIZED:\n    default:\n      return \"UNRECOGNIZED\";\n  }\n}\nfunction createBaseRequest() {\n  return {\n    echo: undefined,\n    flush: undefined,\n    info: undefined,\n    setOption: undefined,\n    initChain: undefined,\n    query: undefined,\n    beginBlock: undefined,\n    checkTx: undefined,\n    deliverTx: undefined,\n    endBlock: undefined,\n    commit: undefined,\n    listSnapshots: undefined,\n    offerSnapshot: undefined,\n    loadSnapshotChunk: undefined,\n    applySnapshotChunk: undefined\n  };\n}\nvar Request = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.echo !== undefined) {\n      RequestEcho.encode(message.echo, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.flush !== undefined) {\n      RequestFlush.encode(message.flush, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.info !== undefined) {\n      RequestInfo.encode(message.info, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.setOption !== undefined) {\n      RequestSetOption.encode(message.setOption, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.initChain !== undefined) {\n      RequestInitChain.encode(message.initChain, writer.uint32(42).fork()).ldelim();\n    }\n    if (message.query !== undefined) {\n      RequestQuery.encode(message.query, writer.uint32(50).fork()).ldelim();\n    }\n    if (message.beginBlock !== undefined) {\n      RequestBeginBlock.encode(message.beginBlock, writer.uint32(58).fork()).ldelim();\n    }\n    if (message.checkTx !== undefined) {\n      RequestCheckTx.encode(message.checkTx, writer.uint32(66).fork()).ldelim();\n    }\n    if (message.deliverTx !== undefined) {\n      RequestDeliverTx.encode(message.deliverTx, writer.uint32(74).fork()).ldelim();\n    }\n    if (message.endBlock !== undefined) {\n      RequestEndBlock.encode(message.endBlock, writer.uint32(82).fork()).ldelim();\n    }\n    if (message.commit !== undefined) {\n      RequestCommit.encode(message.commit, writer.uint32(90).fork()).ldelim();\n    }\n    if (message.listSnapshots !== undefined) {\n      RequestListSnapshots.encode(message.listSnapshots, writer.uint32(98).fork()).ldelim();\n    }\n    if (message.offerSnapshot !== undefined) {\n      RequestOfferSnapshot.encode(message.offerSnapshot, writer.uint32(106).fork()).ldelim();\n    }\n    if (message.loadSnapshotChunk !== undefined) {\n      RequestLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(114).fork()).ldelim();\n    }\n    if (message.applySnapshotChunk !== undefined) {\n      RequestApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(122).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.echo = RequestEcho.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.flush = RequestFlush.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.info = RequestInfo.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.setOption = RequestSetOption.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.initChain = RequestInitChain.decode(reader, reader.uint32());\n          break;\n        case 6:\n          message.query = RequestQuery.decode(reader, reader.uint32());\n          break;\n        case 7:\n          message.beginBlock = RequestBeginBlock.decode(reader, reader.uint32());\n          break;\n        case 8:\n          message.checkTx = RequestCheckTx.decode(reader, reader.uint32());\n          break;\n        case 9:\n          message.deliverTx = RequestDeliverTx.decode(reader, reader.uint32());\n          break;\n        case 10:\n          message.endBlock = RequestEndBlock.decode(reader, reader.uint32());\n          break;\n        case 11:\n          message.commit = RequestCommit.decode(reader, reader.uint32());\n          break;\n        case 12:\n          message.listSnapshots = RequestListSnapshots.decode(reader, reader.uint32());\n          break;\n        case 13:\n          message.offerSnapshot = RequestOfferSnapshot.decode(reader, reader.uint32());\n          break;\n        case 14:\n          message.loadSnapshotChunk = RequestLoadSnapshotChunk.decode(reader, reader.uint32());\n          break;\n        case 15:\n          message.applySnapshotChunk = RequestApplySnapshotChunk.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseRequest();\n    message.echo = object.echo !== undefined && object.echo !== null ? RequestEcho.fromPartial(object.echo) : undefined;\n    message.flush = object.flush !== undefined && object.flush !== null ? RequestFlush.fromPartial(object.flush) : undefined;\n    message.info = object.info !== undefined && object.info !== null ? RequestInfo.fromPartial(object.info) : undefined;\n    message.setOption = object.setOption !== undefined && object.setOption !== null ? RequestSetOption.fromPartial(object.setOption) : undefined;\n    message.initChain = object.initChain !== undefined && object.initChain !== null ? RequestInitChain.fromPartial(object.initChain) : undefined;\n    message.query = object.query !== undefined && object.query !== null ? RequestQuery.fromPartial(object.query) : undefined;\n    message.beginBlock = object.beginBlock !== undefined && object.beginBlock !== null ? RequestBeginBlock.fromPartial(object.beginBlock) : undefined;\n    message.checkTx = object.checkTx !== undefined && object.checkTx !== null ? RequestCheckTx.fromPartial(object.checkTx) : undefined;\n    message.deliverTx = object.deliverTx !== undefined && object.deliverTx !== null ? RequestDeliverTx.fromPartial(object.deliverTx) : undefined;\n    message.endBlock = object.endBlock !== undefined && object.endBlock !== null ? RequestEndBlock.fromPartial(object.endBlock) : undefined;\n    message.commit = object.commit !== undefined && object.commit !== null ? RequestCommit.fromPartial(object.commit) : undefined;\n    message.listSnapshots = object.listSnapshots !== undefined && object.listSnapshots !== null ? RequestListSnapshots.fromPartial(object.listSnapshots) : undefined;\n    message.offerSnapshot = object.offerSnapshot !== undefined && object.offerSnapshot !== null ? RequestOfferSnapshot.fromPartial(object.offerSnapshot) : undefined;\n    message.loadSnapshotChunk = object.loadSnapshotChunk !== undefined && object.loadSnapshotChunk !== null ? RequestLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk) : undefined;\n    message.applySnapshotChunk = object.applySnapshotChunk !== undefined && object.applySnapshotChunk !== null ? RequestApplySnapshotChunk.fromPartial(object.applySnapshotChunk) : undefined;\n    return message;\n  }\n};\nexports.Request = Request;\nfunction createBaseRequestEcho() {\n  return {\n    message: \"\"\n  };\n}\nvar RequestEcho = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.message !== \"\") {\n      writer.uint32(10).string(message.message);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestEcho();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.message = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$message;\n    var message = createBaseRequestEcho();\n    message.message = (_object$message = object.message) !== null && _object$message !== void 0 ? _object$message : \"\";\n    return message;\n  }\n};\nexports.RequestEcho = RequestEcho;\nfunction createBaseRequestFlush() {\n  return {};\n}\nvar RequestFlush = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestFlush();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseRequestFlush();\n    return message;\n  }\n};\nexports.RequestFlush = RequestFlush;\nfunction createBaseRequestInfo() {\n  return {\n    version: \"\",\n    blockVersion: _helpers.Long.UZERO,\n    p2pVersion: _helpers.Long.UZERO\n  };\n}\nvar RequestInfo = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.version !== \"\") {\n      writer.uint32(10).string(message.version);\n    }\n    if (!message.blockVersion.isZero()) {\n      writer.uint32(16).uint64(message.blockVersion);\n    }\n    if (!message.p2pVersion.isZero()) {\n      writer.uint32(24).uint64(message.p2pVersion);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestInfo();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.version = reader.string();\n          break;\n        case 2:\n          message.blockVersion = reader.uint64();\n          break;\n        case 3:\n          message.p2pVersion = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$version;\n    var message = createBaseRequestInfo();\n    message.version = (_object$version = object.version) !== null && _object$version !== void 0 ? _object$version : \"\";\n    message.blockVersion = object.blockVersion !== undefined && object.blockVersion !== null ? _helpers.Long.fromValue(object.blockVersion) : _helpers.Long.UZERO;\n    message.p2pVersion = object.p2pVersion !== undefined && object.p2pVersion !== null ? _helpers.Long.fromValue(object.p2pVersion) : _helpers.Long.UZERO;\n    return message;\n  }\n};\nexports.RequestInfo = RequestInfo;\nfunction createBaseRequestSetOption() {\n  return {\n    key: \"\",\n    value: \"\"\n  };\n}\nvar RequestSetOption = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.key !== \"\") {\n      writer.uint32(10).string(message.key);\n    }\n    if (message.value !== \"\") {\n      writer.uint32(18).string(message.value);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestSetOption();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.string();\n          break;\n        case 2:\n          message.value = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$key, _object$value;\n    var message = createBaseRequestSetOption();\n    message.key = (_object$key = object.key) !== null && _object$key !== void 0 ? _object$key : \"\";\n    message.value = (_object$value = object.value) !== null && _object$value !== void 0 ? _object$value : \"\";\n    return message;\n  }\n};\nexports.RequestSetOption = RequestSetOption;\nfunction createBaseRequestInitChain() {\n  return {\n    time: undefined,\n    chainId: \"\",\n    consensusParams: ConsensusParams.fromPartial({}),\n    validators: [],\n    appStateBytes: new Uint8Array(),\n    initialHeight: _helpers.Long.ZERO\n  };\n}\nvar RequestInitChain = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.time !== undefined) {\n      _timestamp.Timestamp.encode((0, _helpers.toTimestamp)(message.time), writer.uint32(10).fork()).ldelim();\n    }\n    if (message.chainId !== \"\") {\n      writer.uint32(18).string(message.chainId);\n    }\n    if (message.consensusParams !== undefined) {\n      ConsensusParams.encode(message.consensusParams, writer.uint32(26).fork()).ldelim();\n    }\n    var _iterator = _createForOfIteratorHelper(message.validators),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        ValidatorUpdate.encode(v, writer.uint32(34).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    if (message.appStateBytes.length !== 0) {\n      writer.uint32(42).bytes(message.appStateBytes);\n    }\n    if (!message.initialHeight.isZero()) {\n      writer.uint32(48).int64(message.initialHeight);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestInitChain();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.time = (0, _helpers.fromTimestamp)(_timestamp.Timestamp.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.chainId = reader.string();\n          break;\n        case 3:\n          message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n          break;\n        case 5:\n          message.appStateBytes = reader.bytes();\n          break;\n        case 6:\n          message.initialHeight = reader.int64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$time, _object$chainId, _object$validators, _object$appStateBytes;\n    var message = createBaseRequestInitChain();\n    message.time = (_object$time = object.time) !== null && _object$time !== void 0 ? _object$time : undefined;\n    message.chainId = (_object$chainId = object.chainId) !== null && _object$chainId !== void 0 ? _object$chainId : \"\";\n    message.consensusParams = object.consensusParams !== undefined && object.consensusParams !== null ? ConsensusParams.fromPartial(object.consensusParams) : undefined;\n    message.validators = ((_object$validators = object.validators) === null || _object$validators === void 0 ? void 0 : _object$validators.map(function (e) {\n      return ValidatorUpdate.fromPartial(e);\n    })) || [];\n    message.appStateBytes = (_object$appStateBytes = object.appStateBytes) !== null && _object$appStateBytes !== void 0 ? _object$appStateBytes : new Uint8Array();\n    message.initialHeight = object.initialHeight !== undefined && object.initialHeight !== null ? _helpers.Long.fromValue(object.initialHeight) : _helpers.Long.ZERO;\n    return message;\n  }\n};\nexports.RequestInitChain = RequestInitChain;\nfunction createBaseRequestQuery() {\n  return {\n    data: new Uint8Array(),\n    path: \"\",\n    height: _helpers.Long.ZERO,\n    prove: false\n  };\n}\nvar RequestQuery = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.data.length !== 0) {\n      writer.uint32(10).bytes(message.data);\n    }\n    if (message.path !== \"\") {\n      writer.uint32(18).string(message.path);\n    }\n    if (!message.height.isZero()) {\n      writer.uint32(24).int64(message.height);\n    }\n    if (message.prove === true) {\n      writer.uint32(32).bool(message.prove);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestQuery();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.data = reader.bytes();\n          break;\n        case 2:\n          message.path = reader.string();\n          break;\n        case 3:\n          message.height = reader.int64();\n          break;\n        case 4:\n          message.prove = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$data, _object$path, _object$prove;\n    var message = createBaseRequestQuery();\n    message.data = (_object$data = object.data) !== null && _object$data !== void 0 ? _object$data : new Uint8Array();\n    message.path = (_object$path = object.path) !== null && _object$path !== void 0 ? _object$path : \"\";\n    message.height = object.height !== undefined && object.height !== null ? _helpers.Long.fromValue(object.height) : _helpers.Long.ZERO;\n    message.prove = (_object$prove = object.prove) !== null && _object$prove !== void 0 ? _object$prove : false;\n    return message;\n  }\n};\nexports.RequestQuery = RequestQuery;\nfunction createBaseRequestBeginBlock() {\n  return {\n    hash: new Uint8Array(),\n    header: _types.Header.fromPartial({}),\n    lastCommitInfo: LastCommitInfo.fromPartial({}),\n    byzantineValidators: []\n  };\n}\nvar RequestBeginBlock = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.hash.length !== 0) {\n      writer.uint32(10).bytes(message.hash);\n    }\n    if (message.header !== undefined) {\n      _types.Header.encode(message.header, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.lastCommitInfo !== undefined) {\n      LastCommitInfo.encode(message.lastCommitInfo, writer.uint32(26).fork()).ldelim();\n    }\n    var _iterator2 = _createForOfIteratorHelper(message.byzantineValidators),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var v = _step2.value;\n        Evidence.encode(v, writer.uint32(34).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestBeginBlock();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.hash = reader.bytes();\n          break;\n        case 2:\n          message.header = _types.Header.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.lastCommitInfo = LastCommitInfo.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.byzantineValidators.push(Evidence.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$hash, _object$byzantineVali;\n    var message = createBaseRequestBeginBlock();\n    message.hash = (_object$hash = object.hash) !== null && _object$hash !== void 0 ? _object$hash : new Uint8Array();\n    message.header = object.header !== undefined && object.header !== null ? _types.Header.fromPartial(object.header) : undefined;\n    message.lastCommitInfo = object.lastCommitInfo !== undefined && object.lastCommitInfo !== null ? LastCommitInfo.fromPartial(object.lastCommitInfo) : undefined;\n    message.byzantineValidators = ((_object$byzantineVali = object.byzantineValidators) === null || _object$byzantineVali === void 0 ? void 0 : _object$byzantineVali.map(function (e) {\n      return Evidence.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nexports.RequestBeginBlock = RequestBeginBlock;\nfunction createBaseRequestCheckTx() {\n  return {\n    tx: new Uint8Array(),\n    type: 0\n  };\n}\nvar RequestCheckTx = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.tx.length !== 0) {\n      writer.uint32(10).bytes(message.tx);\n    }\n    if (message.type !== 0) {\n      writer.uint32(16).int32(message.type);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestCheckTx();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.tx = reader.bytes();\n          break;\n        case 2:\n          message.type = reader.int32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$tx, _object$type;\n    var message = createBaseRequestCheckTx();\n    message.tx = (_object$tx = object.tx) !== null && _object$tx !== void 0 ? _object$tx : new Uint8Array();\n    message.type = (_object$type = object.type) !== null && _object$type !== void 0 ? _object$type : 0;\n    return message;\n  }\n};\nexports.RequestCheckTx = RequestCheckTx;\nfunction createBaseRequestDeliverTx() {\n  return {\n    tx: new Uint8Array()\n  };\n}\nvar RequestDeliverTx = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.tx.length !== 0) {\n      writer.uint32(10).bytes(message.tx);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestDeliverTx();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.tx = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$tx2;\n    var message = createBaseRequestDeliverTx();\n    message.tx = (_object$tx2 = object.tx) !== null && _object$tx2 !== void 0 ? _object$tx2 : new Uint8Array();\n    return message;\n  }\n};\nexports.RequestDeliverTx = RequestDeliverTx;\nfunction createBaseRequestEndBlock() {\n  return {\n    height: _helpers.Long.ZERO\n  };\n}\nvar RequestEndBlock = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (!message.height.isZero()) {\n      writer.uint32(8).int64(message.height);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestEndBlock();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.height = reader.int64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseRequestEndBlock();\n    message.height = object.height !== undefined && object.height !== null ? _helpers.Long.fromValue(object.height) : _helpers.Long.ZERO;\n    return message;\n  }\n};\nexports.RequestEndBlock = RequestEndBlock;\nfunction createBaseRequestCommit() {\n  return {};\n}\nvar RequestCommit = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestCommit();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseRequestCommit();\n    return message;\n  }\n};\nexports.RequestCommit = RequestCommit;\nfunction createBaseRequestListSnapshots() {\n  return {};\n}\nvar RequestListSnapshots = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestListSnapshots();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseRequestListSnapshots();\n    return message;\n  }\n};\nexports.RequestListSnapshots = RequestListSnapshots;\nfunction createBaseRequestOfferSnapshot() {\n  return {\n    snapshot: Snapshot.fromPartial({}),\n    appHash: new Uint8Array()\n  };\n}\nvar RequestOfferSnapshot = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.snapshot !== undefined) {\n      Snapshot.encode(message.snapshot, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.appHash.length !== 0) {\n      writer.uint32(18).bytes(message.appHash);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestOfferSnapshot();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.snapshot = Snapshot.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.appHash = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$appHash;\n    var message = createBaseRequestOfferSnapshot();\n    message.snapshot = object.snapshot !== undefined && object.snapshot !== null ? Snapshot.fromPartial(object.snapshot) : undefined;\n    message.appHash = (_object$appHash = object.appHash) !== null && _object$appHash !== void 0 ? _object$appHash : new Uint8Array();\n    return message;\n  }\n};\nexports.RequestOfferSnapshot = RequestOfferSnapshot;\nfunction createBaseRequestLoadSnapshotChunk() {\n  return {\n    height: _helpers.Long.UZERO,\n    format: 0,\n    chunk: 0\n  };\n}\nvar RequestLoadSnapshotChunk = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (!message.height.isZero()) {\n      writer.uint32(8).uint64(message.height);\n    }\n    if (message.format !== 0) {\n      writer.uint32(16).uint32(message.format);\n    }\n    if (message.chunk !== 0) {\n      writer.uint32(24).uint32(message.chunk);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestLoadSnapshotChunk();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.height = reader.uint64();\n          break;\n        case 2:\n          message.format = reader.uint32();\n          break;\n        case 3:\n          message.chunk = reader.uint32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$format, _object$chunk;\n    var message = createBaseRequestLoadSnapshotChunk();\n    message.height = object.height !== undefined && object.height !== null ? _helpers.Long.fromValue(object.height) : _helpers.Long.UZERO;\n    message.format = (_object$format = object.format) !== null && _object$format !== void 0 ? _object$format : 0;\n    message.chunk = (_object$chunk = object.chunk) !== null && _object$chunk !== void 0 ? _object$chunk : 0;\n    return message;\n  }\n};\nexports.RequestLoadSnapshotChunk = RequestLoadSnapshotChunk;\nfunction createBaseRequestApplySnapshotChunk() {\n  return {\n    index: 0,\n    chunk: new Uint8Array(),\n    sender: \"\"\n  };\n}\nvar RequestApplySnapshotChunk = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.index !== 0) {\n      writer.uint32(8).uint32(message.index);\n    }\n    if (message.chunk.length !== 0) {\n      writer.uint32(18).bytes(message.chunk);\n    }\n    if (message.sender !== \"\") {\n      writer.uint32(26).string(message.sender);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestApplySnapshotChunk();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.index = reader.uint32();\n          break;\n        case 2:\n          message.chunk = reader.bytes();\n          break;\n        case 3:\n          message.sender = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$index, _object$chunk2, _object$sender;\n    var message = createBaseRequestApplySnapshotChunk();\n    message.index = (_object$index = object.index) !== null && _object$index !== void 0 ? _object$index : 0;\n    message.chunk = (_object$chunk2 = object.chunk) !== null && _object$chunk2 !== void 0 ? _object$chunk2 : new Uint8Array();\n    message.sender = (_object$sender = object.sender) !== null && _object$sender !== void 0 ? _object$sender : \"\";\n    return message;\n  }\n};\nexports.RequestApplySnapshotChunk = RequestApplySnapshotChunk;\nfunction createBaseResponse() {\n  return {\n    exception: undefined,\n    echo: undefined,\n    flush: undefined,\n    info: undefined,\n    setOption: undefined,\n    initChain: undefined,\n    query: undefined,\n    beginBlock: undefined,\n    checkTx: undefined,\n    deliverTx: undefined,\n    endBlock: undefined,\n    commit: undefined,\n    listSnapshots: undefined,\n    offerSnapshot: undefined,\n    loadSnapshotChunk: undefined,\n    applySnapshotChunk: undefined\n  };\n}\nvar Response = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.exception !== undefined) {\n      ResponseException.encode(message.exception, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.echo !== undefined) {\n      ResponseEcho.encode(message.echo, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.flush !== undefined) {\n      ResponseFlush.encode(message.flush, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.info !== undefined) {\n      ResponseInfo.encode(message.info, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.setOption !== undefined) {\n      ResponseSetOption.encode(message.setOption, writer.uint32(42).fork()).ldelim();\n    }\n    if (message.initChain !== undefined) {\n      ResponseInitChain.encode(message.initChain, writer.uint32(50).fork()).ldelim();\n    }\n    if (message.query !== undefined) {\n      ResponseQuery.encode(message.query, writer.uint32(58).fork()).ldelim();\n    }\n    if (message.beginBlock !== undefined) {\n      ResponseBeginBlock.encode(message.beginBlock, writer.uint32(66).fork()).ldelim();\n    }\n    if (message.checkTx !== undefined) {\n      ResponseCheckTx.encode(message.checkTx, writer.uint32(74).fork()).ldelim();\n    }\n    if (message.deliverTx !== undefined) {\n      ResponseDeliverTx.encode(message.deliverTx, writer.uint32(82).fork()).ldelim();\n    }\n    if (message.endBlock !== undefined) {\n      ResponseEndBlock.encode(message.endBlock, writer.uint32(90).fork()).ldelim();\n    }\n    if (message.commit !== undefined) {\n      ResponseCommit.encode(message.commit, writer.uint32(98).fork()).ldelim();\n    }\n    if (message.listSnapshots !== undefined) {\n      ResponseListSnapshots.encode(message.listSnapshots, writer.uint32(106).fork()).ldelim();\n    }\n    if (message.offerSnapshot !== undefined) {\n      ResponseOfferSnapshot.encode(message.offerSnapshot, writer.uint32(114).fork()).ldelim();\n    }\n    if (message.loadSnapshotChunk !== undefined) {\n      ResponseLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(122).fork()).ldelim();\n    }\n    if (message.applySnapshotChunk !== undefined) {\n      ResponseApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(130).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.exception = ResponseException.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.echo = ResponseEcho.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.flush = ResponseFlush.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.info = ResponseInfo.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.setOption = ResponseSetOption.decode(reader, reader.uint32());\n          break;\n        case 6:\n          message.initChain = ResponseInitChain.decode(reader, reader.uint32());\n          break;\n        case 7:\n          message.query = ResponseQuery.decode(reader, reader.uint32());\n          break;\n        case 8:\n          message.beginBlock = ResponseBeginBlock.decode(reader, reader.uint32());\n          break;\n        case 9:\n          message.checkTx = ResponseCheckTx.decode(reader, reader.uint32());\n          break;\n        case 10:\n          message.deliverTx = ResponseDeliverTx.decode(reader, reader.uint32());\n          break;\n        case 11:\n          message.endBlock = ResponseEndBlock.decode(reader, reader.uint32());\n          break;\n        case 12:\n          message.commit = ResponseCommit.decode(reader, reader.uint32());\n          break;\n        case 13:\n          message.listSnapshots = ResponseListSnapshots.decode(reader, reader.uint32());\n          break;\n        case 14:\n          message.offerSnapshot = ResponseOfferSnapshot.decode(reader, reader.uint32());\n          break;\n        case 15:\n          message.loadSnapshotChunk = ResponseLoadSnapshotChunk.decode(reader, reader.uint32());\n          break;\n        case 16:\n          message.applySnapshotChunk = ResponseApplySnapshotChunk.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseResponse();\n    message.exception = object.exception !== undefined && object.exception !== null ? ResponseException.fromPartial(object.exception) : undefined;\n    message.echo = object.echo !== undefined && object.echo !== null ? ResponseEcho.fromPartial(object.echo) : undefined;\n    message.flush = object.flush !== undefined && object.flush !== null ? ResponseFlush.fromPartial(object.flush) : undefined;\n    message.info = object.info !== undefined && object.info !== null ? ResponseInfo.fromPartial(object.info) : undefined;\n    message.setOption = object.setOption !== undefined && object.setOption !== null ? ResponseSetOption.fromPartial(object.setOption) : undefined;\n    message.initChain = object.initChain !== undefined && object.initChain !== null ? ResponseInitChain.fromPartial(object.initChain) : undefined;\n    message.query = object.query !== undefined && object.query !== null ? ResponseQuery.fromPartial(object.query) : undefined;\n    message.beginBlock = object.beginBlock !== undefined && object.beginBlock !== null ? ResponseBeginBlock.fromPartial(object.beginBlock) : undefined;\n    message.checkTx = object.checkTx !== undefined && object.checkTx !== null ? ResponseCheckTx.fromPartial(object.checkTx) : undefined;\n    message.deliverTx = object.deliverTx !== undefined && object.deliverTx !== null ? ResponseDeliverTx.fromPartial(object.deliverTx) : undefined;\n    message.endBlock = object.endBlock !== undefined && object.endBlock !== null ? ResponseEndBlock.fromPartial(object.endBlock) : undefined;\n    message.commit = object.commit !== undefined && object.commit !== null ? ResponseCommit.fromPartial(object.commit) : undefined;\n    message.listSnapshots = object.listSnapshots !== undefined && object.listSnapshots !== null ? ResponseListSnapshots.fromPartial(object.listSnapshots) : undefined;\n    message.offerSnapshot = object.offerSnapshot !== undefined && object.offerSnapshot !== null ? ResponseOfferSnapshot.fromPartial(object.offerSnapshot) : undefined;\n    message.loadSnapshotChunk = object.loadSnapshotChunk !== undefined && object.loadSnapshotChunk !== null ? ResponseLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk) : undefined;\n    message.applySnapshotChunk = object.applySnapshotChunk !== undefined && object.applySnapshotChunk !== null ? ResponseApplySnapshotChunk.fromPartial(object.applySnapshotChunk) : undefined;\n    return message;\n  }\n};\nexports.Response = Response;\nfunction createBaseResponseException() {\n  return {\n    error: \"\"\n  };\n}\nvar ResponseException = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.error !== \"\") {\n      writer.uint32(10).string(message.error);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseException();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.error = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$error;\n    var message = createBaseResponseException();\n    message.error = (_object$error = object.error) !== null && _object$error !== void 0 ? _object$error : \"\";\n    return message;\n  }\n};\nexports.ResponseException = ResponseException;\nfunction createBaseResponseEcho() {\n  return {\n    message: \"\"\n  };\n}\nvar ResponseEcho = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.message !== \"\") {\n      writer.uint32(10).string(message.message);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseEcho();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.message = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$message2;\n    var message = createBaseResponseEcho();\n    message.message = (_object$message2 = object.message) !== null && _object$message2 !== void 0 ? _object$message2 : \"\";\n    return message;\n  }\n};\nexports.ResponseEcho = ResponseEcho;\nfunction createBaseResponseFlush() {\n  return {};\n}\nvar ResponseFlush = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseFlush();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseResponseFlush();\n    return message;\n  }\n};\nexports.ResponseFlush = ResponseFlush;\nfunction createBaseResponseInfo() {\n  return {\n    data: \"\",\n    version: \"\",\n    appVersion: _helpers.Long.UZERO,\n    lastBlockHeight: _helpers.Long.ZERO,\n    lastBlockAppHash: new Uint8Array()\n  };\n}\nvar ResponseInfo = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.data !== \"\") {\n      writer.uint32(10).string(message.data);\n    }\n    if (message.version !== \"\") {\n      writer.uint32(18).string(message.version);\n    }\n    if (!message.appVersion.isZero()) {\n      writer.uint32(24).uint64(message.appVersion);\n    }\n    if (!message.lastBlockHeight.isZero()) {\n      writer.uint32(32).int64(message.lastBlockHeight);\n    }\n    if (message.lastBlockAppHash.length !== 0) {\n      writer.uint32(42).bytes(message.lastBlockAppHash);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseInfo();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.data = reader.string();\n          break;\n        case 2:\n          message.version = reader.string();\n          break;\n        case 3:\n          message.appVersion = reader.uint64();\n          break;\n        case 4:\n          message.lastBlockHeight = reader.int64();\n          break;\n        case 5:\n          message.lastBlockAppHash = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$data2, _object$version2, _object$lastBlockAppH;\n    var message = createBaseResponseInfo();\n    message.data = (_object$data2 = object.data) !== null && _object$data2 !== void 0 ? _object$data2 : \"\";\n    message.version = (_object$version2 = object.version) !== null && _object$version2 !== void 0 ? _object$version2 : \"\";\n    message.appVersion = object.appVersion !== undefined && object.appVersion !== null ? _helpers.Long.fromValue(object.appVersion) : _helpers.Long.UZERO;\n    message.lastBlockHeight = object.lastBlockHeight !== undefined && object.lastBlockHeight !== null ? _helpers.Long.fromValue(object.lastBlockHeight) : _helpers.Long.ZERO;\n    message.lastBlockAppHash = (_object$lastBlockAppH = object.lastBlockAppHash) !== null && _object$lastBlockAppH !== void 0 ? _object$lastBlockAppH : new Uint8Array();\n    return message;\n  }\n};\nexports.ResponseInfo = ResponseInfo;\nfunction createBaseResponseSetOption() {\n  return {\n    code: 0,\n    log: \"\",\n    info: \"\"\n  };\n}\nvar ResponseSetOption = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.code !== 0) {\n      writer.uint32(8).uint32(message.code);\n    }\n    if (message.log !== \"\") {\n      writer.uint32(26).string(message.log);\n    }\n    if (message.info !== \"\") {\n      writer.uint32(34).string(message.info);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseSetOption();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.code = reader.uint32();\n          break;\n        case 3:\n          message.log = reader.string();\n          break;\n        case 4:\n          message.info = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$code, _object$log, _object$info;\n    var message = createBaseResponseSetOption();\n    message.code = (_object$code = object.code) !== null && _object$code !== void 0 ? _object$code : 0;\n    message.log = (_object$log = object.log) !== null && _object$log !== void 0 ? _object$log : \"\";\n    message.info = (_object$info = object.info) !== null && _object$info !== void 0 ? _object$info : \"\";\n    return message;\n  }\n};\nexports.ResponseSetOption = ResponseSetOption;\nfunction createBaseResponseInitChain() {\n  return {\n    consensusParams: ConsensusParams.fromPartial({}),\n    validators: [],\n    appHash: new Uint8Array()\n  };\n}\nvar ResponseInitChain = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.consensusParams !== undefined) {\n      ConsensusParams.encode(message.consensusParams, writer.uint32(10).fork()).ldelim();\n    }\n    var _iterator3 = _createForOfIteratorHelper(message.validators),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var v = _step3.value;\n        ValidatorUpdate.encode(v, writer.uint32(18).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    if (message.appHash.length !== 0) {\n      writer.uint32(26).bytes(message.appHash);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseInitChain();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n          break;\n        case 3:\n          message.appHash = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$validators2, _object$appHash2;\n    var message = createBaseResponseInitChain();\n    message.consensusParams = object.consensusParams !== undefined && object.consensusParams !== null ? ConsensusParams.fromPartial(object.consensusParams) : undefined;\n    message.validators = ((_object$validators2 = object.validators) === null || _object$validators2 === void 0 ? void 0 : _object$validators2.map(function (e) {\n      return ValidatorUpdate.fromPartial(e);\n    })) || [];\n    message.appHash = (_object$appHash2 = object.appHash) !== null && _object$appHash2 !== void 0 ? _object$appHash2 : new Uint8Array();\n    return message;\n  }\n};\nexports.ResponseInitChain = ResponseInitChain;\nfunction createBaseResponseQuery() {\n  return {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    index: _helpers.Long.ZERO,\n    key: new Uint8Array(),\n    value: new Uint8Array(),\n    proofOps: _proof.ProofOps.fromPartial({}),\n    height: _helpers.Long.ZERO,\n    codespace: \"\"\n  };\n}\nvar ResponseQuery = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.code !== 0) {\n      writer.uint32(8).uint32(message.code);\n    }\n    if (message.log !== \"\") {\n      writer.uint32(26).string(message.log);\n    }\n    if (message.info !== \"\") {\n      writer.uint32(34).string(message.info);\n    }\n    if (!message.index.isZero()) {\n      writer.uint32(40).int64(message.index);\n    }\n    if (message.key.length !== 0) {\n      writer.uint32(50).bytes(message.key);\n    }\n    if (message.value.length !== 0) {\n      writer.uint32(58).bytes(message.value);\n    }\n    if (message.proofOps !== undefined) {\n      _proof.ProofOps.encode(message.proofOps, writer.uint32(66).fork()).ldelim();\n    }\n    if (!message.height.isZero()) {\n      writer.uint32(72).int64(message.height);\n    }\n    if (message.codespace !== \"\") {\n      writer.uint32(82).string(message.codespace);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseQuery();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.code = reader.uint32();\n          break;\n        case 3:\n          message.log = reader.string();\n          break;\n        case 4:\n          message.info = reader.string();\n          break;\n        case 5:\n          message.index = reader.int64();\n          break;\n        case 6:\n          message.key = reader.bytes();\n          break;\n        case 7:\n          message.value = reader.bytes();\n          break;\n        case 8:\n          message.proofOps = _proof.ProofOps.decode(reader, reader.uint32());\n          break;\n        case 9:\n          message.height = reader.int64();\n          break;\n        case 10:\n          message.codespace = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$code2, _object$log2, _object$info2, _object$key2, _object$value2, _object$codespace;\n    var message = createBaseResponseQuery();\n    message.code = (_object$code2 = object.code) !== null && _object$code2 !== void 0 ? _object$code2 : 0;\n    message.log = (_object$log2 = object.log) !== null && _object$log2 !== void 0 ? _object$log2 : \"\";\n    message.info = (_object$info2 = object.info) !== null && _object$info2 !== void 0 ? _object$info2 : \"\";\n    message.index = object.index !== undefined && object.index !== null ? _helpers.Long.fromValue(object.index) : _helpers.Long.ZERO;\n    message.key = (_object$key2 = object.key) !== null && _object$key2 !== void 0 ? _object$key2 : new Uint8Array();\n    message.value = (_object$value2 = object.value) !== null && _object$value2 !== void 0 ? _object$value2 : new Uint8Array();\n    message.proofOps = object.proofOps !== undefined && object.proofOps !== null ? _proof.ProofOps.fromPartial(object.proofOps) : undefined;\n    message.height = object.height !== undefined && object.height !== null ? _helpers.Long.fromValue(object.height) : _helpers.Long.ZERO;\n    message.codespace = (_object$codespace = object.codespace) !== null && _object$codespace !== void 0 ? _object$codespace : \"\";\n    return message;\n  }\n};\nexports.ResponseQuery = ResponseQuery;\nfunction createBaseResponseBeginBlock() {\n  return {\n    events: []\n  };\n}\nvar ResponseBeginBlock = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    var _iterator4 = _createForOfIteratorHelper(message.events),\n      _step4;\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var v = _step4.value;\n        Event.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseBeginBlock();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.events.push(Event.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$events;\n    var message = createBaseResponseBeginBlock();\n    message.events = ((_object$events = object.events) === null || _object$events === void 0 ? void 0 : _object$events.map(function (e) {\n      return Event.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nexports.ResponseBeginBlock = ResponseBeginBlock;\nfunction createBaseResponseCheckTx() {\n  return {\n    code: 0,\n    data: new Uint8Array(),\n    log: \"\",\n    info: \"\",\n    gasWanted: _helpers.Long.ZERO,\n    gasUsed: _helpers.Long.ZERO,\n    events: [],\n    codespace: \"\"\n  };\n}\nvar ResponseCheckTx = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.code !== 0) {\n      writer.uint32(8).uint32(message.code);\n    }\n    if (message.data.length !== 0) {\n      writer.uint32(18).bytes(message.data);\n    }\n    if (message.log !== \"\") {\n      writer.uint32(26).string(message.log);\n    }\n    if (message.info !== \"\") {\n      writer.uint32(34).string(message.info);\n    }\n    if (!message.gasWanted.isZero()) {\n      writer.uint32(40).int64(message.gasWanted);\n    }\n    if (!message.gasUsed.isZero()) {\n      writer.uint32(48).int64(message.gasUsed);\n    }\n    var _iterator5 = _createForOfIteratorHelper(message.events),\n      _step5;\n    try {\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        var v = _step5.value;\n        Event.encode(v, writer.uint32(58).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n    if (message.codespace !== \"\") {\n      writer.uint32(66).string(message.codespace);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseCheckTx();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.code = reader.uint32();\n          break;\n        case 2:\n          message.data = reader.bytes();\n          break;\n        case 3:\n          message.log = reader.string();\n          break;\n        case 4:\n          message.info = reader.string();\n          break;\n        case 5:\n          message.gasWanted = reader.int64();\n          break;\n        case 6:\n          message.gasUsed = reader.int64();\n          break;\n        case 7:\n          message.events.push(Event.decode(reader, reader.uint32()));\n          break;\n        case 8:\n          message.codespace = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$code3, _object$data3, _object$log3, _object$info3, _object$events2, _object$codespace2;\n    var message = createBaseResponseCheckTx();\n    message.code = (_object$code3 = object.code) !== null && _object$code3 !== void 0 ? _object$code3 : 0;\n    message.data = (_object$data3 = object.data) !== null && _object$data3 !== void 0 ? _object$data3 : new Uint8Array();\n    message.log = (_object$log3 = object.log) !== null && _object$log3 !== void 0 ? _object$log3 : \"\";\n    message.info = (_object$info3 = object.info) !== null && _object$info3 !== void 0 ? _object$info3 : \"\";\n    message.gasWanted = object.gasWanted !== undefined && object.gasWanted !== null ? _helpers.Long.fromValue(object.gasWanted) : _helpers.Long.ZERO;\n    message.gasUsed = object.gasUsed !== undefined && object.gasUsed !== null ? _helpers.Long.fromValue(object.gasUsed) : _helpers.Long.ZERO;\n    message.events = ((_object$events2 = object.events) === null || _object$events2 === void 0 ? void 0 : _object$events2.map(function (e) {\n      return Event.fromPartial(e);\n    })) || [];\n    message.codespace = (_object$codespace2 = object.codespace) !== null && _object$codespace2 !== void 0 ? _object$codespace2 : \"\";\n    return message;\n  }\n};\nexports.ResponseCheckTx = ResponseCheckTx;\nfunction createBaseResponseDeliverTx() {\n  return {\n    code: 0,\n    data: new Uint8Array(),\n    log: \"\",\n    info: \"\",\n    gasWanted: _helpers.Long.ZERO,\n    gasUsed: _helpers.Long.ZERO,\n    events: [],\n    codespace: \"\"\n  };\n}\nvar ResponseDeliverTx = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.code !== 0) {\n      writer.uint32(8).uint32(message.code);\n    }\n    if (message.data.length !== 0) {\n      writer.uint32(18).bytes(message.data);\n    }\n    if (message.log !== \"\") {\n      writer.uint32(26).string(message.log);\n    }\n    if (message.info !== \"\") {\n      writer.uint32(34).string(message.info);\n    }\n    if (!message.gasWanted.isZero()) {\n      writer.uint32(40).int64(message.gasWanted);\n    }\n    if (!message.gasUsed.isZero()) {\n      writer.uint32(48).int64(message.gasUsed);\n    }\n    var _iterator6 = _createForOfIteratorHelper(message.events),\n      _step6;\n    try {\n      for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n        var v = _step6.value;\n        Event.encode(v, writer.uint32(58).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator6.e(err);\n    } finally {\n      _iterator6.f();\n    }\n    if (message.codespace !== \"\") {\n      writer.uint32(66).string(message.codespace);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseDeliverTx();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.code = reader.uint32();\n          break;\n        case 2:\n          message.data = reader.bytes();\n          break;\n        case 3:\n          message.log = reader.string();\n          break;\n        case 4:\n          message.info = reader.string();\n          break;\n        case 5:\n          message.gasWanted = reader.int64();\n          break;\n        case 6:\n          message.gasUsed = reader.int64();\n          break;\n        case 7:\n          message.events.push(Event.decode(reader, reader.uint32()));\n          break;\n        case 8:\n          message.codespace = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$code4, _object$data4, _object$log4, _object$info4, _object$events3, _object$codespace3;\n    var message = createBaseResponseDeliverTx();\n    message.code = (_object$code4 = object.code) !== null && _object$code4 !== void 0 ? _object$code4 : 0;\n    message.data = (_object$data4 = object.data) !== null && _object$data4 !== void 0 ? _object$data4 : new Uint8Array();\n    message.log = (_object$log4 = object.log) !== null && _object$log4 !== void 0 ? _object$log4 : \"\";\n    message.info = (_object$info4 = object.info) !== null && _object$info4 !== void 0 ? _object$info4 : \"\";\n    message.gasWanted = object.gasWanted !== undefined && object.gasWanted !== null ? _helpers.Long.fromValue(object.gasWanted) : _helpers.Long.ZERO;\n    message.gasUsed = object.gasUsed !== undefined && object.gasUsed !== null ? _helpers.Long.fromValue(object.gasUsed) : _helpers.Long.ZERO;\n    message.events = ((_object$events3 = object.events) === null || _object$events3 === void 0 ? void 0 : _object$events3.map(function (e) {\n      return Event.fromPartial(e);\n    })) || [];\n    message.codespace = (_object$codespace3 = object.codespace) !== null && _object$codespace3 !== void 0 ? _object$codespace3 : \"\";\n    return message;\n  }\n};\nexports.ResponseDeliverTx = ResponseDeliverTx;\nfunction createBaseResponseEndBlock() {\n  return {\n    validatorUpdates: [],\n    consensusParamUpdates: ConsensusParams.fromPartial({}),\n    events: []\n  };\n}\nvar ResponseEndBlock = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    var _iterator7 = _createForOfIteratorHelper(message.validatorUpdates),\n      _step7;\n    try {\n      for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n        var v = _step7.value;\n        ValidatorUpdate.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator7.e(err);\n    } finally {\n      _iterator7.f();\n    }\n    if (message.consensusParamUpdates !== undefined) {\n      ConsensusParams.encode(message.consensusParamUpdates, writer.uint32(18).fork()).ldelim();\n    }\n    var _iterator8 = _createForOfIteratorHelper(message.events),\n      _step8;\n    try {\n      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n        var _v = _step8.value;\n        Event.encode(_v, writer.uint32(26).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator8.e(err);\n    } finally {\n      _iterator8.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseEndBlock();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.validatorUpdates.push(ValidatorUpdate.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.consensusParamUpdates = ConsensusParams.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.events.push(Event.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$validatorUpda, _object$events4;\n    var message = createBaseResponseEndBlock();\n    message.validatorUpdates = ((_object$validatorUpda = object.validatorUpdates) === null || _object$validatorUpda === void 0 ? void 0 : _object$validatorUpda.map(function (e) {\n      return ValidatorUpdate.fromPartial(e);\n    })) || [];\n    message.consensusParamUpdates = object.consensusParamUpdates !== undefined && object.consensusParamUpdates !== null ? ConsensusParams.fromPartial(object.consensusParamUpdates) : undefined;\n    message.events = ((_object$events4 = object.events) === null || _object$events4 === void 0 ? void 0 : _object$events4.map(function (e) {\n      return Event.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nexports.ResponseEndBlock = ResponseEndBlock;\nfunction createBaseResponseCommit() {\n  return {\n    data: new Uint8Array(),\n    retainHeight: _helpers.Long.ZERO\n  };\n}\nvar ResponseCommit = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.data.length !== 0) {\n      writer.uint32(18).bytes(message.data);\n    }\n    if (!message.retainHeight.isZero()) {\n      writer.uint32(24).int64(message.retainHeight);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseCommit();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 2:\n          message.data = reader.bytes();\n          break;\n        case 3:\n          message.retainHeight = reader.int64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$data5;\n    var message = createBaseResponseCommit();\n    message.data = (_object$data5 = object.data) !== null && _object$data5 !== void 0 ? _object$data5 : new Uint8Array();\n    message.retainHeight = object.retainHeight !== undefined && object.retainHeight !== null ? _helpers.Long.fromValue(object.retainHeight) : _helpers.Long.ZERO;\n    return message;\n  }\n};\nexports.ResponseCommit = ResponseCommit;\nfunction createBaseResponseListSnapshots() {\n  return {\n    snapshots: []\n  };\n}\nvar ResponseListSnapshots = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    var _iterator9 = _createForOfIteratorHelper(message.snapshots),\n      _step9;\n    try {\n      for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n        var v = _step9.value;\n        Snapshot.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator9.e(err);\n    } finally {\n      _iterator9.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseListSnapshots();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.snapshots.push(Snapshot.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$snapshots;\n    var message = createBaseResponseListSnapshots();\n    message.snapshots = ((_object$snapshots = object.snapshots) === null || _object$snapshots === void 0 ? void 0 : _object$snapshots.map(function (e) {\n      return Snapshot.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nexports.ResponseListSnapshots = ResponseListSnapshots;\nfunction createBaseResponseOfferSnapshot() {\n  return {\n    result: 0\n  };\n}\nvar ResponseOfferSnapshot = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.result !== 0) {\n      writer.uint32(8).int32(message.result);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseOfferSnapshot();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.result = reader.int32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$result;\n    var message = createBaseResponseOfferSnapshot();\n    message.result = (_object$result = object.result) !== null && _object$result !== void 0 ? _object$result : 0;\n    return message;\n  }\n};\nexports.ResponseOfferSnapshot = ResponseOfferSnapshot;\nfunction createBaseResponseLoadSnapshotChunk() {\n  return {\n    chunk: new Uint8Array()\n  };\n}\nvar ResponseLoadSnapshotChunk = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.chunk.length !== 0) {\n      writer.uint32(10).bytes(message.chunk);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseLoadSnapshotChunk();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.chunk = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$chunk3;\n    var message = createBaseResponseLoadSnapshotChunk();\n    message.chunk = (_object$chunk3 = object.chunk) !== null && _object$chunk3 !== void 0 ? _object$chunk3 : new Uint8Array();\n    return message;\n  }\n};\nexports.ResponseLoadSnapshotChunk = ResponseLoadSnapshotChunk;\nfunction createBaseResponseApplySnapshotChunk() {\n  return {\n    result: 0,\n    refetchChunks: [],\n    rejectSenders: []\n  };\n}\nvar ResponseApplySnapshotChunk = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.result !== 0) {\n      writer.uint32(8).int32(message.result);\n    }\n    writer.uint32(18).fork();\n    var _iterator10 = _createForOfIteratorHelper(message.refetchChunks),\n      _step10;\n    try {\n      for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n        var v = _step10.value;\n        writer.uint32(v);\n      }\n    } catch (err) {\n      _iterator10.e(err);\n    } finally {\n      _iterator10.f();\n    }\n    writer.ldelim();\n    var _iterator11 = _createForOfIteratorHelper(message.rejectSenders),\n      _step11;\n    try {\n      for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n        var _v2 = _step11.value;\n        writer.uint32(26).string(_v2);\n      }\n    } catch (err) {\n      _iterator11.e(err);\n    } finally {\n      _iterator11.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseApplySnapshotChunk();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.result = reader.int32();\n          break;\n        case 2:\n          if ((tag & 7) === 2) {\n            var end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.refetchChunks.push(reader.uint32());\n            }\n          } else {\n            message.refetchChunks.push(reader.uint32());\n          }\n          break;\n        case 3:\n          message.rejectSenders.push(reader.string());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$result2, _object$refetchChunks, _object$rejectSenders;\n    var message = createBaseResponseApplySnapshotChunk();\n    message.result = (_object$result2 = object.result) !== null && _object$result2 !== void 0 ? _object$result2 : 0;\n    message.refetchChunks = ((_object$refetchChunks = object.refetchChunks) === null || _object$refetchChunks === void 0 ? void 0 : _object$refetchChunks.map(function (e) {\n      return e;\n    })) || [];\n    message.rejectSenders = ((_object$rejectSenders = object.rejectSenders) === null || _object$rejectSenders === void 0 ? void 0 : _object$rejectSenders.map(function (e) {\n      return e;\n    })) || [];\n    return message;\n  }\n};\nexports.ResponseApplySnapshotChunk = ResponseApplySnapshotChunk;\nfunction createBaseConsensusParams() {\n  return {\n    block: BlockParams.fromPartial({}),\n    evidence: _params.EvidenceParams.fromPartial({}),\n    validator: _params.ValidatorParams.fromPartial({}),\n    version: _params.VersionParams.fromPartial({})\n  };\n}\nvar ConsensusParams = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.block !== undefined) {\n      BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.evidence !== undefined) {\n      _params.EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.validator !== undefined) {\n      _params.ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.version !== undefined) {\n      _params.VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseConsensusParams();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.block = BlockParams.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.evidence = _params.EvidenceParams.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.validator = _params.ValidatorParams.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.version = _params.VersionParams.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseConsensusParams();\n    message.block = object.block !== undefined && object.block !== null ? BlockParams.fromPartial(object.block) : undefined;\n    message.evidence = object.evidence !== undefined && object.evidence !== null ? _params.EvidenceParams.fromPartial(object.evidence) : undefined;\n    message.validator = object.validator !== undefined && object.validator !== null ? _params.ValidatorParams.fromPartial(object.validator) : undefined;\n    message.version = object.version !== undefined && object.version !== null ? _params.VersionParams.fromPartial(object.version) : undefined;\n    return message;\n  }\n};\nexports.ConsensusParams = ConsensusParams;\nfunction createBaseBlockParams() {\n  return {\n    maxBytes: _helpers.Long.ZERO,\n    maxGas: _helpers.Long.ZERO\n  };\n}\nvar BlockParams = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (!message.maxBytes.isZero()) {\n      writer.uint32(8).int64(message.maxBytes);\n    }\n    if (!message.maxGas.isZero()) {\n      writer.uint32(16).int64(message.maxGas);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseBlockParams();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.maxBytes = reader.int64();\n          break;\n        case 2:\n          message.maxGas = reader.int64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseBlockParams();\n    message.maxBytes = object.maxBytes !== undefined && object.maxBytes !== null ? _helpers.Long.fromValue(object.maxBytes) : _helpers.Long.ZERO;\n    message.maxGas = object.maxGas !== undefined && object.maxGas !== null ? _helpers.Long.fromValue(object.maxGas) : _helpers.Long.ZERO;\n    return message;\n  }\n};\nexports.BlockParams = BlockParams;\nfunction createBaseLastCommitInfo() {\n  return {\n    round: 0,\n    votes: []\n  };\n}\nvar LastCommitInfo = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.round !== 0) {\n      writer.uint32(8).int32(message.round);\n    }\n    var _iterator12 = _createForOfIteratorHelper(message.votes),\n      _step12;\n    try {\n      for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n        var v = _step12.value;\n        VoteInfo.encode(v, writer.uint32(18).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator12.e(err);\n    } finally {\n      _iterator12.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseLastCommitInfo();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.round = reader.int32();\n          break;\n        case 2:\n          message.votes.push(VoteInfo.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$round, _object$votes;\n    var message = createBaseLastCommitInfo();\n    message.round = (_object$round = object.round) !== null && _object$round !== void 0 ? _object$round : 0;\n    message.votes = ((_object$votes = object.votes) === null || _object$votes === void 0 ? void 0 : _object$votes.map(function (e) {\n      return VoteInfo.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nexports.LastCommitInfo = LastCommitInfo;\nfunction createBaseEvent() {\n  return {\n    type: \"\",\n    attributes: []\n  };\n}\nvar Event = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.type !== \"\") {\n      writer.uint32(10).string(message.type);\n    }\n    var _iterator13 = _createForOfIteratorHelper(message.attributes),\n      _step13;\n    try {\n      for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n        var v = _step13.value;\n        EventAttribute.encode(v, writer.uint32(18).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator13.e(err);\n    } finally {\n      _iterator13.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseEvent();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.type = reader.string();\n          break;\n        case 2:\n          message.attributes.push(EventAttribute.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$type2, _object$attributes;\n    var message = createBaseEvent();\n    message.type = (_object$type2 = object.type) !== null && _object$type2 !== void 0 ? _object$type2 : \"\";\n    message.attributes = ((_object$attributes = object.attributes) === null || _object$attributes === void 0 ? void 0 : _object$attributes.map(function (e) {\n      return EventAttribute.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nexports.Event = Event;\nfunction createBaseEventAttribute() {\n  return {\n    key: new Uint8Array(),\n    value: new Uint8Array(),\n    index: false\n  };\n}\nvar EventAttribute = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.key.length !== 0) {\n      writer.uint32(10).bytes(message.key);\n    }\n    if (message.value.length !== 0) {\n      writer.uint32(18).bytes(message.value);\n    }\n    if (message.index === true) {\n      writer.uint32(24).bool(message.index);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseEventAttribute();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.bytes();\n          break;\n        case 2:\n          message.value = reader.bytes();\n          break;\n        case 3:\n          message.index = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$key3, _object$value3, _object$index2;\n    var message = createBaseEventAttribute();\n    message.key = (_object$key3 = object.key) !== null && _object$key3 !== void 0 ? _object$key3 : new Uint8Array();\n    message.value = (_object$value3 = object.value) !== null && _object$value3 !== void 0 ? _object$value3 : new Uint8Array();\n    message.index = (_object$index2 = object.index) !== null && _object$index2 !== void 0 ? _object$index2 : false;\n    return message;\n  }\n};\nexports.EventAttribute = EventAttribute;\nfunction createBaseTxResult() {\n  return {\n    height: _helpers.Long.ZERO,\n    index: 0,\n    tx: new Uint8Array(),\n    result: ResponseDeliverTx.fromPartial({})\n  };\n}\nvar TxResult = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (!message.height.isZero()) {\n      writer.uint32(8).int64(message.height);\n    }\n    if (message.index !== 0) {\n      writer.uint32(16).uint32(message.index);\n    }\n    if (message.tx.length !== 0) {\n      writer.uint32(26).bytes(message.tx);\n    }\n    if (message.result !== undefined) {\n      ResponseDeliverTx.encode(message.result, writer.uint32(34).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseTxResult();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.height = reader.int64();\n          break;\n        case 2:\n          message.index = reader.uint32();\n          break;\n        case 3:\n          message.tx = reader.bytes();\n          break;\n        case 4:\n          message.result = ResponseDeliverTx.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$index3, _object$tx3;\n    var message = createBaseTxResult();\n    message.height = object.height !== undefined && object.height !== null ? _helpers.Long.fromValue(object.height) : _helpers.Long.ZERO;\n    message.index = (_object$index3 = object.index) !== null && _object$index3 !== void 0 ? _object$index3 : 0;\n    message.tx = (_object$tx3 = object.tx) !== null && _object$tx3 !== void 0 ? _object$tx3 : new Uint8Array();\n    message.result = object.result !== undefined && object.result !== null ? ResponseDeliverTx.fromPartial(object.result) : undefined;\n    return message;\n  }\n};\nexports.TxResult = TxResult;\nfunction createBaseValidator() {\n  return {\n    address: new Uint8Array(),\n    power: _helpers.Long.ZERO\n  };\n}\nvar Validator = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.address.length !== 0) {\n      writer.uint32(10).bytes(message.address);\n    }\n    if (!message.power.isZero()) {\n      writer.uint32(24).int64(message.power);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseValidator();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.address = reader.bytes();\n          break;\n        case 3:\n          message.power = reader.int64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$address;\n    var message = createBaseValidator();\n    message.address = (_object$address = object.address) !== null && _object$address !== void 0 ? _object$address : new Uint8Array();\n    message.power = object.power !== undefined && object.power !== null ? _helpers.Long.fromValue(object.power) : _helpers.Long.ZERO;\n    return message;\n  }\n};\nexports.Validator = Validator;\nfunction createBaseValidatorUpdate() {\n  return {\n    pubKey: _keys.PublicKey.fromPartial({}),\n    power: _helpers.Long.ZERO\n  };\n}\nvar ValidatorUpdate = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.pubKey !== undefined) {\n      _keys.PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n    }\n    if (!message.power.isZero()) {\n      writer.uint32(16).int64(message.power);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseValidatorUpdate();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.pubKey = _keys.PublicKey.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.power = reader.int64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseValidatorUpdate();\n    message.pubKey = object.pubKey !== undefined && object.pubKey !== null ? _keys.PublicKey.fromPartial(object.pubKey) : undefined;\n    message.power = object.power !== undefined && object.power !== null ? _helpers.Long.fromValue(object.power) : _helpers.Long.ZERO;\n    return message;\n  }\n};\nexports.ValidatorUpdate = ValidatorUpdate;\nfunction createBaseVoteInfo() {\n  return {\n    validator: Validator.fromPartial({}),\n    signedLastBlock: false\n  };\n}\nvar VoteInfo = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.validator !== undefined) {\n      Validator.encode(message.validator, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.signedLastBlock === true) {\n      writer.uint32(16).bool(message.signedLastBlock);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseVoteInfo();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.validator = Validator.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.signedLastBlock = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$signedLastBlo;\n    var message = createBaseVoteInfo();\n    message.validator = object.validator !== undefined && object.validator !== null ? Validator.fromPartial(object.validator) : undefined;\n    message.signedLastBlock = (_object$signedLastBlo = object.signedLastBlock) !== null && _object$signedLastBlo !== void 0 ? _object$signedLastBlo : false;\n    return message;\n  }\n};\nexports.VoteInfo = VoteInfo;\nfunction createBaseEvidence() {\n  return {\n    type: 0,\n    validator: Validator.fromPartial({}),\n    height: _helpers.Long.ZERO,\n    time: undefined,\n    totalVotingPower: _helpers.Long.ZERO\n  };\n}\nvar Evidence = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.type !== 0) {\n      writer.uint32(8).int32(message.type);\n    }\n    if (message.validator !== undefined) {\n      Validator.encode(message.validator, writer.uint32(18).fork()).ldelim();\n    }\n    if (!message.height.isZero()) {\n      writer.uint32(24).int64(message.height);\n    }\n    if (message.time !== undefined) {\n      _timestamp.Timestamp.encode((0, _helpers.toTimestamp)(message.time), writer.uint32(34).fork()).ldelim();\n    }\n    if (!message.totalVotingPower.isZero()) {\n      writer.uint32(40).int64(message.totalVotingPower);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseEvidence();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.type = reader.int32();\n          break;\n        case 2:\n          message.validator = Validator.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.height = reader.int64();\n          break;\n        case 4:\n          message.time = (0, _helpers.fromTimestamp)(_timestamp.Timestamp.decode(reader, reader.uint32()));\n          break;\n        case 5:\n          message.totalVotingPower = reader.int64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$type3, _object$time2;\n    var message = createBaseEvidence();\n    message.type = (_object$type3 = object.type) !== null && _object$type3 !== void 0 ? _object$type3 : 0;\n    message.validator = object.validator !== undefined && object.validator !== null ? Validator.fromPartial(object.validator) : undefined;\n    message.height = object.height !== undefined && object.height !== null ? _helpers.Long.fromValue(object.height) : _helpers.Long.ZERO;\n    message.time = (_object$time2 = object.time) !== null && _object$time2 !== void 0 ? _object$time2 : undefined;\n    message.totalVotingPower = object.totalVotingPower !== undefined && object.totalVotingPower !== null ? _helpers.Long.fromValue(object.totalVotingPower) : _helpers.Long.ZERO;\n    return message;\n  }\n};\nexports.Evidence = Evidence;\nfunction createBaseSnapshot() {\n  return {\n    height: _helpers.Long.UZERO,\n    format: 0,\n    chunks: 0,\n    hash: new Uint8Array(),\n    metadata: new Uint8Array()\n  };\n}\nvar Snapshot = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (!message.height.isZero()) {\n      writer.uint32(8).uint64(message.height);\n    }\n    if (message.format !== 0) {\n      writer.uint32(16).uint32(message.format);\n    }\n    if (message.chunks !== 0) {\n      writer.uint32(24).uint32(message.chunks);\n    }\n    if (message.hash.length !== 0) {\n      writer.uint32(34).bytes(message.hash);\n    }\n    if (message.metadata.length !== 0) {\n      writer.uint32(42).bytes(message.metadata);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseSnapshot();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.height = reader.uint64();\n          break;\n        case 2:\n          message.format = reader.uint32();\n          break;\n        case 3:\n          message.chunks = reader.uint32();\n          break;\n        case 4:\n          message.hash = reader.bytes();\n          break;\n        case 5:\n          message.metadata = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$format2, _object$chunks, _object$hash2, _object$metadata;\n    var message = createBaseSnapshot();\n    message.height = object.height !== undefined && object.height !== null ? _helpers.Long.fromValue(object.height) : _helpers.Long.UZERO;\n    message.format = (_object$format2 = object.format) !== null && _object$format2 !== void 0 ? _object$format2 : 0;\n    message.chunks = (_object$chunks = object.chunks) !== null && _object$chunks !== void 0 ? _object$chunks : 0;\n    message.hash = (_object$hash2 = object.hash) !== null && _object$hash2 !== void 0 ? _object$hash2 : new Uint8Array();\n    message.metadata = (_object$metadata = object.metadata) !== null && _object$metadata !== void 0 ? _object$metadata : new Uint8Array();\n    return message;\n  }\n};\nexports.Snapshot = Snapshot;","map":{"version":3,"names":["_typeof","require","Object","defineProperty","exports","value","VoteInfo","ValidatorUpdate","Validator","TxResult","Snapshot","ResponseSetOption","ResponseQuery","ResponseOfferSnapshot_ResultSDKType","ResponseOfferSnapshot_Result","ResponseOfferSnapshot","ResponseLoadSnapshotChunk","ResponseListSnapshots","ResponseInitChain","ResponseInfo","ResponseFlush","ResponseException","ResponseEndBlock","ResponseEcho","ResponseDeliverTx","ResponseCommit","ResponseCheckTx","ResponseBeginBlock","ResponseApplySnapshotChunk_ResultSDKType","ResponseApplySnapshotChunk_Result","ResponseApplySnapshotChunk","Response","RequestSetOption","RequestQuery","RequestOfferSnapshot","RequestLoadSnapshotChunk","RequestListSnapshots","RequestInitChain","RequestInfo","RequestFlush","RequestEndBlock","RequestEcho","RequestDeliverTx","RequestCommit","RequestCheckTx","RequestBeginBlock","RequestApplySnapshotChunk","Request","LastCommitInfo","EvidenceTypeSDKType","EvidenceType","Evidence","EventAttribute","Event","ConsensusParams","CheckTxTypeSDKType","CheckTxType","BlockParams","checkTxTypeFromJSON","checkTxTypeToJSON","evidenceTypeFromJSON","evidenceTypeToJSON","responseApplySnapshotChunk_ResultFromJSON","responseApplySnapshotChunk_ResultToJSON","responseOfferSnapshot_ResultFromJSON","responseOfferSnapshot_ResultToJSON","_timestamp","_types","_proof","_params","_keys","_helpers","_m0","_interopRequireWildcard","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","e","_e","f","TypeError","normalCompletion","didErr","err","step","next","_e2","minLen","_arrayLikeToArray","toString","slice","constructor","name","from","test","arr","len","arr2","object","NEW","RECHECK","UNRECOGNIZED","UNKNOWN","ACCEPT","ABORT","REJECT","REJECT_FORMAT","REJECT_SENDER","RETRY","RETRY_SNAPSHOT","REJECT_SNAPSHOT","DUPLICATE_VOTE","LIGHT_CLIENT_ATTACK","createBaseRequest","echo","undefined","flush","info","setOption","initChain","query","beginBlock","checkTx","deliverTx","endBlock","commit","listSnapshots","offerSnapshot","loadSnapshotChunk","applySnapshotChunk","encode","message","writer","arguments","Writer","create","uint32","fork","ldelim","decode","input","reader","Reader","end","pos","tag","skipType","fromPartial","createBaseRequestEcho","string","_object$message","createBaseRequestFlush","_","createBaseRequestInfo","version","blockVersion","Long","UZERO","p2pVersion","isZero","uint64","_object$version","fromValue","createBaseRequestSetOption","_object$key","_object$value","createBaseRequestInitChain","time","chainId","consensusParams","validators","appStateBytes","Uint8Array","initialHeight","ZERO","Timestamp","toTimestamp","_iterator","_step","v","bytes","int64","fromTimestamp","push","_object$time","_object$chainId","_object$validators","_object$appStateBytes","map","createBaseRequestQuery","data","path","height","prove","bool","_object$data","_object$path","_object$prove","createBaseRequestBeginBlock","hash","header","Header","lastCommitInfo","byzantineValidators","_iterator2","_step2","_object$hash","_object$byzantineVali","createBaseRequestCheckTx","tx","type","int32","_object$tx","_object$type","createBaseRequestDeliverTx","_object$tx2","createBaseRequestEndBlock","createBaseRequestCommit","createBaseRequestListSnapshots","createBaseRequestOfferSnapshot","snapshot","appHash","_object$appHash","createBaseRequestLoadSnapshotChunk","format","chunk","_object$format","_object$chunk","createBaseRequestApplySnapshotChunk","index","sender","_object$index","_object$chunk2","_object$sender","createBaseResponse","exception","createBaseResponseException","error","_object$error","createBaseResponseEcho","_object$message2","createBaseResponseFlush","createBaseResponseInfo","appVersion","lastBlockHeight","lastBlockAppHash","_object$data2","_object$version2","_object$lastBlockAppH","createBaseResponseSetOption","code","log","_object$code","_object$log","_object$info","createBaseResponseInitChain","_iterator3","_step3","_object$validators2","_object$appHash2","createBaseResponseQuery","proofOps","ProofOps","codespace","_object$code2","_object$log2","_object$info2","_object$key2","_object$value2","_object$codespace","createBaseResponseBeginBlock","events","_iterator4","_step4","_object$events","createBaseResponseCheckTx","gasWanted","gasUsed","_iterator5","_step5","_object$code3","_object$data3","_object$log3","_object$info3","_object$events2","_object$codespace2","createBaseResponseDeliverTx","_iterator6","_step6","_object$code4","_object$data4","_object$log4","_object$info4","_object$events3","_object$codespace3","createBaseResponseEndBlock","validatorUpdates","consensusParamUpdates","_iterator7","_step7","_iterator8","_step8","_v","_object$validatorUpda","_object$events4","createBaseResponseCommit","retainHeight","_object$data5","createBaseResponseListSnapshots","snapshots","_iterator9","_step9","_object$snapshots","createBaseResponseOfferSnapshot","result","_object$result","createBaseResponseLoadSnapshotChunk","_object$chunk3","createBaseResponseApplySnapshotChunk","refetchChunks","rejectSenders","_iterator10","_step10","_iterator11","_step11","_v2","end2","_object$result2","_object$refetchChunks","_object$rejectSenders","createBaseConsensusParams","block","evidence","EvidenceParams","validator","ValidatorParams","VersionParams","createBaseBlockParams","maxBytes","maxGas","createBaseLastCommitInfo","round","votes","_iterator12","_step12","_object$round","_object$votes","createBaseEvent","attributes","_iterator13","_step13","_object$type2","_object$attributes","createBaseEventAttribute","_object$key3","_object$value3","_object$index2","createBaseTxResult","_object$index3","_object$tx3","createBaseValidator","address","power","_object$address","createBaseValidatorUpdate","pubKey","PublicKey","createBaseVoteInfo","signedLastBlock","_object$signedLastBlo","createBaseEvidence","totalVotingPower","_object$type3","_object$time2","createBaseSnapshot","chunks","metadata","_object$format2","_object$chunks","_object$hash2","_object$metadata"],"sources":["/Users/linanqi/Hackathon/Magic-Movie/frontend/node_modules/@sei-js/proto/main/codegen/tendermint/abci/types.js"],"sourcesContent":["\"use strict\";\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VoteInfo = exports.ValidatorUpdate = exports.Validator = exports.TxResult = exports.Snapshot = exports.ResponseSetOption = exports.ResponseQuery = exports.ResponseOfferSnapshot_ResultSDKType = exports.ResponseOfferSnapshot_Result = exports.ResponseOfferSnapshot = exports.ResponseLoadSnapshotChunk = exports.ResponseListSnapshots = exports.ResponseInitChain = exports.ResponseInfo = exports.ResponseFlush = exports.ResponseException = exports.ResponseEndBlock = exports.ResponseEcho = exports.ResponseDeliverTx = exports.ResponseCommit = exports.ResponseCheckTx = exports.ResponseBeginBlock = exports.ResponseApplySnapshotChunk_ResultSDKType = exports.ResponseApplySnapshotChunk_Result = exports.ResponseApplySnapshotChunk = exports.Response = exports.RequestSetOption = exports.RequestQuery = exports.RequestOfferSnapshot = exports.RequestLoadSnapshotChunk = exports.RequestListSnapshots = exports.RequestInitChain = exports.RequestInfo = exports.RequestFlush = exports.RequestEndBlock = exports.RequestEcho = exports.RequestDeliverTx = exports.RequestCommit = exports.RequestCheckTx = exports.RequestBeginBlock = exports.RequestApplySnapshotChunk = exports.Request = exports.LastCommitInfo = exports.EvidenceTypeSDKType = exports.EvidenceType = exports.Evidence = exports.EventAttribute = exports.Event = exports.ConsensusParams = exports.CheckTxTypeSDKType = exports.CheckTxType = exports.BlockParams = void 0;\nexports.checkTxTypeFromJSON = checkTxTypeFromJSON;\nexports.checkTxTypeToJSON = checkTxTypeToJSON;\nexports.evidenceTypeFromJSON = evidenceTypeFromJSON;\nexports.evidenceTypeToJSON = evidenceTypeToJSON;\nexports.responseApplySnapshotChunk_ResultFromJSON = responseApplySnapshotChunk_ResultFromJSON;\nexports.responseApplySnapshotChunk_ResultToJSON = responseApplySnapshotChunk_ResultToJSON;\nexports.responseOfferSnapshot_ResultFromJSON = responseOfferSnapshot_ResultFromJSON;\nexports.responseOfferSnapshot_ResultToJSON = responseOfferSnapshot_ResultToJSON;\nvar _timestamp = require(\"../../google/protobuf/timestamp\");\nvar _types = require(\"../types/types\");\nvar _proof = require(\"../crypto/proof\");\nvar _params = require(\"../types/params\");\nvar _keys = require(\"../crypto/keys\");\nvar _helpers = require(\"../../helpers\");\nvar _m0 = _interopRequireWildcard(require(\"protobufjs/minimal\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar CheckTxType;\nexports.CheckTxType = CheckTxType;\n(function (CheckTxType) {\n  CheckTxType[CheckTxType[\"NEW\"] = 0] = \"NEW\";\n  CheckTxType[CheckTxType[\"RECHECK\"] = 1] = \"RECHECK\";\n  CheckTxType[CheckTxType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(CheckTxType || (exports.CheckTxType = CheckTxType = {}));\nvar CheckTxTypeSDKType = CheckTxType;\nexports.CheckTxTypeSDKType = CheckTxTypeSDKType;\nfunction checkTxTypeFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"NEW\":\n      return CheckTxType.NEW;\n    case 1:\n    case \"RECHECK\":\n      return CheckTxType.RECHECK;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return CheckTxType.UNRECOGNIZED;\n  }\n}\nfunction checkTxTypeToJSON(object) {\n  switch (object) {\n    case CheckTxType.NEW:\n      return \"NEW\";\n    case CheckTxType.RECHECK:\n      return \"RECHECK\";\n    case CheckTxType.UNRECOGNIZED:\n    default:\n      return \"UNRECOGNIZED\";\n  }\n}\nvar ResponseOfferSnapshot_Result;\nexports.ResponseOfferSnapshot_Result = ResponseOfferSnapshot_Result;\n(function (ResponseOfferSnapshot_Result) {\n  ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n  ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ABORT\"] = 2] = \"ABORT\";\n  ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT\"] = 3] = \"REJECT\";\n  ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_FORMAT\"] = 4] = \"REJECT_FORMAT\";\n  ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_SENDER\"] = 5] = \"REJECT_SENDER\";\n  ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseOfferSnapshot_Result || (exports.ResponseOfferSnapshot_Result = ResponseOfferSnapshot_Result = {}));\nvar ResponseOfferSnapshot_ResultSDKType = ResponseOfferSnapshot_Result;\nexports.ResponseOfferSnapshot_ResultSDKType = ResponseOfferSnapshot_ResultSDKType;\nfunction responseOfferSnapshot_ResultFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"UNKNOWN\":\n      return ResponseOfferSnapshot_Result.UNKNOWN;\n    case 1:\n    case \"ACCEPT\":\n      return ResponseOfferSnapshot_Result.ACCEPT;\n    case 2:\n    case \"ABORT\":\n      return ResponseOfferSnapshot_Result.ABORT;\n    case 3:\n    case \"REJECT\":\n      return ResponseOfferSnapshot_Result.REJECT;\n    case 4:\n    case \"REJECT_FORMAT\":\n      return ResponseOfferSnapshot_Result.REJECT_FORMAT;\n    case 5:\n    case \"REJECT_SENDER\":\n      return ResponseOfferSnapshot_Result.REJECT_SENDER;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return ResponseOfferSnapshot_Result.UNRECOGNIZED;\n  }\n}\nfunction responseOfferSnapshot_ResultToJSON(object) {\n  switch (object) {\n    case ResponseOfferSnapshot_Result.UNKNOWN:\n      return \"UNKNOWN\";\n    case ResponseOfferSnapshot_Result.ACCEPT:\n      return \"ACCEPT\";\n    case ResponseOfferSnapshot_Result.ABORT:\n      return \"ABORT\";\n    case ResponseOfferSnapshot_Result.REJECT:\n      return \"REJECT\";\n    case ResponseOfferSnapshot_Result.REJECT_FORMAT:\n      return \"REJECT_FORMAT\";\n    case ResponseOfferSnapshot_Result.REJECT_SENDER:\n      return \"REJECT_SENDER\";\n    case ResponseOfferSnapshot_Result.UNRECOGNIZED:\n    default:\n      return \"UNRECOGNIZED\";\n  }\n}\nvar ResponseApplySnapshotChunk_Result;\nexports.ResponseApplySnapshotChunk_Result = ResponseApplySnapshotChunk_Result;\n(function (ResponseApplySnapshotChunk_Result) {\n  ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n  ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ABORT\"] = 2] = \"ABORT\";\n  ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY\"] = 3] = \"RETRY\";\n  ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY_SNAPSHOT\"] = 4] = \"RETRY_SNAPSHOT\";\n  ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"REJECT_SNAPSHOT\"] = 5] = \"REJECT_SNAPSHOT\";\n  ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseApplySnapshotChunk_Result || (exports.ResponseApplySnapshotChunk_Result = ResponseApplySnapshotChunk_Result = {}));\nvar ResponseApplySnapshotChunk_ResultSDKType = ResponseApplySnapshotChunk_Result;\nexports.ResponseApplySnapshotChunk_ResultSDKType = ResponseApplySnapshotChunk_ResultSDKType;\nfunction responseApplySnapshotChunk_ResultFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"UNKNOWN\":\n      return ResponseApplySnapshotChunk_Result.UNKNOWN;\n    case 1:\n    case \"ACCEPT\":\n      return ResponseApplySnapshotChunk_Result.ACCEPT;\n    case 2:\n    case \"ABORT\":\n      return ResponseApplySnapshotChunk_Result.ABORT;\n    case 3:\n    case \"RETRY\":\n      return ResponseApplySnapshotChunk_Result.RETRY;\n    case 4:\n    case \"RETRY_SNAPSHOT\":\n      return ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT;\n    case 5:\n    case \"REJECT_SNAPSHOT\":\n      return ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return ResponseApplySnapshotChunk_Result.UNRECOGNIZED;\n  }\n}\nfunction responseApplySnapshotChunk_ResultToJSON(object) {\n  switch (object) {\n    case ResponseApplySnapshotChunk_Result.UNKNOWN:\n      return \"UNKNOWN\";\n    case ResponseApplySnapshotChunk_Result.ACCEPT:\n      return \"ACCEPT\";\n    case ResponseApplySnapshotChunk_Result.ABORT:\n      return \"ABORT\";\n    case ResponseApplySnapshotChunk_Result.RETRY:\n      return \"RETRY\";\n    case ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT:\n      return \"RETRY_SNAPSHOT\";\n    case ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT:\n      return \"REJECT_SNAPSHOT\";\n    case ResponseApplySnapshotChunk_Result.UNRECOGNIZED:\n    default:\n      return \"UNRECOGNIZED\";\n  }\n}\nvar EvidenceType;\nexports.EvidenceType = EvidenceType;\n(function (EvidenceType) {\n  EvidenceType[EvidenceType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  EvidenceType[EvidenceType[\"DUPLICATE_VOTE\"] = 1] = \"DUPLICATE_VOTE\";\n  EvidenceType[EvidenceType[\"LIGHT_CLIENT_ATTACK\"] = 2] = \"LIGHT_CLIENT_ATTACK\";\n  EvidenceType[EvidenceType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(EvidenceType || (exports.EvidenceType = EvidenceType = {}));\nvar EvidenceTypeSDKType = EvidenceType;\nexports.EvidenceTypeSDKType = EvidenceTypeSDKType;\nfunction evidenceTypeFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"UNKNOWN\":\n      return EvidenceType.UNKNOWN;\n    case 1:\n    case \"DUPLICATE_VOTE\":\n      return EvidenceType.DUPLICATE_VOTE;\n    case 2:\n    case \"LIGHT_CLIENT_ATTACK\":\n      return EvidenceType.LIGHT_CLIENT_ATTACK;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return EvidenceType.UNRECOGNIZED;\n  }\n}\nfunction evidenceTypeToJSON(object) {\n  switch (object) {\n    case EvidenceType.UNKNOWN:\n      return \"UNKNOWN\";\n    case EvidenceType.DUPLICATE_VOTE:\n      return \"DUPLICATE_VOTE\";\n    case EvidenceType.LIGHT_CLIENT_ATTACK:\n      return \"LIGHT_CLIENT_ATTACK\";\n    case EvidenceType.UNRECOGNIZED:\n    default:\n      return \"UNRECOGNIZED\";\n  }\n}\nfunction createBaseRequest() {\n  return {\n    echo: undefined,\n    flush: undefined,\n    info: undefined,\n    setOption: undefined,\n    initChain: undefined,\n    query: undefined,\n    beginBlock: undefined,\n    checkTx: undefined,\n    deliverTx: undefined,\n    endBlock: undefined,\n    commit: undefined,\n    listSnapshots: undefined,\n    offerSnapshot: undefined,\n    loadSnapshotChunk: undefined,\n    applySnapshotChunk: undefined\n  };\n}\nvar Request = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.echo !== undefined) {\n      RequestEcho.encode(message.echo, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.flush !== undefined) {\n      RequestFlush.encode(message.flush, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.info !== undefined) {\n      RequestInfo.encode(message.info, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.setOption !== undefined) {\n      RequestSetOption.encode(message.setOption, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.initChain !== undefined) {\n      RequestInitChain.encode(message.initChain, writer.uint32(42).fork()).ldelim();\n    }\n    if (message.query !== undefined) {\n      RequestQuery.encode(message.query, writer.uint32(50).fork()).ldelim();\n    }\n    if (message.beginBlock !== undefined) {\n      RequestBeginBlock.encode(message.beginBlock, writer.uint32(58).fork()).ldelim();\n    }\n    if (message.checkTx !== undefined) {\n      RequestCheckTx.encode(message.checkTx, writer.uint32(66).fork()).ldelim();\n    }\n    if (message.deliverTx !== undefined) {\n      RequestDeliverTx.encode(message.deliverTx, writer.uint32(74).fork()).ldelim();\n    }\n    if (message.endBlock !== undefined) {\n      RequestEndBlock.encode(message.endBlock, writer.uint32(82).fork()).ldelim();\n    }\n    if (message.commit !== undefined) {\n      RequestCommit.encode(message.commit, writer.uint32(90).fork()).ldelim();\n    }\n    if (message.listSnapshots !== undefined) {\n      RequestListSnapshots.encode(message.listSnapshots, writer.uint32(98).fork()).ldelim();\n    }\n    if (message.offerSnapshot !== undefined) {\n      RequestOfferSnapshot.encode(message.offerSnapshot, writer.uint32(106).fork()).ldelim();\n    }\n    if (message.loadSnapshotChunk !== undefined) {\n      RequestLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(114).fork()).ldelim();\n    }\n    if (message.applySnapshotChunk !== undefined) {\n      RequestApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(122).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.echo = RequestEcho.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.flush = RequestFlush.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.info = RequestInfo.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.setOption = RequestSetOption.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.initChain = RequestInitChain.decode(reader, reader.uint32());\n          break;\n        case 6:\n          message.query = RequestQuery.decode(reader, reader.uint32());\n          break;\n        case 7:\n          message.beginBlock = RequestBeginBlock.decode(reader, reader.uint32());\n          break;\n        case 8:\n          message.checkTx = RequestCheckTx.decode(reader, reader.uint32());\n          break;\n        case 9:\n          message.deliverTx = RequestDeliverTx.decode(reader, reader.uint32());\n          break;\n        case 10:\n          message.endBlock = RequestEndBlock.decode(reader, reader.uint32());\n          break;\n        case 11:\n          message.commit = RequestCommit.decode(reader, reader.uint32());\n          break;\n        case 12:\n          message.listSnapshots = RequestListSnapshots.decode(reader, reader.uint32());\n          break;\n        case 13:\n          message.offerSnapshot = RequestOfferSnapshot.decode(reader, reader.uint32());\n          break;\n        case 14:\n          message.loadSnapshotChunk = RequestLoadSnapshotChunk.decode(reader, reader.uint32());\n          break;\n        case 15:\n          message.applySnapshotChunk = RequestApplySnapshotChunk.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseRequest();\n    message.echo = object.echo !== undefined && object.echo !== null ? RequestEcho.fromPartial(object.echo) : undefined;\n    message.flush = object.flush !== undefined && object.flush !== null ? RequestFlush.fromPartial(object.flush) : undefined;\n    message.info = object.info !== undefined && object.info !== null ? RequestInfo.fromPartial(object.info) : undefined;\n    message.setOption = object.setOption !== undefined && object.setOption !== null ? RequestSetOption.fromPartial(object.setOption) : undefined;\n    message.initChain = object.initChain !== undefined && object.initChain !== null ? RequestInitChain.fromPartial(object.initChain) : undefined;\n    message.query = object.query !== undefined && object.query !== null ? RequestQuery.fromPartial(object.query) : undefined;\n    message.beginBlock = object.beginBlock !== undefined && object.beginBlock !== null ? RequestBeginBlock.fromPartial(object.beginBlock) : undefined;\n    message.checkTx = object.checkTx !== undefined && object.checkTx !== null ? RequestCheckTx.fromPartial(object.checkTx) : undefined;\n    message.deliverTx = object.deliverTx !== undefined && object.deliverTx !== null ? RequestDeliverTx.fromPartial(object.deliverTx) : undefined;\n    message.endBlock = object.endBlock !== undefined && object.endBlock !== null ? RequestEndBlock.fromPartial(object.endBlock) : undefined;\n    message.commit = object.commit !== undefined && object.commit !== null ? RequestCommit.fromPartial(object.commit) : undefined;\n    message.listSnapshots = object.listSnapshots !== undefined && object.listSnapshots !== null ? RequestListSnapshots.fromPartial(object.listSnapshots) : undefined;\n    message.offerSnapshot = object.offerSnapshot !== undefined && object.offerSnapshot !== null ? RequestOfferSnapshot.fromPartial(object.offerSnapshot) : undefined;\n    message.loadSnapshotChunk = object.loadSnapshotChunk !== undefined && object.loadSnapshotChunk !== null ? RequestLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk) : undefined;\n    message.applySnapshotChunk = object.applySnapshotChunk !== undefined && object.applySnapshotChunk !== null ? RequestApplySnapshotChunk.fromPartial(object.applySnapshotChunk) : undefined;\n    return message;\n  }\n};\nexports.Request = Request;\nfunction createBaseRequestEcho() {\n  return {\n    message: \"\"\n  };\n}\nvar RequestEcho = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.message !== \"\") {\n      writer.uint32(10).string(message.message);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestEcho();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.message = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$message;\n    var message = createBaseRequestEcho();\n    message.message = (_object$message = object.message) !== null && _object$message !== void 0 ? _object$message : \"\";\n    return message;\n  }\n};\nexports.RequestEcho = RequestEcho;\nfunction createBaseRequestFlush() {\n  return {};\n}\nvar RequestFlush = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestFlush();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseRequestFlush();\n    return message;\n  }\n};\nexports.RequestFlush = RequestFlush;\nfunction createBaseRequestInfo() {\n  return {\n    version: \"\",\n    blockVersion: _helpers.Long.UZERO,\n    p2pVersion: _helpers.Long.UZERO\n  };\n}\nvar RequestInfo = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.version !== \"\") {\n      writer.uint32(10).string(message.version);\n    }\n    if (!message.blockVersion.isZero()) {\n      writer.uint32(16).uint64(message.blockVersion);\n    }\n    if (!message.p2pVersion.isZero()) {\n      writer.uint32(24).uint64(message.p2pVersion);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestInfo();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.version = reader.string();\n          break;\n        case 2:\n          message.blockVersion = reader.uint64();\n          break;\n        case 3:\n          message.p2pVersion = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$version;\n    var message = createBaseRequestInfo();\n    message.version = (_object$version = object.version) !== null && _object$version !== void 0 ? _object$version : \"\";\n    message.blockVersion = object.blockVersion !== undefined && object.blockVersion !== null ? _helpers.Long.fromValue(object.blockVersion) : _helpers.Long.UZERO;\n    message.p2pVersion = object.p2pVersion !== undefined && object.p2pVersion !== null ? _helpers.Long.fromValue(object.p2pVersion) : _helpers.Long.UZERO;\n    return message;\n  }\n};\nexports.RequestInfo = RequestInfo;\nfunction createBaseRequestSetOption() {\n  return {\n    key: \"\",\n    value: \"\"\n  };\n}\nvar RequestSetOption = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.key !== \"\") {\n      writer.uint32(10).string(message.key);\n    }\n    if (message.value !== \"\") {\n      writer.uint32(18).string(message.value);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestSetOption();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.string();\n          break;\n        case 2:\n          message.value = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$key, _object$value;\n    var message = createBaseRequestSetOption();\n    message.key = (_object$key = object.key) !== null && _object$key !== void 0 ? _object$key : \"\";\n    message.value = (_object$value = object.value) !== null && _object$value !== void 0 ? _object$value : \"\";\n    return message;\n  }\n};\nexports.RequestSetOption = RequestSetOption;\nfunction createBaseRequestInitChain() {\n  return {\n    time: undefined,\n    chainId: \"\",\n    consensusParams: ConsensusParams.fromPartial({}),\n    validators: [],\n    appStateBytes: new Uint8Array(),\n    initialHeight: _helpers.Long.ZERO\n  };\n}\nvar RequestInitChain = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.time !== undefined) {\n      _timestamp.Timestamp.encode((0, _helpers.toTimestamp)(message.time), writer.uint32(10).fork()).ldelim();\n    }\n    if (message.chainId !== \"\") {\n      writer.uint32(18).string(message.chainId);\n    }\n    if (message.consensusParams !== undefined) {\n      ConsensusParams.encode(message.consensusParams, writer.uint32(26).fork()).ldelim();\n    }\n    var _iterator = _createForOfIteratorHelper(message.validators),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        ValidatorUpdate.encode(v, writer.uint32(34).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    if (message.appStateBytes.length !== 0) {\n      writer.uint32(42).bytes(message.appStateBytes);\n    }\n    if (!message.initialHeight.isZero()) {\n      writer.uint32(48).int64(message.initialHeight);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestInitChain();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.time = (0, _helpers.fromTimestamp)(_timestamp.Timestamp.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.chainId = reader.string();\n          break;\n        case 3:\n          message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n          break;\n        case 5:\n          message.appStateBytes = reader.bytes();\n          break;\n        case 6:\n          message.initialHeight = reader.int64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$time, _object$chainId, _object$validators, _object$appStateBytes;\n    var message = createBaseRequestInitChain();\n    message.time = (_object$time = object.time) !== null && _object$time !== void 0 ? _object$time : undefined;\n    message.chainId = (_object$chainId = object.chainId) !== null && _object$chainId !== void 0 ? _object$chainId : \"\";\n    message.consensusParams = object.consensusParams !== undefined && object.consensusParams !== null ? ConsensusParams.fromPartial(object.consensusParams) : undefined;\n    message.validators = ((_object$validators = object.validators) === null || _object$validators === void 0 ? void 0 : _object$validators.map(function (e) {\n      return ValidatorUpdate.fromPartial(e);\n    })) || [];\n    message.appStateBytes = (_object$appStateBytes = object.appStateBytes) !== null && _object$appStateBytes !== void 0 ? _object$appStateBytes : new Uint8Array();\n    message.initialHeight = object.initialHeight !== undefined && object.initialHeight !== null ? _helpers.Long.fromValue(object.initialHeight) : _helpers.Long.ZERO;\n    return message;\n  }\n};\nexports.RequestInitChain = RequestInitChain;\nfunction createBaseRequestQuery() {\n  return {\n    data: new Uint8Array(),\n    path: \"\",\n    height: _helpers.Long.ZERO,\n    prove: false\n  };\n}\nvar RequestQuery = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.data.length !== 0) {\n      writer.uint32(10).bytes(message.data);\n    }\n    if (message.path !== \"\") {\n      writer.uint32(18).string(message.path);\n    }\n    if (!message.height.isZero()) {\n      writer.uint32(24).int64(message.height);\n    }\n    if (message.prove === true) {\n      writer.uint32(32).bool(message.prove);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestQuery();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.data = reader.bytes();\n          break;\n        case 2:\n          message.path = reader.string();\n          break;\n        case 3:\n          message.height = reader.int64();\n          break;\n        case 4:\n          message.prove = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$data, _object$path, _object$prove;\n    var message = createBaseRequestQuery();\n    message.data = (_object$data = object.data) !== null && _object$data !== void 0 ? _object$data : new Uint8Array();\n    message.path = (_object$path = object.path) !== null && _object$path !== void 0 ? _object$path : \"\";\n    message.height = object.height !== undefined && object.height !== null ? _helpers.Long.fromValue(object.height) : _helpers.Long.ZERO;\n    message.prove = (_object$prove = object.prove) !== null && _object$prove !== void 0 ? _object$prove : false;\n    return message;\n  }\n};\nexports.RequestQuery = RequestQuery;\nfunction createBaseRequestBeginBlock() {\n  return {\n    hash: new Uint8Array(),\n    header: _types.Header.fromPartial({}),\n    lastCommitInfo: LastCommitInfo.fromPartial({}),\n    byzantineValidators: []\n  };\n}\nvar RequestBeginBlock = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.hash.length !== 0) {\n      writer.uint32(10).bytes(message.hash);\n    }\n    if (message.header !== undefined) {\n      _types.Header.encode(message.header, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.lastCommitInfo !== undefined) {\n      LastCommitInfo.encode(message.lastCommitInfo, writer.uint32(26).fork()).ldelim();\n    }\n    var _iterator2 = _createForOfIteratorHelper(message.byzantineValidators),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var v = _step2.value;\n        Evidence.encode(v, writer.uint32(34).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestBeginBlock();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.hash = reader.bytes();\n          break;\n        case 2:\n          message.header = _types.Header.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.lastCommitInfo = LastCommitInfo.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.byzantineValidators.push(Evidence.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$hash, _object$byzantineVali;\n    var message = createBaseRequestBeginBlock();\n    message.hash = (_object$hash = object.hash) !== null && _object$hash !== void 0 ? _object$hash : new Uint8Array();\n    message.header = object.header !== undefined && object.header !== null ? _types.Header.fromPartial(object.header) : undefined;\n    message.lastCommitInfo = object.lastCommitInfo !== undefined && object.lastCommitInfo !== null ? LastCommitInfo.fromPartial(object.lastCommitInfo) : undefined;\n    message.byzantineValidators = ((_object$byzantineVali = object.byzantineValidators) === null || _object$byzantineVali === void 0 ? void 0 : _object$byzantineVali.map(function (e) {\n      return Evidence.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nexports.RequestBeginBlock = RequestBeginBlock;\nfunction createBaseRequestCheckTx() {\n  return {\n    tx: new Uint8Array(),\n    type: 0\n  };\n}\nvar RequestCheckTx = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.tx.length !== 0) {\n      writer.uint32(10).bytes(message.tx);\n    }\n    if (message.type !== 0) {\n      writer.uint32(16).int32(message.type);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestCheckTx();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.tx = reader.bytes();\n          break;\n        case 2:\n          message.type = reader.int32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$tx, _object$type;\n    var message = createBaseRequestCheckTx();\n    message.tx = (_object$tx = object.tx) !== null && _object$tx !== void 0 ? _object$tx : new Uint8Array();\n    message.type = (_object$type = object.type) !== null && _object$type !== void 0 ? _object$type : 0;\n    return message;\n  }\n};\nexports.RequestCheckTx = RequestCheckTx;\nfunction createBaseRequestDeliverTx() {\n  return {\n    tx: new Uint8Array()\n  };\n}\nvar RequestDeliverTx = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.tx.length !== 0) {\n      writer.uint32(10).bytes(message.tx);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestDeliverTx();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.tx = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$tx2;\n    var message = createBaseRequestDeliverTx();\n    message.tx = (_object$tx2 = object.tx) !== null && _object$tx2 !== void 0 ? _object$tx2 : new Uint8Array();\n    return message;\n  }\n};\nexports.RequestDeliverTx = RequestDeliverTx;\nfunction createBaseRequestEndBlock() {\n  return {\n    height: _helpers.Long.ZERO\n  };\n}\nvar RequestEndBlock = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (!message.height.isZero()) {\n      writer.uint32(8).int64(message.height);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestEndBlock();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.height = reader.int64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseRequestEndBlock();\n    message.height = object.height !== undefined && object.height !== null ? _helpers.Long.fromValue(object.height) : _helpers.Long.ZERO;\n    return message;\n  }\n};\nexports.RequestEndBlock = RequestEndBlock;\nfunction createBaseRequestCommit() {\n  return {};\n}\nvar RequestCommit = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestCommit();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseRequestCommit();\n    return message;\n  }\n};\nexports.RequestCommit = RequestCommit;\nfunction createBaseRequestListSnapshots() {\n  return {};\n}\nvar RequestListSnapshots = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestListSnapshots();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseRequestListSnapshots();\n    return message;\n  }\n};\nexports.RequestListSnapshots = RequestListSnapshots;\nfunction createBaseRequestOfferSnapshot() {\n  return {\n    snapshot: Snapshot.fromPartial({}),\n    appHash: new Uint8Array()\n  };\n}\nvar RequestOfferSnapshot = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.snapshot !== undefined) {\n      Snapshot.encode(message.snapshot, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.appHash.length !== 0) {\n      writer.uint32(18).bytes(message.appHash);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestOfferSnapshot();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.snapshot = Snapshot.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.appHash = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$appHash;\n    var message = createBaseRequestOfferSnapshot();\n    message.snapshot = object.snapshot !== undefined && object.snapshot !== null ? Snapshot.fromPartial(object.snapshot) : undefined;\n    message.appHash = (_object$appHash = object.appHash) !== null && _object$appHash !== void 0 ? _object$appHash : new Uint8Array();\n    return message;\n  }\n};\nexports.RequestOfferSnapshot = RequestOfferSnapshot;\nfunction createBaseRequestLoadSnapshotChunk() {\n  return {\n    height: _helpers.Long.UZERO,\n    format: 0,\n    chunk: 0\n  };\n}\nvar RequestLoadSnapshotChunk = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (!message.height.isZero()) {\n      writer.uint32(8).uint64(message.height);\n    }\n    if (message.format !== 0) {\n      writer.uint32(16).uint32(message.format);\n    }\n    if (message.chunk !== 0) {\n      writer.uint32(24).uint32(message.chunk);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestLoadSnapshotChunk();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.height = reader.uint64();\n          break;\n        case 2:\n          message.format = reader.uint32();\n          break;\n        case 3:\n          message.chunk = reader.uint32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$format, _object$chunk;\n    var message = createBaseRequestLoadSnapshotChunk();\n    message.height = object.height !== undefined && object.height !== null ? _helpers.Long.fromValue(object.height) : _helpers.Long.UZERO;\n    message.format = (_object$format = object.format) !== null && _object$format !== void 0 ? _object$format : 0;\n    message.chunk = (_object$chunk = object.chunk) !== null && _object$chunk !== void 0 ? _object$chunk : 0;\n    return message;\n  }\n};\nexports.RequestLoadSnapshotChunk = RequestLoadSnapshotChunk;\nfunction createBaseRequestApplySnapshotChunk() {\n  return {\n    index: 0,\n    chunk: new Uint8Array(),\n    sender: \"\"\n  };\n}\nvar RequestApplySnapshotChunk = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.index !== 0) {\n      writer.uint32(8).uint32(message.index);\n    }\n    if (message.chunk.length !== 0) {\n      writer.uint32(18).bytes(message.chunk);\n    }\n    if (message.sender !== \"\") {\n      writer.uint32(26).string(message.sender);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRequestApplySnapshotChunk();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.index = reader.uint32();\n          break;\n        case 2:\n          message.chunk = reader.bytes();\n          break;\n        case 3:\n          message.sender = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$index, _object$chunk2, _object$sender;\n    var message = createBaseRequestApplySnapshotChunk();\n    message.index = (_object$index = object.index) !== null && _object$index !== void 0 ? _object$index : 0;\n    message.chunk = (_object$chunk2 = object.chunk) !== null && _object$chunk2 !== void 0 ? _object$chunk2 : new Uint8Array();\n    message.sender = (_object$sender = object.sender) !== null && _object$sender !== void 0 ? _object$sender : \"\";\n    return message;\n  }\n};\nexports.RequestApplySnapshotChunk = RequestApplySnapshotChunk;\nfunction createBaseResponse() {\n  return {\n    exception: undefined,\n    echo: undefined,\n    flush: undefined,\n    info: undefined,\n    setOption: undefined,\n    initChain: undefined,\n    query: undefined,\n    beginBlock: undefined,\n    checkTx: undefined,\n    deliverTx: undefined,\n    endBlock: undefined,\n    commit: undefined,\n    listSnapshots: undefined,\n    offerSnapshot: undefined,\n    loadSnapshotChunk: undefined,\n    applySnapshotChunk: undefined\n  };\n}\nvar Response = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.exception !== undefined) {\n      ResponseException.encode(message.exception, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.echo !== undefined) {\n      ResponseEcho.encode(message.echo, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.flush !== undefined) {\n      ResponseFlush.encode(message.flush, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.info !== undefined) {\n      ResponseInfo.encode(message.info, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.setOption !== undefined) {\n      ResponseSetOption.encode(message.setOption, writer.uint32(42).fork()).ldelim();\n    }\n    if (message.initChain !== undefined) {\n      ResponseInitChain.encode(message.initChain, writer.uint32(50).fork()).ldelim();\n    }\n    if (message.query !== undefined) {\n      ResponseQuery.encode(message.query, writer.uint32(58).fork()).ldelim();\n    }\n    if (message.beginBlock !== undefined) {\n      ResponseBeginBlock.encode(message.beginBlock, writer.uint32(66).fork()).ldelim();\n    }\n    if (message.checkTx !== undefined) {\n      ResponseCheckTx.encode(message.checkTx, writer.uint32(74).fork()).ldelim();\n    }\n    if (message.deliverTx !== undefined) {\n      ResponseDeliverTx.encode(message.deliverTx, writer.uint32(82).fork()).ldelim();\n    }\n    if (message.endBlock !== undefined) {\n      ResponseEndBlock.encode(message.endBlock, writer.uint32(90).fork()).ldelim();\n    }\n    if (message.commit !== undefined) {\n      ResponseCommit.encode(message.commit, writer.uint32(98).fork()).ldelim();\n    }\n    if (message.listSnapshots !== undefined) {\n      ResponseListSnapshots.encode(message.listSnapshots, writer.uint32(106).fork()).ldelim();\n    }\n    if (message.offerSnapshot !== undefined) {\n      ResponseOfferSnapshot.encode(message.offerSnapshot, writer.uint32(114).fork()).ldelim();\n    }\n    if (message.loadSnapshotChunk !== undefined) {\n      ResponseLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(122).fork()).ldelim();\n    }\n    if (message.applySnapshotChunk !== undefined) {\n      ResponseApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(130).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.exception = ResponseException.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.echo = ResponseEcho.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.flush = ResponseFlush.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.info = ResponseInfo.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.setOption = ResponseSetOption.decode(reader, reader.uint32());\n          break;\n        case 6:\n          message.initChain = ResponseInitChain.decode(reader, reader.uint32());\n          break;\n        case 7:\n          message.query = ResponseQuery.decode(reader, reader.uint32());\n          break;\n        case 8:\n          message.beginBlock = ResponseBeginBlock.decode(reader, reader.uint32());\n          break;\n        case 9:\n          message.checkTx = ResponseCheckTx.decode(reader, reader.uint32());\n          break;\n        case 10:\n          message.deliverTx = ResponseDeliverTx.decode(reader, reader.uint32());\n          break;\n        case 11:\n          message.endBlock = ResponseEndBlock.decode(reader, reader.uint32());\n          break;\n        case 12:\n          message.commit = ResponseCommit.decode(reader, reader.uint32());\n          break;\n        case 13:\n          message.listSnapshots = ResponseListSnapshots.decode(reader, reader.uint32());\n          break;\n        case 14:\n          message.offerSnapshot = ResponseOfferSnapshot.decode(reader, reader.uint32());\n          break;\n        case 15:\n          message.loadSnapshotChunk = ResponseLoadSnapshotChunk.decode(reader, reader.uint32());\n          break;\n        case 16:\n          message.applySnapshotChunk = ResponseApplySnapshotChunk.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseResponse();\n    message.exception = object.exception !== undefined && object.exception !== null ? ResponseException.fromPartial(object.exception) : undefined;\n    message.echo = object.echo !== undefined && object.echo !== null ? ResponseEcho.fromPartial(object.echo) : undefined;\n    message.flush = object.flush !== undefined && object.flush !== null ? ResponseFlush.fromPartial(object.flush) : undefined;\n    message.info = object.info !== undefined && object.info !== null ? ResponseInfo.fromPartial(object.info) : undefined;\n    message.setOption = object.setOption !== undefined && object.setOption !== null ? ResponseSetOption.fromPartial(object.setOption) : undefined;\n    message.initChain = object.initChain !== undefined && object.initChain !== null ? ResponseInitChain.fromPartial(object.initChain) : undefined;\n    message.query = object.query !== undefined && object.query !== null ? ResponseQuery.fromPartial(object.query) : undefined;\n    message.beginBlock = object.beginBlock !== undefined && object.beginBlock !== null ? ResponseBeginBlock.fromPartial(object.beginBlock) : undefined;\n    message.checkTx = object.checkTx !== undefined && object.checkTx !== null ? ResponseCheckTx.fromPartial(object.checkTx) : undefined;\n    message.deliverTx = object.deliverTx !== undefined && object.deliverTx !== null ? ResponseDeliverTx.fromPartial(object.deliverTx) : undefined;\n    message.endBlock = object.endBlock !== undefined && object.endBlock !== null ? ResponseEndBlock.fromPartial(object.endBlock) : undefined;\n    message.commit = object.commit !== undefined && object.commit !== null ? ResponseCommit.fromPartial(object.commit) : undefined;\n    message.listSnapshots = object.listSnapshots !== undefined && object.listSnapshots !== null ? ResponseListSnapshots.fromPartial(object.listSnapshots) : undefined;\n    message.offerSnapshot = object.offerSnapshot !== undefined && object.offerSnapshot !== null ? ResponseOfferSnapshot.fromPartial(object.offerSnapshot) : undefined;\n    message.loadSnapshotChunk = object.loadSnapshotChunk !== undefined && object.loadSnapshotChunk !== null ? ResponseLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk) : undefined;\n    message.applySnapshotChunk = object.applySnapshotChunk !== undefined && object.applySnapshotChunk !== null ? ResponseApplySnapshotChunk.fromPartial(object.applySnapshotChunk) : undefined;\n    return message;\n  }\n};\nexports.Response = Response;\nfunction createBaseResponseException() {\n  return {\n    error: \"\"\n  };\n}\nvar ResponseException = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.error !== \"\") {\n      writer.uint32(10).string(message.error);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseException();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.error = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$error;\n    var message = createBaseResponseException();\n    message.error = (_object$error = object.error) !== null && _object$error !== void 0 ? _object$error : \"\";\n    return message;\n  }\n};\nexports.ResponseException = ResponseException;\nfunction createBaseResponseEcho() {\n  return {\n    message: \"\"\n  };\n}\nvar ResponseEcho = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.message !== \"\") {\n      writer.uint32(10).string(message.message);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseEcho();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.message = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$message2;\n    var message = createBaseResponseEcho();\n    message.message = (_object$message2 = object.message) !== null && _object$message2 !== void 0 ? _object$message2 : \"\";\n    return message;\n  }\n};\nexports.ResponseEcho = ResponseEcho;\nfunction createBaseResponseFlush() {\n  return {};\n}\nvar ResponseFlush = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseFlush();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseResponseFlush();\n    return message;\n  }\n};\nexports.ResponseFlush = ResponseFlush;\nfunction createBaseResponseInfo() {\n  return {\n    data: \"\",\n    version: \"\",\n    appVersion: _helpers.Long.UZERO,\n    lastBlockHeight: _helpers.Long.ZERO,\n    lastBlockAppHash: new Uint8Array()\n  };\n}\nvar ResponseInfo = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.data !== \"\") {\n      writer.uint32(10).string(message.data);\n    }\n    if (message.version !== \"\") {\n      writer.uint32(18).string(message.version);\n    }\n    if (!message.appVersion.isZero()) {\n      writer.uint32(24).uint64(message.appVersion);\n    }\n    if (!message.lastBlockHeight.isZero()) {\n      writer.uint32(32).int64(message.lastBlockHeight);\n    }\n    if (message.lastBlockAppHash.length !== 0) {\n      writer.uint32(42).bytes(message.lastBlockAppHash);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseInfo();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.data = reader.string();\n          break;\n        case 2:\n          message.version = reader.string();\n          break;\n        case 3:\n          message.appVersion = reader.uint64();\n          break;\n        case 4:\n          message.lastBlockHeight = reader.int64();\n          break;\n        case 5:\n          message.lastBlockAppHash = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$data2, _object$version2, _object$lastBlockAppH;\n    var message = createBaseResponseInfo();\n    message.data = (_object$data2 = object.data) !== null && _object$data2 !== void 0 ? _object$data2 : \"\";\n    message.version = (_object$version2 = object.version) !== null && _object$version2 !== void 0 ? _object$version2 : \"\";\n    message.appVersion = object.appVersion !== undefined && object.appVersion !== null ? _helpers.Long.fromValue(object.appVersion) : _helpers.Long.UZERO;\n    message.lastBlockHeight = object.lastBlockHeight !== undefined && object.lastBlockHeight !== null ? _helpers.Long.fromValue(object.lastBlockHeight) : _helpers.Long.ZERO;\n    message.lastBlockAppHash = (_object$lastBlockAppH = object.lastBlockAppHash) !== null && _object$lastBlockAppH !== void 0 ? _object$lastBlockAppH : new Uint8Array();\n    return message;\n  }\n};\nexports.ResponseInfo = ResponseInfo;\nfunction createBaseResponseSetOption() {\n  return {\n    code: 0,\n    log: \"\",\n    info: \"\"\n  };\n}\nvar ResponseSetOption = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.code !== 0) {\n      writer.uint32(8).uint32(message.code);\n    }\n    if (message.log !== \"\") {\n      writer.uint32(26).string(message.log);\n    }\n    if (message.info !== \"\") {\n      writer.uint32(34).string(message.info);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseSetOption();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.code = reader.uint32();\n          break;\n        case 3:\n          message.log = reader.string();\n          break;\n        case 4:\n          message.info = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$code, _object$log, _object$info;\n    var message = createBaseResponseSetOption();\n    message.code = (_object$code = object.code) !== null && _object$code !== void 0 ? _object$code : 0;\n    message.log = (_object$log = object.log) !== null && _object$log !== void 0 ? _object$log : \"\";\n    message.info = (_object$info = object.info) !== null && _object$info !== void 0 ? _object$info : \"\";\n    return message;\n  }\n};\nexports.ResponseSetOption = ResponseSetOption;\nfunction createBaseResponseInitChain() {\n  return {\n    consensusParams: ConsensusParams.fromPartial({}),\n    validators: [],\n    appHash: new Uint8Array()\n  };\n}\nvar ResponseInitChain = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.consensusParams !== undefined) {\n      ConsensusParams.encode(message.consensusParams, writer.uint32(10).fork()).ldelim();\n    }\n    var _iterator3 = _createForOfIteratorHelper(message.validators),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var v = _step3.value;\n        ValidatorUpdate.encode(v, writer.uint32(18).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    if (message.appHash.length !== 0) {\n      writer.uint32(26).bytes(message.appHash);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseInitChain();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n          break;\n        case 3:\n          message.appHash = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$validators2, _object$appHash2;\n    var message = createBaseResponseInitChain();\n    message.consensusParams = object.consensusParams !== undefined && object.consensusParams !== null ? ConsensusParams.fromPartial(object.consensusParams) : undefined;\n    message.validators = ((_object$validators2 = object.validators) === null || _object$validators2 === void 0 ? void 0 : _object$validators2.map(function (e) {\n      return ValidatorUpdate.fromPartial(e);\n    })) || [];\n    message.appHash = (_object$appHash2 = object.appHash) !== null && _object$appHash2 !== void 0 ? _object$appHash2 : new Uint8Array();\n    return message;\n  }\n};\nexports.ResponseInitChain = ResponseInitChain;\nfunction createBaseResponseQuery() {\n  return {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    index: _helpers.Long.ZERO,\n    key: new Uint8Array(),\n    value: new Uint8Array(),\n    proofOps: _proof.ProofOps.fromPartial({}),\n    height: _helpers.Long.ZERO,\n    codespace: \"\"\n  };\n}\nvar ResponseQuery = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.code !== 0) {\n      writer.uint32(8).uint32(message.code);\n    }\n    if (message.log !== \"\") {\n      writer.uint32(26).string(message.log);\n    }\n    if (message.info !== \"\") {\n      writer.uint32(34).string(message.info);\n    }\n    if (!message.index.isZero()) {\n      writer.uint32(40).int64(message.index);\n    }\n    if (message.key.length !== 0) {\n      writer.uint32(50).bytes(message.key);\n    }\n    if (message.value.length !== 0) {\n      writer.uint32(58).bytes(message.value);\n    }\n    if (message.proofOps !== undefined) {\n      _proof.ProofOps.encode(message.proofOps, writer.uint32(66).fork()).ldelim();\n    }\n    if (!message.height.isZero()) {\n      writer.uint32(72).int64(message.height);\n    }\n    if (message.codespace !== \"\") {\n      writer.uint32(82).string(message.codespace);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseQuery();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.code = reader.uint32();\n          break;\n        case 3:\n          message.log = reader.string();\n          break;\n        case 4:\n          message.info = reader.string();\n          break;\n        case 5:\n          message.index = reader.int64();\n          break;\n        case 6:\n          message.key = reader.bytes();\n          break;\n        case 7:\n          message.value = reader.bytes();\n          break;\n        case 8:\n          message.proofOps = _proof.ProofOps.decode(reader, reader.uint32());\n          break;\n        case 9:\n          message.height = reader.int64();\n          break;\n        case 10:\n          message.codespace = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$code2, _object$log2, _object$info2, _object$key2, _object$value2, _object$codespace;\n    var message = createBaseResponseQuery();\n    message.code = (_object$code2 = object.code) !== null && _object$code2 !== void 0 ? _object$code2 : 0;\n    message.log = (_object$log2 = object.log) !== null && _object$log2 !== void 0 ? _object$log2 : \"\";\n    message.info = (_object$info2 = object.info) !== null && _object$info2 !== void 0 ? _object$info2 : \"\";\n    message.index = object.index !== undefined && object.index !== null ? _helpers.Long.fromValue(object.index) : _helpers.Long.ZERO;\n    message.key = (_object$key2 = object.key) !== null && _object$key2 !== void 0 ? _object$key2 : new Uint8Array();\n    message.value = (_object$value2 = object.value) !== null && _object$value2 !== void 0 ? _object$value2 : new Uint8Array();\n    message.proofOps = object.proofOps !== undefined && object.proofOps !== null ? _proof.ProofOps.fromPartial(object.proofOps) : undefined;\n    message.height = object.height !== undefined && object.height !== null ? _helpers.Long.fromValue(object.height) : _helpers.Long.ZERO;\n    message.codespace = (_object$codespace = object.codespace) !== null && _object$codespace !== void 0 ? _object$codespace : \"\";\n    return message;\n  }\n};\nexports.ResponseQuery = ResponseQuery;\nfunction createBaseResponseBeginBlock() {\n  return {\n    events: []\n  };\n}\nvar ResponseBeginBlock = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    var _iterator4 = _createForOfIteratorHelper(message.events),\n      _step4;\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var v = _step4.value;\n        Event.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseBeginBlock();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.events.push(Event.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$events;\n    var message = createBaseResponseBeginBlock();\n    message.events = ((_object$events = object.events) === null || _object$events === void 0 ? void 0 : _object$events.map(function (e) {\n      return Event.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nexports.ResponseBeginBlock = ResponseBeginBlock;\nfunction createBaseResponseCheckTx() {\n  return {\n    code: 0,\n    data: new Uint8Array(),\n    log: \"\",\n    info: \"\",\n    gasWanted: _helpers.Long.ZERO,\n    gasUsed: _helpers.Long.ZERO,\n    events: [],\n    codespace: \"\"\n  };\n}\nvar ResponseCheckTx = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.code !== 0) {\n      writer.uint32(8).uint32(message.code);\n    }\n    if (message.data.length !== 0) {\n      writer.uint32(18).bytes(message.data);\n    }\n    if (message.log !== \"\") {\n      writer.uint32(26).string(message.log);\n    }\n    if (message.info !== \"\") {\n      writer.uint32(34).string(message.info);\n    }\n    if (!message.gasWanted.isZero()) {\n      writer.uint32(40).int64(message.gasWanted);\n    }\n    if (!message.gasUsed.isZero()) {\n      writer.uint32(48).int64(message.gasUsed);\n    }\n    var _iterator5 = _createForOfIteratorHelper(message.events),\n      _step5;\n    try {\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        var v = _step5.value;\n        Event.encode(v, writer.uint32(58).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n    if (message.codespace !== \"\") {\n      writer.uint32(66).string(message.codespace);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseCheckTx();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.code = reader.uint32();\n          break;\n        case 2:\n          message.data = reader.bytes();\n          break;\n        case 3:\n          message.log = reader.string();\n          break;\n        case 4:\n          message.info = reader.string();\n          break;\n        case 5:\n          message.gasWanted = reader.int64();\n          break;\n        case 6:\n          message.gasUsed = reader.int64();\n          break;\n        case 7:\n          message.events.push(Event.decode(reader, reader.uint32()));\n          break;\n        case 8:\n          message.codespace = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$code3, _object$data3, _object$log3, _object$info3, _object$events2, _object$codespace2;\n    var message = createBaseResponseCheckTx();\n    message.code = (_object$code3 = object.code) !== null && _object$code3 !== void 0 ? _object$code3 : 0;\n    message.data = (_object$data3 = object.data) !== null && _object$data3 !== void 0 ? _object$data3 : new Uint8Array();\n    message.log = (_object$log3 = object.log) !== null && _object$log3 !== void 0 ? _object$log3 : \"\";\n    message.info = (_object$info3 = object.info) !== null && _object$info3 !== void 0 ? _object$info3 : \"\";\n    message.gasWanted = object.gasWanted !== undefined && object.gasWanted !== null ? _helpers.Long.fromValue(object.gasWanted) : _helpers.Long.ZERO;\n    message.gasUsed = object.gasUsed !== undefined && object.gasUsed !== null ? _helpers.Long.fromValue(object.gasUsed) : _helpers.Long.ZERO;\n    message.events = ((_object$events2 = object.events) === null || _object$events2 === void 0 ? void 0 : _object$events2.map(function (e) {\n      return Event.fromPartial(e);\n    })) || [];\n    message.codespace = (_object$codespace2 = object.codespace) !== null && _object$codespace2 !== void 0 ? _object$codespace2 : \"\";\n    return message;\n  }\n};\nexports.ResponseCheckTx = ResponseCheckTx;\nfunction createBaseResponseDeliverTx() {\n  return {\n    code: 0,\n    data: new Uint8Array(),\n    log: \"\",\n    info: \"\",\n    gasWanted: _helpers.Long.ZERO,\n    gasUsed: _helpers.Long.ZERO,\n    events: [],\n    codespace: \"\"\n  };\n}\nvar ResponseDeliverTx = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.code !== 0) {\n      writer.uint32(8).uint32(message.code);\n    }\n    if (message.data.length !== 0) {\n      writer.uint32(18).bytes(message.data);\n    }\n    if (message.log !== \"\") {\n      writer.uint32(26).string(message.log);\n    }\n    if (message.info !== \"\") {\n      writer.uint32(34).string(message.info);\n    }\n    if (!message.gasWanted.isZero()) {\n      writer.uint32(40).int64(message.gasWanted);\n    }\n    if (!message.gasUsed.isZero()) {\n      writer.uint32(48).int64(message.gasUsed);\n    }\n    var _iterator6 = _createForOfIteratorHelper(message.events),\n      _step6;\n    try {\n      for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n        var v = _step6.value;\n        Event.encode(v, writer.uint32(58).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator6.e(err);\n    } finally {\n      _iterator6.f();\n    }\n    if (message.codespace !== \"\") {\n      writer.uint32(66).string(message.codespace);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseDeliverTx();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.code = reader.uint32();\n          break;\n        case 2:\n          message.data = reader.bytes();\n          break;\n        case 3:\n          message.log = reader.string();\n          break;\n        case 4:\n          message.info = reader.string();\n          break;\n        case 5:\n          message.gasWanted = reader.int64();\n          break;\n        case 6:\n          message.gasUsed = reader.int64();\n          break;\n        case 7:\n          message.events.push(Event.decode(reader, reader.uint32()));\n          break;\n        case 8:\n          message.codespace = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$code4, _object$data4, _object$log4, _object$info4, _object$events3, _object$codespace3;\n    var message = createBaseResponseDeliverTx();\n    message.code = (_object$code4 = object.code) !== null && _object$code4 !== void 0 ? _object$code4 : 0;\n    message.data = (_object$data4 = object.data) !== null && _object$data4 !== void 0 ? _object$data4 : new Uint8Array();\n    message.log = (_object$log4 = object.log) !== null && _object$log4 !== void 0 ? _object$log4 : \"\";\n    message.info = (_object$info4 = object.info) !== null && _object$info4 !== void 0 ? _object$info4 : \"\";\n    message.gasWanted = object.gasWanted !== undefined && object.gasWanted !== null ? _helpers.Long.fromValue(object.gasWanted) : _helpers.Long.ZERO;\n    message.gasUsed = object.gasUsed !== undefined && object.gasUsed !== null ? _helpers.Long.fromValue(object.gasUsed) : _helpers.Long.ZERO;\n    message.events = ((_object$events3 = object.events) === null || _object$events3 === void 0 ? void 0 : _object$events3.map(function (e) {\n      return Event.fromPartial(e);\n    })) || [];\n    message.codespace = (_object$codespace3 = object.codespace) !== null && _object$codespace3 !== void 0 ? _object$codespace3 : \"\";\n    return message;\n  }\n};\nexports.ResponseDeliverTx = ResponseDeliverTx;\nfunction createBaseResponseEndBlock() {\n  return {\n    validatorUpdates: [],\n    consensusParamUpdates: ConsensusParams.fromPartial({}),\n    events: []\n  };\n}\nvar ResponseEndBlock = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    var _iterator7 = _createForOfIteratorHelper(message.validatorUpdates),\n      _step7;\n    try {\n      for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n        var v = _step7.value;\n        ValidatorUpdate.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator7.e(err);\n    } finally {\n      _iterator7.f();\n    }\n    if (message.consensusParamUpdates !== undefined) {\n      ConsensusParams.encode(message.consensusParamUpdates, writer.uint32(18).fork()).ldelim();\n    }\n    var _iterator8 = _createForOfIteratorHelper(message.events),\n      _step8;\n    try {\n      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n        var _v = _step8.value;\n        Event.encode(_v, writer.uint32(26).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator8.e(err);\n    } finally {\n      _iterator8.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseEndBlock();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.validatorUpdates.push(ValidatorUpdate.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.consensusParamUpdates = ConsensusParams.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.events.push(Event.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$validatorUpda, _object$events4;\n    var message = createBaseResponseEndBlock();\n    message.validatorUpdates = ((_object$validatorUpda = object.validatorUpdates) === null || _object$validatorUpda === void 0 ? void 0 : _object$validatorUpda.map(function (e) {\n      return ValidatorUpdate.fromPartial(e);\n    })) || [];\n    message.consensusParamUpdates = object.consensusParamUpdates !== undefined && object.consensusParamUpdates !== null ? ConsensusParams.fromPartial(object.consensusParamUpdates) : undefined;\n    message.events = ((_object$events4 = object.events) === null || _object$events4 === void 0 ? void 0 : _object$events4.map(function (e) {\n      return Event.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nexports.ResponseEndBlock = ResponseEndBlock;\nfunction createBaseResponseCommit() {\n  return {\n    data: new Uint8Array(),\n    retainHeight: _helpers.Long.ZERO\n  };\n}\nvar ResponseCommit = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.data.length !== 0) {\n      writer.uint32(18).bytes(message.data);\n    }\n    if (!message.retainHeight.isZero()) {\n      writer.uint32(24).int64(message.retainHeight);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseCommit();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 2:\n          message.data = reader.bytes();\n          break;\n        case 3:\n          message.retainHeight = reader.int64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$data5;\n    var message = createBaseResponseCommit();\n    message.data = (_object$data5 = object.data) !== null && _object$data5 !== void 0 ? _object$data5 : new Uint8Array();\n    message.retainHeight = object.retainHeight !== undefined && object.retainHeight !== null ? _helpers.Long.fromValue(object.retainHeight) : _helpers.Long.ZERO;\n    return message;\n  }\n};\nexports.ResponseCommit = ResponseCommit;\nfunction createBaseResponseListSnapshots() {\n  return {\n    snapshots: []\n  };\n}\nvar ResponseListSnapshots = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    var _iterator9 = _createForOfIteratorHelper(message.snapshots),\n      _step9;\n    try {\n      for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n        var v = _step9.value;\n        Snapshot.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator9.e(err);\n    } finally {\n      _iterator9.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseListSnapshots();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.snapshots.push(Snapshot.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$snapshots;\n    var message = createBaseResponseListSnapshots();\n    message.snapshots = ((_object$snapshots = object.snapshots) === null || _object$snapshots === void 0 ? void 0 : _object$snapshots.map(function (e) {\n      return Snapshot.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nexports.ResponseListSnapshots = ResponseListSnapshots;\nfunction createBaseResponseOfferSnapshot() {\n  return {\n    result: 0\n  };\n}\nvar ResponseOfferSnapshot = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.result !== 0) {\n      writer.uint32(8).int32(message.result);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseOfferSnapshot();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.result = reader.int32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$result;\n    var message = createBaseResponseOfferSnapshot();\n    message.result = (_object$result = object.result) !== null && _object$result !== void 0 ? _object$result : 0;\n    return message;\n  }\n};\nexports.ResponseOfferSnapshot = ResponseOfferSnapshot;\nfunction createBaseResponseLoadSnapshotChunk() {\n  return {\n    chunk: new Uint8Array()\n  };\n}\nvar ResponseLoadSnapshotChunk = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.chunk.length !== 0) {\n      writer.uint32(10).bytes(message.chunk);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseLoadSnapshotChunk();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.chunk = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$chunk3;\n    var message = createBaseResponseLoadSnapshotChunk();\n    message.chunk = (_object$chunk3 = object.chunk) !== null && _object$chunk3 !== void 0 ? _object$chunk3 : new Uint8Array();\n    return message;\n  }\n};\nexports.ResponseLoadSnapshotChunk = ResponseLoadSnapshotChunk;\nfunction createBaseResponseApplySnapshotChunk() {\n  return {\n    result: 0,\n    refetchChunks: [],\n    rejectSenders: []\n  };\n}\nvar ResponseApplySnapshotChunk = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.result !== 0) {\n      writer.uint32(8).int32(message.result);\n    }\n    writer.uint32(18).fork();\n    var _iterator10 = _createForOfIteratorHelper(message.refetchChunks),\n      _step10;\n    try {\n      for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n        var v = _step10.value;\n        writer.uint32(v);\n      }\n    } catch (err) {\n      _iterator10.e(err);\n    } finally {\n      _iterator10.f();\n    }\n    writer.ldelim();\n    var _iterator11 = _createForOfIteratorHelper(message.rejectSenders),\n      _step11;\n    try {\n      for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n        var _v2 = _step11.value;\n        writer.uint32(26).string(_v2);\n      }\n    } catch (err) {\n      _iterator11.e(err);\n    } finally {\n      _iterator11.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResponseApplySnapshotChunk();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.result = reader.int32();\n          break;\n        case 2:\n          if ((tag & 7) === 2) {\n            var end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.refetchChunks.push(reader.uint32());\n            }\n          } else {\n            message.refetchChunks.push(reader.uint32());\n          }\n          break;\n        case 3:\n          message.rejectSenders.push(reader.string());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$result2, _object$refetchChunks, _object$rejectSenders;\n    var message = createBaseResponseApplySnapshotChunk();\n    message.result = (_object$result2 = object.result) !== null && _object$result2 !== void 0 ? _object$result2 : 0;\n    message.refetchChunks = ((_object$refetchChunks = object.refetchChunks) === null || _object$refetchChunks === void 0 ? void 0 : _object$refetchChunks.map(function (e) {\n      return e;\n    })) || [];\n    message.rejectSenders = ((_object$rejectSenders = object.rejectSenders) === null || _object$rejectSenders === void 0 ? void 0 : _object$rejectSenders.map(function (e) {\n      return e;\n    })) || [];\n    return message;\n  }\n};\nexports.ResponseApplySnapshotChunk = ResponseApplySnapshotChunk;\nfunction createBaseConsensusParams() {\n  return {\n    block: BlockParams.fromPartial({}),\n    evidence: _params.EvidenceParams.fromPartial({}),\n    validator: _params.ValidatorParams.fromPartial({}),\n    version: _params.VersionParams.fromPartial({})\n  };\n}\nvar ConsensusParams = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.block !== undefined) {\n      BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.evidence !== undefined) {\n      _params.EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.validator !== undefined) {\n      _params.ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.version !== undefined) {\n      _params.VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseConsensusParams();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.block = BlockParams.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.evidence = _params.EvidenceParams.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.validator = _params.ValidatorParams.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.version = _params.VersionParams.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseConsensusParams();\n    message.block = object.block !== undefined && object.block !== null ? BlockParams.fromPartial(object.block) : undefined;\n    message.evidence = object.evidence !== undefined && object.evidence !== null ? _params.EvidenceParams.fromPartial(object.evidence) : undefined;\n    message.validator = object.validator !== undefined && object.validator !== null ? _params.ValidatorParams.fromPartial(object.validator) : undefined;\n    message.version = object.version !== undefined && object.version !== null ? _params.VersionParams.fromPartial(object.version) : undefined;\n    return message;\n  }\n};\nexports.ConsensusParams = ConsensusParams;\nfunction createBaseBlockParams() {\n  return {\n    maxBytes: _helpers.Long.ZERO,\n    maxGas: _helpers.Long.ZERO\n  };\n}\nvar BlockParams = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (!message.maxBytes.isZero()) {\n      writer.uint32(8).int64(message.maxBytes);\n    }\n    if (!message.maxGas.isZero()) {\n      writer.uint32(16).int64(message.maxGas);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseBlockParams();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.maxBytes = reader.int64();\n          break;\n        case 2:\n          message.maxGas = reader.int64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseBlockParams();\n    message.maxBytes = object.maxBytes !== undefined && object.maxBytes !== null ? _helpers.Long.fromValue(object.maxBytes) : _helpers.Long.ZERO;\n    message.maxGas = object.maxGas !== undefined && object.maxGas !== null ? _helpers.Long.fromValue(object.maxGas) : _helpers.Long.ZERO;\n    return message;\n  }\n};\nexports.BlockParams = BlockParams;\nfunction createBaseLastCommitInfo() {\n  return {\n    round: 0,\n    votes: []\n  };\n}\nvar LastCommitInfo = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.round !== 0) {\n      writer.uint32(8).int32(message.round);\n    }\n    var _iterator12 = _createForOfIteratorHelper(message.votes),\n      _step12;\n    try {\n      for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n        var v = _step12.value;\n        VoteInfo.encode(v, writer.uint32(18).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator12.e(err);\n    } finally {\n      _iterator12.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseLastCommitInfo();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.round = reader.int32();\n          break;\n        case 2:\n          message.votes.push(VoteInfo.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$round, _object$votes;\n    var message = createBaseLastCommitInfo();\n    message.round = (_object$round = object.round) !== null && _object$round !== void 0 ? _object$round : 0;\n    message.votes = ((_object$votes = object.votes) === null || _object$votes === void 0 ? void 0 : _object$votes.map(function (e) {\n      return VoteInfo.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nexports.LastCommitInfo = LastCommitInfo;\nfunction createBaseEvent() {\n  return {\n    type: \"\",\n    attributes: []\n  };\n}\nvar Event = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.type !== \"\") {\n      writer.uint32(10).string(message.type);\n    }\n    var _iterator13 = _createForOfIteratorHelper(message.attributes),\n      _step13;\n    try {\n      for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n        var v = _step13.value;\n        EventAttribute.encode(v, writer.uint32(18).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator13.e(err);\n    } finally {\n      _iterator13.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseEvent();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.type = reader.string();\n          break;\n        case 2:\n          message.attributes.push(EventAttribute.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$type2, _object$attributes;\n    var message = createBaseEvent();\n    message.type = (_object$type2 = object.type) !== null && _object$type2 !== void 0 ? _object$type2 : \"\";\n    message.attributes = ((_object$attributes = object.attributes) === null || _object$attributes === void 0 ? void 0 : _object$attributes.map(function (e) {\n      return EventAttribute.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nexports.Event = Event;\nfunction createBaseEventAttribute() {\n  return {\n    key: new Uint8Array(),\n    value: new Uint8Array(),\n    index: false\n  };\n}\nvar EventAttribute = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.key.length !== 0) {\n      writer.uint32(10).bytes(message.key);\n    }\n    if (message.value.length !== 0) {\n      writer.uint32(18).bytes(message.value);\n    }\n    if (message.index === true) {\n      writer.uint32(24).bool(message.index);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseEventAttribute();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.bytes();\n          break;\n        case 2:\n          message.value = reader.bytes();\n          break;\n        case 3:\n          message.index = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$key3, _object$value3, _object$index2;\n    var message = createBaseEventAttribute();\n    message.key = (_object$key3 = object.key) !== null && _object$key3 !== void 0 ? _object$key3 : new Uint8Array();\n    message.value = (_object$value3 = object.value) !== null && _object$value3 !== void 0 ? _object$value3 : new Uint8Array();\n    message.index = (_object$index2 = object.index) !== null && _object$index2 !== void 0 ? _object$index2 : false;\n    return message;\n  }\n};\nexports.EventAttribute = EventAttribute;\nfunction createBaseTxResult() {\n  return {\n    height: _helpers.Long.ZERO,\n    index: 0,\n    tx: new Uint8Array(),\n    result: ResponseDeliverTx.fromPartial({})\n  };\n}\nvar TxResult = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (!message.height.isZero()) {\n      writer.uint32(8).int64(message.height);\n    }\n    if (message.index !== 0) {\n      writer.uint32(16).uint32(message.index);\n    }\n    if (message.tx.length !== 0) {\n      writer.uint32(26).bytes(message.tx);\n    }\n    if (message.result !== undefined) {\n      ResponseDeliverTx.encode(message.result, writer.uint32(34).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseTxResult();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.height = reader.int64();\n          break;\n        case 2:\n          message.index = reader.uint32();\n          break;\n        case 3:\n          message.tx = reader.bytes();\n          break;\n        case 4:\n          message.result = ResponseDeliverTx.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$index3, _object$tx3;\n    var message = createBaseTxResult();\n    message.height = object.height !== undefined && object.height !== null ? _helpers.Long.fromValue(object.height) : _helpers.Long.ZERO;\n    message.index = (_object$index3 = object.index) !== null && _object$index3 !== void 0 ? _object$index3 : 0;\n    message.tx = (_object$tx3 = object.tx) !== null && _object$tx3 !== void 0 ? _object$tx3 : new Uint8Array();\n    message.result = object.result !== undefined && object.result !== null ? ResponseDeliverTx.fromPartial(object.result) : undefined;\n    return message;\n  }\n};\nexports.TxResult = TxResult;\nfunction createBaseValidator() {\n  return {\n    address: new Uint8Array(),\n    power: _helpers.Long.ZERO\n  };\n}\nvar Validator = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.address.length !== 0) {\n      writer.uint32(10).bytes(message.address);\n    }\n    if (!message.power.isZero()) {\n      writer.uint32(24).int64(message.power);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseValidator();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.address = reader.bytes();\n          break;\n        case 3:\n          message.power = reader.int64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$address;\n    var message = createBaseValidator();\n    message.address = (_object$address = object.address) !== null && _object$address !== void 0 ? _object$address : new Uint8Array();\n    message.power = object.power !== undefined && object.power !== null ? _helpers.Long.fromValue(object.power) : _helpers.Long.ZERO;\n    return message;\n  }\n};\nexports.Validator = Validator;\nfunction createBaseValidatorUpdate() {\n  return {\n    pubKey: _keys.PublicKey.fromPartial({}),\n    power: _helpers.Long.ZERO\n  };\n}\nvar ValidatorUpdate = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.pubKey !== undefined) {\n      _keys.PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n    }\n    if (!message.power.isZero()) {\n      writer.uint32(16).int64(message.power);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseValidatorUpdate();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.pubKey = _keys.PublicKey.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.power = reader.int64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseValidatorUpdate();\n    message.pubKey = object.pubKey !== undefined && object.pubKey !== null ? _keys.PublicKey.fromPartial(object.pubKey) : undefined;\n    message.power = object.power !== undefined && object.power !== null ? _helpers.Long.fromValue(object.power) : _helpers.Long.ZERO;\n    return message;\n  }\n};\nexports.ValidatorUpdate = ValidatorUpdate;\nfunction createBaseVoteInfo() {\n  return {\n    validator: Validator.fromPartial({}),\n    signedLastBlock: false\n  };\n}\nvar VoteInfo = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.validator !== undefined) {\n      Validator.encode(message.validator, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.signedLastBlock === true) {\n      writer.uint32(16).bool(message.signedLastBlock);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseVoteInfo();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.validator = Validator.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.signedLastBlock = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$signedLastBlo;\n    var message = createBaseVoteInfo();\n    message.validator = object.validator !== undefined && object.validator !== null ? Validator.fromPartial(object.validator) : undefined;\n    message.signedLastBlock = (_object$signedLastBlo = object.signedLastBlock) !== null && _object$signedLastBlo !== void 0 ? _object$signedLastBlo : false;\n    return message;\n  }\n};\nexports.VoteInfo = VoteInfo;\nfunction createBaseEvidence() {\n  return {\n    type: 0,\n    validator: Validator.fromPartial({}),\n    height: _helpers.Long.ZERO,\n    time: undefined,\n    totalVotingPower: _helpers.Long.ZERO\n  };\n}\nvar Evidence = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.type !== 0) {\n      writer.uint32(8).int32(message.type);\n    }\n    if (message.validator !== undefined) {\n      Validator.encode(message.validator, writer.uint32(18).fork()).ldelim();\n    }\n    if (!message.height.isZero()) {\n      writer.uint32(24).int64(message.height);\n    }\n    if (message.time !== undefined) {\n      _timestamp.Timestamp.encode((0, _helpers.toTimestamp)(message.time), writer.uint32(34).fork()).ldelim();\n    }\n    if (!message.totalVotingPower.isZero()) {\n      writer.uint32(40).int64(message.totalVotingPower);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseEvidence();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.type = reader.int32();\n          break;\n        case 2:\n          message.validator = Validator.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.height = reader.int64();\n          break;\n        case 4:\n          message.time = (0, _helpers.fromTimestamp)(_timestamp.Timestamp.decode(reader, reader.uint32()));\n          break;\n        case 5:\n          message.totalVotingPower = reader.int64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$type3, _object$time2;\n    var message = createBaseEvidence();\n    message.type = (_object$type3 = object.type) !== null && _object$type3 !== void 0 ? _object$type3 : 0;\n    message.validator = object.validator !== undefined && object.validator !== null ? Validator.fromPartial(object.validator) : undefined;\n    message.height = object.height !== undefined && object.height !== null ? _helpers.Long.fromValue(object.height) : _helpers.Long.ZERO;\n    message.time = (_object$time2 = object.time) !== null && _object$time2 !== void 0 ? _object$time2 : undefined;\n    message.totalVotingPower = object.totalVotingPower !== undefined && object.totalVotingPower !== null ? _helpers.Long.fromValue(object.totalVotingPower) : _helpers.Long.ZERO;\n    return message;\n  }\n};\nexports.Evidence = Evidence;\nfunction createBaseSnapshot() {\n  return {\n    height: _helpers.Long.UZERO,\n    format: 0,\n    chunks: 0,\n    hash: new Uint8Array(),\n    metadata: new Uint8Array()\n  };\n}\nvar Snapshot = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (!message.height.isZero()) {\n      writer.uint32(8).uint64(message.height);\n    }\n    if (message.format !== 0) {\n      writer.uint32(16).uint32(message.format);\n    }\n    if (message.chunks !== 0) {\n      writer.uint32(24).uint32(message.chunks);\n    }\n    if (message.hash.length !== 0) {\n      writer.uint32(34).bytes(message.hash);\n    }\n    if (message.metadata.length !== 0) {\n      writer.uint32(42).bytes(message.metadata);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseSnapshot();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.height = reader.uint64();\n          break;\n        case 2:\n          message.format = reader.uint32();\n          break;\n        case 3:\n          message.chunks = reader.uint32();\n          break;\n        case 4:\n          message.hash = reader.bytes();\n          break;\n        case 5:\n          message.metadata = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$format2, _object$chunks, _object$hash2, _object$metadata;\n    var message = createBaseSnapshot();\n    message.height = object.height !== undefined && object.height !== null ? _helpers.Long.fromValue(object.height) : _helpers.Long.UZERO;\n    message.format = (_object$format2 = object.format) !== null && _object$format2 !== void 0 ? _object$format2 : 0;\n    message.chunks = (_object$chunks = object.chunks) !== null && _object$chunks !== void 0 ? _object$chunks : 0;\n    message.hash = (_object$hash2 = object.hash) !== null && _object$hash2 !== void 0 ? _object$hash2 : new Uint8Array();\n    message.metadata = (_object$metadata = object.metadata) !== null && _object$metadata !== void 0 ? _object$metadata : new Uint8Array();\n    return message;\n  }\n};\nexports.Snapshot = Snapshot;"],"mappings":"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"},"metadata":{},"sourceType":"script"}