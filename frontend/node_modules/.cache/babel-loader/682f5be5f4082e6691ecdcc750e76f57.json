{"ast":null,"code":"\"use strict\";\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AssetMetadata = exports.AssetIBCInfo = void 0;\nvar _bank = require(\"../../../cosmos/bank/v1beta1/bank\");\nvar _m0 = _interopRequireWildcard(require(\"protobufjs/minimal\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj[\"default\"] = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction createBaseAssetIBCInfo() {\n  return {\n    sourceChannel: \"\",\n    dstChannel: \"\",\n    sourceDenom: \"\",\n    sourceChainID: \"\"\n  };\n}\nvar AssetIBCInfo = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.sourceChannel !== \"\") {\n      writer.uint32(10).string(message.sourceChannel);\n    }\n    if (message.dstChannel !== \"\") {\n      writer.uint32(18).string(message.dstChannel);\n    }\n    if (message.sourceDenom !== \"\") {\n      writer.uint32(26).string(message.sourceDenom);\n    }\n    if (message.sourceChainID !== \"\") {\n      writer.uint32(34).string(message.sourceChainID);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseAssetIBCInfo();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.sourceChannel = reader.string();\n          break;\n        case 2:\n          message.dstChannel = reader.string();\n          break;\n        case 3:\n          message.sourceDenom = reader.string();\n          break;\n        case 4:\n          message.sourceChainID = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$sourceChannel, _object$dstChannel, _object$sourceDenom, _object$sourceChainID;\n    var message = createBaseAssetIBCInfo();\n    message.sourceChannel = (_object$sourceChannel = object.sourceChannel) !== null && _object$sourceChannel !== void 0 ? _object$sourceChannel : \"\";\n    message.dstChannel = (_object$dstChannel = object.dstChannel) !== null && _object$dstChannel !== void 0 ? _object$dstChannel : \"\";\n    message.sourceDenom = (_object$sourceDenom = object.sourceDenom) !== null && _object$sourceDenom !== void 0 ? _object$sourceDenom : \"\";\n    message.sourceChainID = (_object$sourceChainID = object.sourceChainID) !== null && _object$sourceChainID !== void 0 ? _object$sourceChainID : \"\";\n    return message;\n  }\n};\nexports.AssetIBCInfo = AssetIBCInfo;\nfunction createBaseAssetMetadata() {\n  return {\n    ibcInfo: AssetIBCInfo.fromPartial({}),\n    typeAsset: \"\",\n    metadata: _bank.Metadata.fromPartial({})\n  };\n}\nvar AssetMetadata = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.ibcInfo !== undefined) {\n      AssetIBCInfo.encode(message.ibcInfo, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.typeAsset !== \"\") {\n      writer.uint32(18).string(message.typeAsset);\n    }\n    if (message.metadata !== undefined) {\n      _bank.Metadata.encode(message.metadata, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseAssetMetadata();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.ibcInfo = AssetIBCInfo.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.typeAsset = reader.string();\n          break;\n        case 3:\n          message.metadata = _bank.Metadata.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$typeAsset;\n    var message = createBaseAssetMetadata();\n    message.ibcInfo = object.ibcInfo !== undefined && object.ibcInfo !== null ? AssetIBCInfo.fromPartial(object.ibcInfo) : undefined;\n    message.typeAsset = (_object$typeAsset = object.typeAsset) !== null && _object$typeAsset !== void 0 ? _object$typeAsset : \"\";\n    message.metadata = object.metadata !== undefined && object.metadata !== null ? _bank.Metadata.fromPartial(object.metadata) : undefined;\n    return message;\n  }\n};\nexports.AssetMetadata = AssetMetadata;","map":null,"metadata":{},"sourceType":"script"}