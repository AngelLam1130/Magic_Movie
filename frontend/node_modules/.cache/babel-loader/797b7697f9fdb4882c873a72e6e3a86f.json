{"ast":null,"code":"\"use strict\";\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgTimeoutResponse = exports.MsgTimeoutOnCloseResponse = exports.MsgTimeoutOnClose = exports.MsgTimeout = exports.MsgRecvPacketResponse = exports.MsgRecvPacket = exports.MsgChannelOpenTryResponse = exports.MsgChannelOpenTry = exports.MsgChannelOpenInitResponse = exports.MsgChannelOpenInit = exports.MsgChannelOpenConfirmResponse = exports.MsgChannelOpenConfirm = exports.MsgChannelOpenAckResponse = exports.MsgChannelOpenAck = exports.MsgChannelCloseInitResponse = exports.MsgChannelCloseInit = exports.MsgChannelCloseConfirmResponse = exports.MsgChannelCloseConfirm = exports.MsgAcknowledgementResponse = exports.MsgAcknowledgement = void 0;\nvar _channel = require(\"./channel\");\nvar _client = require(\"../../client/v1/client\");\nvar _helpers = require(\"../../../../helpers\");\nvar _m0 = _interopRequireWildcard(require(\"protobufjs/minimal\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj[\"default\"] = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction createBaseMsgChannelOpenInit() {\n  return {\n    portId: \"\",\n    channel: _channel.Channel.fromPartial({}),\n    signer: \"\"\n  };\n}\nvar MsgChannelOpenInit = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channel !== undefined) {\n      _channel.Channel.encode(message.channel, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(26).string(message.signer);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgChannelOpenInit();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channel = _channel.Channel.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$portId, _object$signer;\n    var message = createBaseMsgChannelOpenInit();\n    message.portId = (_object$portId = object.portId) !== null && _object$portId !== void 0 ? _object$portId : \"\";\n    message.channel = object.channel !== undefined && object.channel !== null ? _channel.Channel.fromPartial(object.channel) : undefined;\n    message.signer = (_object$signer = object.signer) !== null && _object$signer !== void 0 ? _object$signer : \"\";\n    return message;\n  }\n};\nexports.MsgChannelOpenInit = MsgChannelOpenInit;\nfunction createBaseMsgChannelOpenInitResponse() {\n  return {};\n}\nvar MsgChannelOpenInitResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgChannelOpenInitResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseMsgChannelOpenInitResponse();\n    return message;\n  }\n};\nexports.MsgChannelOpenInitResponse = MsgChannelOpenInitResponse;\nfunction createBaseMsgChannelOpenTry() {\n  return {\n    portId: \"\",\n    previousChannelId: \"\",\n    channel: _channel.Channel.fromPartial({}),\n    counterpartyVersion: \"\",\n    proofInit: new Uint8Array(),\n    proofHeight: _client.Height.fromPartial({}),\n    signer: \"\"\n  };\n}\nvar MsgChannelOpenTry = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.previousChannelId !== \"\") {\n      writer.uint32(18).string(message.previousChannelId);\n    }\n    if (message.channel !== undefined) {\n      _channel.Channel.encode(message.channel, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.counterpartyVersion !== \"\") {\n      writer.uint32(34).string(message.counterpartyVersion);\n    }\n    if (message.proofInit.length !== 0) {\n      writer.uint32(42).bytes(message.proofInit);\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(58).string(message.signer);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgChannelOpenTry();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.previousChannelId = reader.string();\n          break;\n        case 3:\n          message.channel = _channel.Channel.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.counterpartyVersion = reader.string();\n          break;\n        case 5:\n          message.proofInit = reader.bytes();\n          break;\n        case 6:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        case 7:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$portId2, _object$previousChann, _object$counterpartyV, _object$proofInit, _object$signer2;\n    var message = createBaseMsgChannelOpenTry();\n    message.portId = (_object$portId2 = object.portId) !== null && _object$portId2 !== void 0 ? _object$portId2 : \"\";\n    message.previousChannelId = (_object$previousChann = object.previousChannelId) !== null && _object$previousChann !== void 0 ? _object$previousChann : \"\";\n    message.channel = object.channel !== undefined && object.channel !== null ? _channel.Channel.fromPartial(object.channel) : undefined;\n    message.counterpartyVersion = (_object$counterpartyV = object.counterpartyVersion) !== null && _object$counterpartyV !== void 0 ? _object$counterpartyV : \"\";\n    message.proofInit = (_object$proofInit = object.proofInit) !== null && _object$proofInit !== void 0 ? _object$proofInit : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    message.signer = (_object$signer2 = object.signer) !== null && _object$signer2 !== void 0 ? _object$signer2 : \"\";\n    return message;\n  }\n};\nexports.MsgChannelOpenTry = MsgChannelOpenTry;\nfunction createBaseMsgChannelOpenTryResponse() {\n  return {};\n}\nvar MsgChannelOpenTryResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgChannelOpenTryResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseMsgChannelOpenTryResponse();\n    return message;\n  }\n};\nexports.MsgChannelOpenTryResponse = MsgChannelOpenTryResponse;\nfunction createBaseMsgChannelOpenAck() {\n  return {\n    portId: \"\",\n    channelId: \"\",\n    counterpartyChannelId: \"\",\n    counterpartyVersion: \"\",\n    proofTry: new Uint8Array(),\n    proofHeight: _client.Height.fromPartial({}),\n    signer: \"\"\n  };\n}\nvar MsgChannelOpenAck = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    if (message.counterpartyChannelId !== \"\") {\n      writer.uint32(26).string(message.counterpartyChannelId);\n    }\n    if (message.counterpartyVersion !== \"\") {\n      writer.uint32(34).string(message.counterpartyVersion);\n    }\n    if (message.proofTry.length !== 0) {\n      writer.uint32(42).bytes(message.proofTry);\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(58).string(message.signer);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgChannelOpenAck();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        case 3:\n          message.counterpartyChannelId = reader.string();\n          break;\n        case 4:\n          message.counterpartyVersion = reader.string();\n          break;\n        case 5:\n          message.proofTry = reader.bytes();\n          break;\n        case 6:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        case 7:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$portId3, _object$channelId, _object$counterpartyC, _object$counterpartyV2, _object$proofTry, _object$signer3;\n    var message = createBaseMsgChannelOpenAck();\n    message.portId = (_object$portId3 = object.portId) !== null && _object$portId3 !== void 0 ? _object$portId3 : \"\";\n    message.channelId = (_object$channelId = object.channelId) !== null && _object$channelId !== void 0 ? _object$channelId : \"\";\n    message.counterpartyChannelId = (_object$counterpartyC = object.counterpartyChannelId) !== null && _object$counterpartyC !== void 0 ? _object$counterpartyC : \"\";\n    message.counterpartyVersion = (_object$counterpartyV2 = object.counterpartyVersion) !== null && _object$counterpartyV2 !== void 0 ? _object$counterpartyV2 : \"\";\n    message.proofTry = (_object$proofTry = object.proofTry) !== null && _object$proofTry !== void 0 ? _object$proofTry : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    message.signer = (_object$signer3 = object.signer) !== null && _object$signer3 !== void 0 ? _object$signer3 : \"\";\n    return message;\n  }\n};\nexports.MsgChannelOpenAck = MsgChannelOpenAck;\nfunction createBaseMsgChannelOpenAckResponse() {\n  return {};\n}\nvar MsgChannelOpenAckResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgChannelOpenAckResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseMsgChannelOpenAckResponse();\n    return message;\n  }\n};\nexports.MsgChannelOpenAckResponse = MsgChannelOpenAckResponse;\nfunction createBaseMsgChannelOpenConfirm() {\n  return {\n    portId: \"\",\n    channelId: \"\",\n    proofAck: new Uint8Array(),\n    proofHeight: _client.Height.fromPartial({}),\n    signer: \"\"\n  };\n}\nvar MsgChannelOpenConfirm = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    if (message.proofAck.length !== 0) {\n      writer.uint32(26).bytes(message.proofAck);\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(42).string(message.signer);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgChannelOpenConfirm();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        case 3:\n          message.proofAck = reader.bytes();\n          break;\n        case 4:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$portId4, _object$channelId2, _object$proofAck, _object$signer4;\n    var message = createBaseMsgChannelOpenConfirm();\n    message.portId = (_object$portId4 = object.portId) !== null && _object$portId4 !== void 0 ? _object$portId4 : \"\";\n    message.channelId = (_object$channelId2 = object.channelId) !== null && _object$channelId2 !== void 0 ? _object$channelId2 : \"\";\n    message.proofAck = (_object$proofAck = object.proofAck) !== null && _object$proofAck !== void 0 ? _object$proofAck : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    message.signer = (_object$signer4 = object.signer) !== null && _object$signer4 !== void 0 ? _object$signer4 : \"\";\n    return message;\n  }\n};\nexports.MsgChannelOpenConfirm = MsgChannelOpenConfirm;\nfunction createBaseMsgChannelOpenConfirmResponse() {\n  return {};\n}\nvar MsgChannelOpenConfirmResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgChannelOpenConfirmResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseMsgChannelOpenConfirmResponse();\n    return message;\n  }\n};\nexports.MsgChannelOpenConfirmResponse = MsgChannelOpenConfirmResponse;\nfunction createBaseMsgChannelCloseInit() {\n  return {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\"\n  };\n}\nvar MsgChannelCloseInit = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(26).string(message.signer);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgChannelCloseInit();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        case 3:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$portId5, _object$channelId3, _object$signer5;\n    var message = createBaseMsgChannelCloseInit();\n    message.portId = (_object$portId5 = object.portId) !== null && _object$portId5 !== void 0 ? _object$portId5 : \"\";\n    message.channelId = (_object$channelId3 = object.channelId) !== null && _object$channelId3 !== void 0 ? _object$channelId3 : \"\";\n    message.signer = (_object$signer5 = object.signer) !== null && _object$signer5 !== void 0 ? _object$signer5 : \"\";\n    return message;\n  }\n};\nexports.MsgChannelCloseInit = MsgChannelCloseInit;\nfunction createBaseMsgChannelCloseInitResponse() {\n  return {};\n}\nvar MsgChannelCloseInitResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgChannelCloseInitResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseMsgChannelCloseInitResponse();\n    return message;\n  }\n};\nexports.MsgChannelCloseInitResponse = MsgChannelCloseInitResponse;\nfunction createBaseMsgChannelCloseConfirm() {\n  return {\n    portId: \"\",\n    channelId: \"\",\n    proofInit: new Uint8Array(),\n    proofHeight: _client.Height.fromPartial({}),\n    signer: \"\"\n  };\n}\nvar MsgChannelCloseConfirm = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    if (message.proofInit.length !== 0) {\n      writer.uint32(26).bytes(message.proofInit);\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(42).string(message.signer);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgChannelCloseConfirm();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        case 3:\n          message.proofInit = reader.bytes();\n          break;\n        case 4:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$portId6, _object$channelId4, _object$proofInit2, _object$signer6;\n    var message = createBaseMsgChannelCloseConfirm();\n    message.portId = (_object$portId6 = object.portId) !== null && _object$portId6 !== void 0 ? _object$portId6 : \"\";\n    message.channelId = (_object$channelId4 = object.channelId) !== null && _object$channelId4 !== void 0 ? _object$channelId4 : \"\";\n    message.proofInit = (_object$proofInit2 = object.proofInit) !== null && _object$proofInit2 !== void 0 ? _object$proofInit2 : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    message.signer = (_object$signer6 = object.signer) !== null && _object$signer6 !== void 0 ? _object$signer6 : \"\";\n    return message;\n  }\n};\nexports.MsgChannelCloseConfirm = MsgChannelCloseConfirm;\nfunction createBaseMsgChannelCloseConfirmResponse() {\n  return {};\n}\nvar MsgChannelCloseConfirmResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgChannelCloseConfirmResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseMsgChannelCloseConfirmResponse();\n    return message;\n  }\n};\nexports.MsgChannelCloseConfirmResponse = MsgChannelCloseConfirmResponse;\nfunction createBaseMsgRecvPacket() {\n  return {\n    packet: _channel.Packet.fromPartial({}),\n    proofCommitment: new Uint8Array(),\n    proofHeight: _client.Height.fromPartial({}),\n    signer: \"\"\n  };\n}\nvar MsgRecvPacket = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.packet !== undefined) {\n      _channel.Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.proofCommitment.length !== 0) {\n      writer.uint32(18).bytes(message.proofCommitment);\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(34).string(message.signer);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgRecvPacket();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.packet = _channel.Packet.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.proofCommitment = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$proofCommitme, _object$signer7;\n    var message = createBaseMsgRecvPacket();\n    message.packet = object.packet !== undefined && object.packet !== null ? _channel.Packet.fromPartial(object.packet) : undefined;\n    message.proofCommitment = (_object$proofCommitme = object.proofCommitment) !== null && _object$proofCommitme !== void 0 ? _object$proofCommitme : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    message.signer = (_object$signer7 = object.signer) !== null && _object$signer7 !== void 0 ? _object$signer7 : \"\";\n    return message;\n  }\n};\nexports.MsgRecvPacket = MsgRecvPacket;\nfunction createBaseMsgRecvPacketResponse() {\n  return {};\n}\nvar MsgRecvPacketResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgRecvPacketResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseMsgRecvPacketResponse();\n    return message;\n  }\n};\nexports.MsgRecvPacketResponse = MsgRecvPacketResponse;\nfunction createBaseMsgTimeout() {\n  return {\n    packet: _channel.Packet.fromPartial({}),\n    proofUnreceived: new Uint8Array(),\n    proofHeight: _client.Height.fromPartial({}),\n    nextSequenceRecv: _helpers.Long.UZERO,\n    signer: \"\"\n  };\n}\nvar MsgTimeout = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.packet !== undefined) {\n      _channel.Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.proofUnreceived.length !== 0) {\n      writer.uint32(18).bytes(message.proofUnreceived);\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    if (!message.nextSequenceRecv.isZero()) {\n      writer.uint32(32).uint64(message.nextSequenceRecv);\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(42).string(message.signer);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgTimeout();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.packet = _channel.Packet.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.proofUnreceived = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.nextSequenceRecv = reader.uint64();\n          break;\n        case 5:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$proofUnreceiv, _object$signer8;\n    var message = createBaseMsgTimeout();\n    message.packet = object.packet !== undefined && object.packet !== null ? _channel.Packet.fromPartial(object.packet) : undefined;\n    message.proofUnreceived = (_object$proofUnreceiv = object.proofUnreceived) !== null && _object$proofUnreceiv !== void 0 ? _object$proofUnreceiv : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    message.nextSequenceRecv = object.nextSequenceRecv !== undefined && object.nextSequenceRecv !== null ? _helpers.Long.fromValue(object.nextSequenceRecv) : _helpers.Long.UZERO;\n    message.signer = (_object$signer8 = object.signer) !== null && _object$signer8 !== void 0 ? _object$signer8 : \"\";\n    return message;\n  }\n};\nexports.MsgTimeout = MsgTimeout;\nfunction createBaseMsgTimeoutResponse() {\n  return {};\n}\nvar MsgTimeoutResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgTimeoutResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseMsgTimeoutResponse();\n    return message;\n  }\n};\nexports.MsgTimeoutResponse = MsgTimeoutResponse;\nfunction createBaseMsgTimeoutOnClose() {\n  return {\n    packet: _channel.Packet.fromPartial({}),\n    proofUnreceived: new Uint8Array(),\n    proofClose: new Uint8Array(),\n    proofHeight: _client.Height.fromPartial({}),\n    nextSequenceRecv: _helpers.Long.UZERO,\n    signer: \"\"\n  };\n}\nvar MsgTimeoutOnClose = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.packet !== undefined) {\n      _channel.Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.proofUnreceived.length !== 0) {\n      writer.uint32(18).bytes(message.proofUnreceived);\n    }\n    if (message.proofClose.length !== 0) {\n      writer.uint32(26).bytes(message.proofClose);\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n    }\n    if (!message.nextSequenceRecv.isZero()) {\n      writer.uint32(40).uint64(message.nextSequenceRecv);\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(50).string(message.signer);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgTimeoutOnClose();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.packet = _channel.Packet.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.proofUnreceived = reader.bytes();\n          break;\n        case 3:\n          message.proofClose = reader.bytes();\n          break;\n        case 4:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.nextSequenceRecv = reader.uint64();\n          break;\n        case 6:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$proofUnreceiv2, _object$proofClose, _object$signer9;\n    var message = createBaseMsgTimeoutOnClose();\n    message.packet = object.packet !== undefined && object.packet !== null ? _channel.Packet.fromPartial(object.packet) : undefined;\n    message.proofUnreceived = (_object$proofUnreceiv2 = object.proofUnreceived) !== null && _object$proofUnreceiv2 !== void 0 ? _object$proofUnreceiv2 : new Uint8Array();\n    message.proofClose = (_object$proofClose = object.proofClose) !== null && _object$proofClose !== void 0 ? _object$proofClose : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    message.nextSequenceRecv = object.nextSequenceRecv !== undefined && object.nextSequenceRecv !== null ? _helpers.Long.fromValue(object.nextSequenceRecv) : _helpers.Long.UZERO;\n    message.signer = (_object$signer9 = object.signer) !== null && _object$signer9 !== void 0 ? _object$signer9 : \"\";\n    return message;\n  }\n};\nexports.MsgTimeoutOnClose = MsgTimeoutOnClose;\nfunction createBaseMsgTimeoutOnCloseResponse() {\n  return {};\n}\nvar MsgTimeoutOnCloseResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgTimeoutOnCloseResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseMsgTimeoutOnCloseResponse();\n    return message;\n  }\n};\nexports.MsgTimeoutOnCloseResponse = MsgTimeoutOnCloseResponse;\nfunction createBaseMsgAcknowledgement() {\n  return {\n    packet: _channel.Packet.fromPartial({}),\n    acknowledgement: new Uint8Array(),\n    proofAcked: new Uint8Array(),\n    proofHeight: _client.Height.fromPartial({}),\n    signer: \"\"\n  };\n}\nvar MsgAcknowledgement = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.packet !== undefined) {\n      _channel.Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.acknowledgement.length !== 0) {\n      writer.uint32(18).bytes(message.acknowledgement);\n    }\n    if (message.proofAcked.length !== 0) {\n      writer.uint32(26).bytes(message.proofAcked);\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(42).string(message.signer);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgAcknowledgement();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.packet = _channel.Packet.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.acknowledgement = reader.bytes();\n          break;\n        case 3:\n          message.proofAcked = reader.bytes();\n          break;\n        case 4:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$acknowledgeme, _object$proofAcked, _object$signer10;\n    var message = createBaseMsgAcknowledgement();\n    message.packet = object.packet !== undefined && object.packet !== null ? _channel.Packet.fromPartial(object.packet) : undefined;\n    message.acknowledgement = (_object$acknowledgeme = object.acknowledgement) !== null && _object$acknowledgeme !== void 0 ? _object$acknowledgeme : new Uint8Array();\n    message.proofAcked = (_object$proofAcked = object.proofAcked) !== null && _object$proofAcked !== void 0 ? _object$proofAcked : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    message.signer = (_object$signer10 = object.signer) !== null && _object$signer10 !== void 0 ? _object$signer10 : \"\";\n    return message;\n  }\n};\nexports.MsgAcknowledgement = MsgAcknowledgement;\nfunction createBaseMsgAcknowledgementResponse() {\n  return {};\n}\nvar MsgAcknowledgementResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgAcknowledgementResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseMsgAcknowledgementResponse();\n    return message;\n  }\n};\nexports.MsgAcknowledgementResponse = MsgAcknowledgementResponse;","map":{"version":3,"names":["_typeof","require","Object","defineProperty","exports","value","MsgTimeoutResponse","MsgTimeoutOnCloseResponse","MsgTimeoutOnClose","MsgTimeout","MsgRecvPacketResponse","MsgRecvPacket","MsgChannelOpenTryResponse","MsgChannelOpenTry","MsgChannelOpenInitResponse","MsgChannelOpenInit","MsgChannelOpenConfirmResponse","MsgChannelOpenConfirm","MsgChannelOpenAckResponse","MsgChannelOpenAck","MsgChannelCloseInitResponse","MsgChannelCloseInit","MsgChannelCloseConfirmResponse","MsgChannelCloseConfirm","MsgAcknowledgementResponse","MsgAcknowledgement","_channel","_client","_helpers","_m0","_interopRequireWildcard","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","createBaseMsgChannelOpenInit","portId","channel","Channel","fromPartial","signer","encode","message","writer","arguments","length","undefined","Writer","create","uint32","string","fork","ldelim","decode","input","reader","Reader","end","len","pos","tag","skipType","object","_object$portId","_object$signer","createBaseMsgChannelOpenInitResponse","_","createBaseMsgChannelOpenTry","previousChannelId","counterpartyVersion","proofInit","Uint8Array","proofHeight","Height","bytes","_object$portId2","_object$previousChann","_object$counterpartyV","_object$proofInit","_object$signer2","createBaseMsgChannelOpenTryResponse","createBaseMsgChannelOpenAck","channelId","counterpartyChannelId","proofTry","_object$portId3","_object$channelId","_object$counterpartyC","_object$counterpartyV2","_object$proofTry","_object$signer3","createBaseMsgChannelOpenAckResponse","createBaseMsgChannelOpenConfirm","proofAck","_object$portId4","_object$channelId2","_object$proofAck","_object$signer4","createBaseMsgChannelOpenConfirmResponse","createBaseMsgChannelCloseInit","_object$portId5","_object$channelId3","_object$signer5","createBaseMsgChannelCloseInitResponse","createBaseMsgChannelCloseConfirm","_object$portId6","_object$channelId4","_object$proofInit2","_object$signer6","createBaseMsgChannelCloseConfirmResponse","createBaseMsgRecvPacket","packet","Packet","proofCommitment","_object$proofCommitme","_object$signer7","createBaseMsgRecvPacketResponse","createBaseMsgTimeout","proofUnreceived","nextSequenceRecv","Long","UZERO","isZero","uint64","_object$proofUnreceiv","_object$signer8","fromValue","createBaseMsgTimeoutResponse","createBaseMsgTimeoutOnClose","proofClose","_object$proofUnreceiv2","_object$proofClose","_object$signer9","createBaseMsgTimeoutOnCloseResponse","createBaseMsgAcknowledgement","acknowledgement","proofAcked","_object$acknowledgeme","_object$proofAcked","_object$signer10","createBaseMsgAcknowledgementResponse"],"sources":["/Users/linanqi/node_modules/@sei-js/proto/main/codegen/ibc/core/channel/v1/tx.js"],"sourcesContent":["\"use strict\";\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgTimeoutResponse = exports.MsgTimeoutOnCloseResponse = exports.MsgTimeoutOnClose = exports.MsgTimeout = exports.MsgRecvPacketResponse = exports.MsgRecvPacket = exports.MsgChannelOpenTryResponse = exports.MsgChannelOpenTry = exports.MsgChannelOpenInitResponse = exports.MsgChannelOpenInit = exports.MsgChannelOpenConfirmResponse = exports.MsgChannelOpenConfirm = exports.MsgChannelOpenAckResponse = exports.MsgChannelOpenAck = exports.MsgChannelCloseInitResponse = exports.MsgChannelCloseInit = exports.MsgChannelCloseConfirmResponse = exports.MsgChannelCloseConfirm = exports.MsgAcknowledgementResponse = exports.MsgAcknowledgement = void 0;\nvar _channel = require(\"./channel\");\nvar _client = require(\"../../client/v1/client\");\nvar _helpers = require(\"../../../../helpers\");\nvar _m0 = _interopRequireWildcard(require(\"protobufjs/minimal\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction createBaseMsgChannelOpenInit() {\n  return {\n    portId: \"\",\n    channel: _channel.Channel.fromPartial({}),\n    signer: \"\"\n  };\n}\nvar MsgChannelOpenInit = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channel !== undefined) {\n      _channel.Channel.encode(message.channel, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(26).string(message.signer);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgChannelOpenInit();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channel = _channel.Channel.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$portId, _object$signer;\n    var message = createBaseMsgChannelOpenInit();\n    message.portId = (_object$portId = object.portId) !== null && _object$portId !== void 0 ? _object$portId : \"\";\n    message.channel = object.channel !== undefined && object.channel !== null ? _channel.Channel.fromPartial(object.channel) : undefined;\n    message.signer = (_object$signer = object.signer) !== null && _object$signer !== void 0 ? _object$signer : \"\";\n    return message;\n  }\n};\nexports.MsgChannelOpenInit = MsgChannelOpenInit;\nfunction createBaseMsgChannelOpenInitResponse() {\n  return {};\n}\nvar MsgChannelOpenInitResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgChannelOpenInitResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseMsgChannelOpenInitResponse();\n    return message;\n  }\n};\nexports.MsgChannelOpenInitResponse = MsgChannelOpenInitResponse;\nfunction createBaseMsgChannelOpenTry() {\n  return {\n    portId: \"\",\n    previousChannelId: \"\",\n    channel: _channel.Channel.fromPartial({}),\n    counterpartyVersion: \"\",\n    proofInit: new Uint8Array(),\n    proofHeight: _client.Height.fromPartial({}),\n    signer: \"\"\n  };\n}\nvar MsgChannelOpenTry = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.previousChannelId !== \"\") {\n      writer.uint32(18).string(message.previousChannelId);\n    }\n    if (message.channel !== undefined) {\n      _channel.Channel.encode(message.channel, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.counterpartyVersion !== \"\") {\n      writer.uint32(34).string(message.counterpartyVersion);\n    }\n    if (message.proofInit.length !== 0) {\n      writer.uint32(42).bytes(message.proofInit);\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(58).string(message.signer);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgChannelOpenTry();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.previousChannelId = reader.string();\n          break;\n        case 3:\n          message.channel = _channel.Channel.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.counterpartyVersion = reader.string();\n          break;\n        case 5:\n          message.proofInit = reader.bytes();\n          break;\n        case 6:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        case 7:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$portId2, _object$previousChann, _object$counterpartyV, _object$proofInit, _object$signer2;\n    var message = createBaseMsgChannelOpenTry();\n    message.portId = (_object$portId2 = object.portId) !== null && _object$portId2 !== void 0 ? _object$portId2 : \"\";\n    message.previousChannelId = (_object$previousChann = object.previousChannelId) !== null && _object$previousChann !== void 0 ? _object$previousChann : \"\";\n    message.channel = object.channel !== undefined && object.channel !== null ? _channel.Channel.fromPartial(object.channel) : undefined;\n    message.counterpartyVersion = (_object$counterpartyV = object.counterpartyVersion) !== null && _object$counterpartyV !== void 0 ? _object$counterpartyV : \"\";\n    message.proofInit = (_object$proofInit = object.proofInit) !== null && _object$proofInit !== void 0 ? _object$proofInit : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    message.signer = (_object$signer2 = object.signer) !== null && _object$signer2 !== void 0 ? _object$signer2 : \"\";\n    return message;\n  }\n};\nexports.MsgChannelOpenTry = MsgChannelOpenTry;\nfunction createBaseMsgChannelOpenTryResponse() {\n  return {};\n}\nvar MsgChannelOpenTryResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgChannelOpenTryResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseMsgChannelOpenTryResponse();\n    return message;\n  }\n};\nexports.MsgChannelOpenTryResponse = MsgChannelOpenTryResponse;\nfunction createBaseMsgChannelOpenAck() {\n  return {\n    portId: \"\",\n    channelId: \"\",\n    counterpartyChannelId: \"\",\n    counterpartyVersion: \"\",\n    proofTry: new Uint8Array(),\n    proofHeight: _client.Height.fromPartial({}),\n    signer: \"\"\n  };\n}\nvar MsgChannelOpenAck = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    if (message.counterpartyChannelId !== \"\") {\n      writer.uint32(26).string(message.counterpartyChannelId);\n    }\n    if (message.counterpartyVersion !== \"\") {\n      writer.uint32(34).string(message.counterpartyVersion);\n    }\n    if (message.proofTry.length !== 0) {\n      writer.uint32(42).bytes(message.proofTry);\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(58).string(message.signer);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgChannelOpenAck();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        case 3:\n          message.counterpartyChannelId = reader.string();\n          break;\n        case 4:\n          message.counterpartyVersion = reader.string();\n          break;\n        case 5:\n          message.proofTry = reader.bytes();\n          break;\n        case 6:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        case 7:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$portId3, _object$channelId, _object$counterpartyC, _object$counterpartyV2, _object$proofTry, _object$signer3;\n    var message = createBaseMsgChannelOpenAck();\n    message.portId = (_object$portId3 = object.portId) !== null && _object$portId3 !== void 0 ? _object$portId3 : \"\";\n    message.channelId = (_object$channelId = object.channelId) !== null && _object$channelId !== void 0 ? _object$channelId : \"\";\n    message.counterpartyChannelId = (_object$counterpartyC = object.counterpartyChannelId) !== null && _object$counterpartyC !== void 0 ? _object$counterpartyC : \"\";\n    message.counterpartyVersion = (_object$counterpartyV2 = object.counterpartyVersion) !== null && _object$counterpartyV2 !== void 0 ? _object$counterpartyV2 : \"\";\n    message.proofTry = (_object$proofTry = object.proofTry) !== null && _object$proofTry !== void 0 ? _object$proofTry : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    message.signer = (_object$signer3 = object.signer) !== null && _object$signer3 !== void 0 ? _object$signer3 : \"\";\n    return message;\n  }\n};\nexports.MsgChannelOpenAck = MsgChannelOpenAck;\nfunction createBaseMsgChannelOpenAckResponse() {\n  return {};\n}\nvar MsgChannelOpenAckResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgChannelOpenAckResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseMsgChannelOpenAckResponse();\n    return message;\n  }\n};\nexports.MsgChannelOpenAckResponse = MsgChannelOpenAckResponse;\nfunction createBaseMsgChannelOpenConfirm() {\n  return {\n    portId: \"\",\n    channelId: \"\",\n    proofAck: new Uint8Array(),\n    proofHeight: _client.Height.fromPartial({}),\n    signer: \"\"\n  };\n}\nvar MsgChannelOpenConfirm = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    if (message.proofAck.length !== 0) {\n      writer.uint32(26).bytes(message.proofAck);\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(42).string(message.signer);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgChannelOpenConfirm();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        case 3:\n          message.proofAck = reader.bytes();\n          break;\n        case 4:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$portId4, _object$channelId2, _object$proofAck, _object$signer4;\n    var message = createBaseMsgChannelOpenConfirm();\n    message.portId = (_object$portId4 = object.portId) !== null && _object$portId4 !== void 0 ? _object$portId4 : \"\";\n    message.channelId = (_object$channelId2 = object.channelId) !== null && _object$channelId2 !== void 0 ? _object$channelId2 : \"\";\n    message.proofAck = (_object$proofAck = object.proofAck) !== null && _object$proofAck !== void 0 ? _object$proofAck : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    message.signer = (_object$signer4 = object.signer) !== null && _object$signer4 !== void 0 ? _object$signer4 : \"\";\n    return message;\n  }\n};\nexports.MsgChannelOpenConfirm = MsgChannelOpenConfirm;\nfunction createBaseMsgChannelOpenConfirmResponse() {\n  return {};\n}\nvar MsgChannelOpenConfirmResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgChannelOpenConfirmResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseMsgChannelOpenConfirmResponse();\n    return message;\n  }\n};\nexports.MsgChannelOpenConfirmResponse = MsgChannelOpenConfirmResponse;\nfunction createBaseMsgChannelCloseInit() {\n  return {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\"\n  };\n}\nvar MsgChannelCloseInit = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(26).string(message.signer);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgChannelCloseInit();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        case 3:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$portId5, _object$channelId3, _object$signer5;\n    var message = createBaseMsgChannelCloseInit();\n    message.portId = (_object$portId5 = object.portId) !== null && _object$portId5 !== void 0 ? _object$portId5 : \"\";\n    message.channelId = (_object$channelId3 = object.channelId) !== null && _object$channelId3 !== void 0 ? _object$channelId3 : \"\";\n    message.signer = (_object$signer5 = object.signer) !== null && _object$signer5 !== void 0 ? _object$signer5 : \"\";\n    return message;\n  }\n};\nexports.MsgChannelCloseInit = MsgChannelCloseInit;\nfunction createBaseMsgChannelCloseInitResponse() {\n  return {};\n}\nvar MsgChannelCloseInitResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgChannelCloseInitResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseMsgChannelCloseInitResponse();\n    return message;\n  }\n};\nexports.MsgChannelCloseInitResponse = MsgChannelCloseInitResponse;\nfunction createBaseMsgChannelCloseConfirm() {\n  return {\n    portId: \"\",\n    channelId: \"\",\n    proofInit: new Uint8Array(),\n    proofHeight: _client.Height.fromPartial({}),\n    signer: \"\"\n  };\n}\nvar MsgChannelCloseConfirm = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    if (message.proofInit.length !== 0) {\n      writer.uint32(26).bytes(message.proofInit);\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(42).string(message.signer);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgChannelCloseConfirm();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        case 3:\n          message.proofInit = reader.bytes();\n          break;\n        case 4:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$portId6, _object$channelId4, _object$proofInit2, _object$signer6;\n    var message = createBaseMsgChannelCloseConfirm();\n    message.portId = (_object$portId6 = object.portId) !== null && _object$portId6 !== void 0 ? _object$portId6 : \"\";\n    message.channelId = (_object$channelId4 = object.channelId) !== null && _object$channelId4 !== void 0 ? _object$channelId4 : \"\";\n    message.proofInit = (_object$proofInit2 = object.proofInit) !== null && _object$proofInit2 !== void 0 ? _object$proofInit2 : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    message.signer = (_object$signer6 = object.signer) !== null && _object$signer6 !== void 0 ? _object$signer6 : \"\";\n    return message;\n  }\n};\nexports.MsgChannelCloseConfirm = MsgChannelCloseConfirm;\nfunction createBaseMsgChannelCloseConfirmResponse() {\n  return {};\n}\nvar MsgChannelCloseConfirmResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgChannelCloseConfirmResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseMsgChannelCloseConfirmResponse();\n    return message;\n  }\n};\nexports.MsgChannelCloseConfirmResponse = MsgChannelCloseConfirmResponse;\nfunction createBaseMsgRecvPacket() {\n  return {\n    packet: _channel.Packet.fromPartial({}),\n    proofCommitment: new Uint8Array(),\n    proofHeight: _client.Height.fromPartial({}),\n    signer: \"\"\n  };\n}\nvar MsgRecvPacket = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.packet !== undefined) {\n      _channel.Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.proofCommitment.length !== 0) {\n      writer.uint32(18).bytes(message.proofCommitment);\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(34).string(message.signer);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgRecvPacket();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.packet = _channel.Packet.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.proofCommitment = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$proofCommitme, _object$signer7;\n    var message = createBaseMsgRecvPacket();\n    message.packet = object.packet !== undefined && object.packet !== null ? _channel.Packet.fromPartial(object.packet) : undefined;\n    message.proofCommitment = (_object$proofCommitme = object.proofCommitment) !== null && _object$proofCommitme !== void 0 ? _object$proofCommitme : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    message.signer = (_object$signer7 = object.signer) !== null && _object$signer7 !== void 0 ? _object$signer7 : \"\";\n    return message;\n  }\n};\nexports.MsgRecvPacket = MsgRecvPacket;\nfunction createBaseMsgRecvPacketResponse() {\n  return {};\n}\nvar MsgRecvPacketResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgRecvPacketResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseMsgRecvPacketResponse();\n    return message;\n  }\n};\nexports.MsgRecvPacketResponse = MsgRecvPacketResponse;\nfunction createBaseMsgTimeout() {\n  return {\n    packet: _channel.Packet.fromPartial({}),\n    proofUnreceived: new Uint8Array(),\n    proofHeight: _client.Height.fromPartial({}),\n    nextSequenceRecv: _helpers.Long.UZERO,\n    signer: \"\"\n  };\n}\nvar MsgTimeout = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.packet !== undefined) {\n      _channel.Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.proofUnreceived.length !== 0) {\n      writer.uint32(18).bytes(message.proofUnreceived);\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    if (!message.nextSequenceRecv.isZero()) {\n      writer.uint32(32).uint64(message.nextSequenceRecv);\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(42).string(message.signer);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgTimeout();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.packet = _channel.Packet.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.proofUnreceived = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.nextSequenceRecv = reader.uint64();\n          break;\n        case 5:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$proofUnreceiv, _object$signer8;\n    var message = createBaseMsgTimeout();\n    message.packet = object.packet !== undefined && object.packet !== null ? _channel.Packet.fromPartial(object.packet) : undefined;\n    message.proofUnreceived = (_object$proofUnreceiv = object.proofUnreceived) !== null && _object$proofUnreceiv !== void 0 ? _object$proofUnreceiv : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    message.nextSequenceRecv = object.nextSequenceRecv !== undefined && object.nextSequenceRecv !== null ? _helpers.Long.fromValue(object.nextSequenceRecv) : _helpers.Long.UZERO;\n    message.signer = (_object$signer8 = object.signer) !== null && _object$signer8 !== void 0 ? _object$signer8 : \"\";\n    return message;\n  }\n};\nexports.MsgTimeout = MsgTimeout;\nfunction createBaseMsgTimeoutResponse() {\n  return {};\n}\nvar MsgTimeoutResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgTimeoutResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseMsgTimeoutResponse();\n    return message;\n  }\n};\nexports.MsgTimeoutResponse = MsgTimeoutResponse;\nfunction createBaseMsgTimeoutOnClose() {\n  return {\n    packet: _channel.Packet.fromPartial({}),\n    proofUnreceived: new Uint8Array(),\n    proofClose: new Uint8Array(),\n    proofHeight: _client.Height.fromPartial({}),\n    nextSequenceRecv: _helpers.Long.UZERO,\n    signer: \"\"\n  };\n}\nvar MsgTimeoutOnClose = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.packet !== undefined) {\n      _channel.Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.proofUnreceived.length !== 0) {\n      writer.uint32(18).bytes(message.proofUnreceived);\n    }\n    if (message.proofClose.length !== 0) {\n      writer.uint32(26).bytes(message.proofClose);\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n    }\n    if (!message.nextSequenceRecv.isZero()) {\n      writer.uint32(40).uint64(message.nextSequenceRecv);\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(50).string(message.signer);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgTimeoutOnClose();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.packet = _channel.Packet.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.proofUnreceived = reader.bytes();\n          break;\n        case 3:\n          message.proofClose = reader.bytes();\n          break;\n        case 4:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.nextSequenceRecv = reader.uint64();\n          break;\n        case 6:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$proofUnreceiv2, _object$proofClose, _object$signer9;\n    var message = createBaseMsgTimeoutOnClose();\n    message.packet = object.packet !== undefined && object.packet !== null ? _channel.Packet.fromPartial(object.packet) : undefined;\n    message.proofUnreceived = (_object$proofUnreceiv2 = object.proofUnreceived) !== null && _object$proofUnreceiv2 !== void 0 ? _object$proofUnreceiv2 : new Uint8Array();\n    message.proofClose = (_object$proofClose = object.proofClose) !== null && _object$proofClose !== void 0 ? _object$proofClose : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    message.nextSequenceRecv = object.nextSequenceRecv !== undefined && object.nextSequenceRecv !== null ? _helpers.Long.fromValue(object.nextSequenceRecv) : _helpers.Long.UZERO;\n    message.signer = (_object$signer9 = object.signer) !== null && _object$signer9 !== void 0 ? _object$signer9 : \"\";\n    return message;\n  }\n};\nexports.MsgTimeoutOnClose = MsgTimeoutOnClose;\nfunction createBaseMsgTimeoutOnCloseResponse() {\n  return {};\n}\nvar MsgTimeoutOnCloseResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgTimeoutOnCloseResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseMsgTimeoutOnCloseResponse();\n    return message;\n  }\n};\nexports.MsgTimeoutOnCloseResponse = MsgTimeoutOnCloseResponse;\nfunction createBaseMsgAcknowledgement() {\n  return {\n    packet: _channel.Packet.fromPartial({}),\n    acknowledgement: new Uint8Array(),\n    proofAcked: new Uint8Array(),\n    proofHeight: _client.Height.fromPartial({}),\n    signer: \"\"\n  };\n}\nvar MsgAcknowledgement = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.packet !== undefined) {\n      _channel.Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.acknowledgement.length !== 0) {\n      writer.uint32(18).bytes(message.acknowledgement);\n    }\n    if (message.proofAcked.length !== 0) {\n      writer.uint32(26).bytes(message.proofAcked);\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(42).string(message.signer);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgAcknowledgement();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.packet = _channel.Packet.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.acknowledgement = reader.bytes();\n          break;\n        case 3:\n          message.proofAcked = reader.bytes();\n          break;\n        case 4:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$acknowledgeme, _object$proofAcked, _object$signer10;\n    var message = createBaseMsgAcknowledgement();\n    message.packet = object.packet !== undefined && object.packet !== null ? _channel.Packet.fromPartial(object.packet) : undefined;\n    message.acknowledgement = (_object$acknowledgeme = object.acknowledgement) !== null && _object$acknowledgeme !== void 0 ? _object$acknowledgeme : new Uint8Array();\n    message.proofAcked = (_object$proofAcked = object.proofAcked) !== null && _object$proofAcked !== void 0 ? _object$proofAcked : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    message.signer = (_object$signer10 = object.signer) !== null && _object$signer10 !== void 0 ? _object$signer10 : \"\";\n    return message;\n  }\n};\nexports.MsgAcknowledgement = MsgAcknowledgement;\nfunction createBaseMsgAcknowledgementResponse() {\n  return {};\n}\nvar MsgAcknowledgementResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgAcknowledgementResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseMsgAcknowledgementResponse();\n    return message;\n  }\n};\nexports.MsgAcknowledgementResponse = MsgAcknowledgementResponse;"],"mappings":"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"},"metadata":{},"sourceType":"script"}