{"ast":null,"code":"\"use strict\";\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Vote = exports.TxProof = exports.SignedMsgTypeSDKType = exports.SignedMsgType = exports.SignedHeader = exports.Proposal = exports.PartSetHeader = exports.Part = exports.LightBlock = exports.Header = exports.Data = exports.CommitSig = exports.Commit = exports.BlockMeta = exports.BlockIDFlagSDKType = exports.BlockIDFlag = exports.BlockID = void 0;\nexports.blockIDFlagFromJSON = blockIDFlagFromJSON;\nexports.blockIDFlagToJSON = blockIDFlagToJSON;\nexports.signedMsgTypeFromJSON = signedMsgTypeFromJSON;\nexports.signedMsgTypeToJSON = signedMsgTypeToJSON;\nvar _proof = require(\"../crypto/proof\");\nvar _types = require(\"../version/types\");\nvar _timestamp = require(\"../../google/protobuf/timestamp\");\nvar _validator = require(\"./validator\");\nvar _helpers = require(\"../../helpers\");\nvar _m0 = _interopRequireWildcard(require(\"protobufjs/minimal\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj[\"default\"] = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\n/** BlockIdFlag indicates which BlcokID the signature is for */\nvar BlockIDFlag;\nexports.BlockIDFlag = BlockIDFlag;\n(function (BlockIDFlag) {\n  BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n  BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n  BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n  BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n  BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (exports.BlockIDFlag = BlockIDFlag = {}));\nvar BlockIDFlagSDKType = BlockIDFlag;\nexports.BlockIDFlagSDKType = BlockIDFlagSDKType;\nfunction blockIDFlagFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"BLOCK_ID_FLAG_UNKNOWN\":\n      return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n    case 1:\n    case \"BLOCK_ID_FLAG_ABSENT\":\n      return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n    case 2:\n    case \"BLOCK_ID_FLAG_COMMIT\":\n      return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n    case 3:\n    case \"BLOCK_ID_FLAG_NIL\":\n      return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return BlockIDFlag.UNRECOGNIZED;\n  }\n}\nfunction blockIDFlagToJSON(object) {\n  switch (object) {\n    case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n      return \"BLOCK_ID_FLAG_UNKNOWN\";\n    case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n      return \"BLOCK_ID_FLAG_ABSENT\";\n    case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n      return \"BLOCK_ID_FLAG_COMMIT\";\n    case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n      return \"BLOCK_ID_FLAG_NIL\";\n    case BlockIDFlag.UNRECOGNIZED:\n    default:\n      return \"UNRECOGNIZED\";\n  }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nvar SignedMsgType;\nexports.SignedMsgType = SignedMsgType;\n(function (SignedMsgType) {\n  SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n  SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n  SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n  SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n  SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (exports.SignedMsgType = SignedMsgType = {}));\nvar SignedMsgTypeSDKType = SignedMsgType;\nexports.SignedMsgTypeSDKType = SignedMsgTypeSDKType;\nfunction signedMsgTypeFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"SIGNED_MSG_TYPE_UNKNOWN\":\n      return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n    case 1:\n    case \"SIGNED_MSG_TYPE_PREVOTE\":\n      return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n    case 2:\n    case \"SIGNED_MSG_TYPE_PRECOMMIT\":\n      return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n    case 32:\n    case \"SIGNED_MSG_TYPE_PROPOSAL\":\n      return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return SignedMsgType.UNRECOGNIZED;\n  }\n}\nfunction signedMsgTypeToJSON(object) {\n  switch (object) {\n    case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n      return \"SIGNED_MSG_TYPE_UNKNOWN\";\n    case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n      return \"SIGNED_MSG_TYPE_PREVOTE\";\n    case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n      return \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n      return \"SIGNED_MSG_TYPE_PROPOSAL\";\n    case SignedMsgType.UNRECOGNIZED:\n    default:\n      return \"UNRECOGNIZED\";\n  }\n}\n/** PartsetHeader */\n\nfunction createBasePartSetHeader() {\n  return {\n    total: 0,\n    hash: new Uint8Array()\n  };\n}\nvar PartSetHeader = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.total !== 0) {\n      writer.uint32(8).uint32(message.total);\n    }\n    if (message.hash.length !== 0) {\n      writer.uint32(18).bytes(message.hash);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBasePartSetHeader();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.total = reader.uint32();\n          break;\n        case 2:\n          message.hash = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$total, _object$hash;\n    var message = createBasePartSetHeader();\n    message.total = (_object$total = object.total) !== null && _object$total !== void 0 ? _object$total : 0;\n    message.hash = (_object$hash = object.hash) !== null && _object$hash !== void 0 ? _object$hash : new Uint8Array();\n    return message;\n  }\n};\nexports.PartSetHeader = PartSetHeader;\nfunction createBasePart() {\n  return {\n    index: 0,\n    bytes: new Uint8Array(),\n    proof: _proof.Proof.fromPartial({})\n  };\n}\nvar Part = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.index !== 0) {\n      writer.uint32(8).uint32(message.index);\n    }\n    if (message.bytes.length !== 0) {\n      writer.uint32(18).bytes(message.bytes);\n    }\n    if (message.proof !== undefined) {\n      _proof.Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBasePart();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.index = reader.uint32();\n          break;\n        case 2:\n          message.bytes = reader.bytes();\n          break;\n        case 3:\n          message.proof = _proof.Proof.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$index, _object$bytes;\n    var message = createBasePart();\n    message.index = (_object$index = object.index) !== null && _object$index !== void 0 ? _object$index : 0;\n    message.bytes = (_object$bytes = object.bytes) !== null && _object$bytes !== void 0 ? _object$bytes : new Uint8Array();\n    message.proof = object.proof !== undefined && object.proof !== null ? _proof.Proof.fromPartial(object.proof) : undefined;\n    return message;\n  }\n};\nexports.Part = Part;\nfunction createBaseBlockID() {\n  return {\n    hash: new Uint8Array(),\n    partSetHeader: PartSetHeader.fromPartial({})\n  };\n}\nvar BlockID = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.hash.length !== 0) {\n      writer.uint32(10).bytes(message.hash);\n    }\n    if (message.partSetHeader !== undefined) {\n      PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseBlockID();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.hash = reader.bytes();\n          break;\n        case 2:\n          message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$hash2;\n    var message = createBaseBlockID();\n    message.hash = (_object$hash2 = object.hash) !== null && _object$hash2 !== void 0 ? _object$hash2 : new Uint8Array();\n    message.partSetHeader = object.partSetHeader !== undefined && object.partSetHeader !== null ? PartSetHeader.fromPartial(object.partSetHeader) : undefined;\n    return message;\n  }\n};\nexports.BlockID = BlockID;\nfunction createBaseHeader() {\n  return {\n    version: _types.Consensus.fromPartial({}),\n    chainId: \"\",\n    height: _helpers.Long.ZERO,\n    time: undefined,\n    lastBlockId: BlockID.fromPartial({}),\n    lastCommitHash: new Uint8Array(),\n    dataHash: new Uint8Array(),\n    validatorsHash: new Uint8Array(),\n    nextValidatorsHash: new Uint8Array(),\n    consensusHash: new Uint8Array(),\n    appHash: new Uint8Array(),\n    lastResultsHash: new Uint8Array(),\n    evidenceHash: new Uint8Array(),\n    proposerAddress: new Uint8Array()\n  };\n}\nvar Header = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.version !== undefined) {\n      _types.Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.chainId !== \"\") {\n      writer.uint32(18).string(message.chainId);\n    }\n    if (!message.height.isZero()) {\n      writer.uint32(24).int64(message.height);\n    }\n    if (message.time !== undefined) {\n      _timestamp.Timestamp.encode((0, _helpers.toTimestamp)(message.time), writer.uint32(34).fork()).ldelim();\n    }\n    if (message.lastBlockId !== undefined) {\n      BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n    }\n    if (message.lastCommitHash.length !== 0) {\n      writer.uint32(50).bytes(message.lastCommitHash);\n    }\n    if (message.dataHash.length !== 0) {\n      writer.uint32(58).bytes(message.dataHash);\n    }\n    if (message.validatorsHash.length !== 0) {\n      writer.uint32(66).bytes(message.validatorsHash);\n    }\n    if (message.nextValidatorsHash.length !== 0) {\n      writer.uint32(74).bytes(message.nextValidatorsHash);\n    }\n    if (message.consensusHash.length !== 0) {\n      writer.uint32(82).bytes(message.consensusHash);\n    }\n    if (message.appHash.length !== 0) {\n      writer.uint32(90).bytes(message.appHash);\n    }\n    if (message.lastResultsHash.length !== 0) {\n      writer.uint32(98).bytes(message.lastResultsHash);\n    }\n    if (message.evidenceHash.length !== 0) {\n      writer.uint32(106).bytes(message.evidenceHash);\n    }\n    if (message.proposerAddress.length !== 0) {\n      writer.uint32(114).bytes(message.proposerAddress);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseHeader();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.version = _types.Consensus.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.chainId = reader.string();\n          break;\n        case 3:\n          message.height = reader.int64();\n          break;\n        case 4:\n          message.time = (0, _helpers.fromTimestamp)(_timestamp.Timestamp.decode(reader, reader.uint32()));\n          break;\n        case 5:\n          message.lastBlockId = BlockID.decode(reader, reader.uint32());\n          break;\n        case 6:\n          message.lastCommitHash = reader.bytes();\n          break;\n        case 7:\n          message.dataHash = reader.bytes();\n          break;\n        case 8:\n          message.validatorsHash = reader.bytes();\n          break;\n        case 9:\n          message.nextValidatorsHash = reader.bytes();\n          break;\n        case 10:\n          message.consensusHash = reader.bytes();\n          break;\n        case 11:\n          message.appHash = reader.bytes();\n          break;\n        case 12:\n          message.lastResultsHash = reader.bytes();\n          break;\n        case 13:\n          message.evidenceHash = reader.bytes();\n          break;\n        case 14:\n          message.proposerAddress = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$chainId, _object$time, _object$lastCommitHas, _object$dataHash, _object$validatorsHas, _object$nextValidator, _object$consensusHash, _object$appHash, _object$lastResultsHa, _object$evidenceHash, _object$proposerAddre;\n    var message = createBaseHeader();\n    message.version = object.version !== undefined && object.version !== null ? _types.Consensus.fromPartial(object.version) : undefined;\n    message.chainId = (_object$chainId = object.chainId) !== null && _object$chainId !== void 0 ? _object$chainId : \"\";\n    message.height = object.height !== undefined && object.height !== null ? _helpers.Long.fromValue(object.height) : _helpers.Long.ZERO;\n    message.time = (_object$time = object.time) !== null && _object$time !== void 0 ? _object$time : undefined;\n    message.lastBlockId = object.lastBlockId !== undefined && object.lastBlockId !== null ? BlockID.fromPartial(object.lastBlockId) : undefined;\n    message.lastCommitHash = (_object$lastCommitHas = object.lastCommitHash) !== null && _object$lastCommitHas !== void 0 ? _object$lastCommitHas : new Uint8Array();\n    message.dataHash = (_object$dataHash = object.dataHash) !== null && _object$dataHash !== void 0 ? _object$dataHash : new Uint8Array();\n    message.validatorsHash = (_object$validatorsHas = object.validatorsHash) !== null && _object$validatorsHas !== void 0 ? _object$validatorsHas : new Uint8Array();\n    message.nextValidatorsHash = (_object$nextValidator = object.nextValidatorsHash) !== null && _object$nextValidator !== void 0 ? _object$nextValidator : new Uint8Array();\n    message.consensusHash = (_object$consensusHash = object.consensusHash) !== null && _object$consensusHash !== void 0 ? _object$consensusHash : new Uint8Array();\n    message.appHash = (_object$appHash = object.appHash) !== null && _object$appHash !== void 0 ? _object$appHash : new Uint8Array();\n    message.lastResultsHash = (_object$lastResultsHa = object.lastResultsHash) !== null && _object$lastResultsHa !== void 0 ? _object$lastResultsHa : new Uint8Array();\n    message.evidenceHash = (_object$evidenceHash = object.evidenceHash) !== null && _object$evidenceHash !== void 0 ? _object$evidenceHash : new Uint8Array();\n    message.proposerAddress = (_object$proposerAddre = object.proposerAddress) !== null && _object$proposerAddre !== void 0 ? _object$proposerAddre : new Uint8Array();\n    return message;\n  }\n};\nexports.Header = Header;\nfunction createBaseData() {\n  return {\n    txs: []\n  };\n}\nvar Data = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    var _iterator = _createForOfIteratorHelper(message.txs),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        writer.uint32(10).bytes(v);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseData();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.txs.push(reader.bytes());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$txs;\n    var message = createBaseData();\n    message.txs = ((_object$txs = object.txs) === null || _object$txs === void 0 ? void 0 : _object$txs.map(function (e) {\n      return e;\n    })) || [];\n    return message;\n  }\n};\nexports.Data = Data;\nfunction createBaseVote() {\n  return {\n    type: 0,\n    height: _helpers.Long.ZERO,\n    round: 0,\n    blockId: BlockID.fromPartial({}),\n    timestamp: undefined,\n    validatorAddress: new Uint8Array(),\n    validatorIndex: 0,\n    signature: new Uint8Array()\n  };\n}\nvar Vote = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.type !== 0) {\n      writer.uint32(8).int32(message.type);\n    }\n    if (!message.height.isZero()) {\n      writer.uint32(16).int64(message.height);\n    }\n    if (message.round !== 0) {\n      writer.uint32(24).int32(message.round);\n    }\n    if (message.blockId !== undefined) {\n      BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.timestamp !== undefined) {\n      _timestamp.Timestamp.encode((0, _helpers.toTimestamp)(message.timestamp), writer.uint32(42).fork()).ldelim();\n    }\n    if (message.validatorAddress.length !== 0) {\n      writer.uint32(50).bytes(message.validatorAddress);\n    }\n    if (message.validatorIndex !== 0) {\n      writer.uint32(56).int32(message.validatorIndex);\n    }\n    if (message.signature.length !== 0) {\n      writer.uint32(66).bytes(message.signature);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseVote();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.type = reader.int32();\n          break;\n        case 2:\n          message.height = reader.int64();\n          break;\n        case 3:\n          message.round = reader.int32();\n          break;\n        case 4:\n          message.blockId = BlockID.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.timestamp = (0, _helpers.fromTimestamp)(_timestamp.Timestamp.decode(reader, reader.uint32()));\n          break;\n        case 6:\n          message.validatorAddress = reader.bytes();\n          break;\n        case 7:\n          message.validatorIndex = reader.int32();\n          break;\n        case 8:\n          message.signature = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$type, _object$round, _object$timestamp, _object$validatorAddr, _object$validatorInde, _object$signature;\n    var message = createBaseVote();\n    message.type = (_object$type = object.type) !== null && _object$type !== void 0 ? _object$type : 0;\n    message.height = object.height !== undefined && object.height !== null ? _helpers.Long.fromValue(object.height) : _helpers.Long.ZERO;\n    message.round = (_object$round = object.round) !== null && _object$round !== void 0 ? _object$round : 0;\n    message.blockId = object.blockId !== undefined && object.blockId !== null ? BlockID.fromPartial(object.blockId) : undefined;\n    message.timestamp = (_object$timestamp = object.timestamp) !== null && _object$timestamp !== void 0 ? _object$timestamp : undefined;\n    message.validatorAddress = (_object$validatorAddr = object.validatorAddress) !== null && _object$validatorAddr !== void 0 ? _object$validatorAddr : new Uint8Array();\n    message.validatorIndex = (_object$validatorInde = object.validatorIndex) !== null && _object$validatorInde !== void 0 ? _object$validatorInde : 0;\n    message.signature = (_object$signature = object.signature) !== null && _object$signature !== void 0 ? _object$signature : new Uint8Array();\n    return message;\n  }\n};\nexports.Vote = Vote;\nfunction createBaseCommit() {\n  return {\n    height: _helpers.Long.ZERO,\n    round: 0,\n    blockId: BlockID.fromPartial({}),\n    signatures: []\n  };\n}\nvar Commit = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (!message.height.isZero()) {\n      writer.uint32(8).int64(message.height);\n    }\n    if (message.round !== 0) {\n      writer.uint32(16).int32(message.round);\n    }\n    if (message.blockId !== undefined) {\n      BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n    }\n    var _iterator2 = _createForOfIteratorHelper(message.signatures),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var v = _step2.value;\n        CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseCommit();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.height = reader.int64();\n          break;\n        case 2:\n          message.round = reader.int32();\n          break;\n        case 3:\n          message.blockId = BlockID.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$round2, _object$signatures;\n    var message = createBaseCommit();\n    message.height = object.height !== undefined && object.height !== null ? _helpers.Long.fromValue(object.height) : _helpers.Long.ZERO;\n    message.round = (_object$round2 = object.round) !== null && _object$round2 !== void 0 ? _object$round2 : 0;\n    message.blockId = object.blockId !== undefined && object.blockId !== null ? BlockID.fromPartial(object.blockId) : undefined;\n    message.signatures = ((_object$signatures = object.signatures) === null || _object$signatures === void 0 ? void 0 : _object$signatures.map(function (e) {\n      return CommitSig.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nexports.Commit = Commit;\nfunction createBaseCommitSig() {\n  return {\n    blockIdFlag: 0,\n    validatorAddress: new Uint8Array(),\n    timestamp: undefined,\n    signature: new Uint8Array()\n  };\n}\nvar CommitSig = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.blockIdFlag !== 0) {\n      writer.uint32(8).int32(message.blockIdFlag);\n    }\n    if (message.validatorAddress.length !== 0) {\n      writer.uint32(18).bytes(message.validatorAddress);\n    }\n    if (message.timestamp !== undefined) {\n      _timestamp.Timestamp.encode((0, _helpers.toTimestamp)(message.timestamp), writer.uint32(26).fork()).ldelim();\n    }\n    if (message.signature.length !== 0) {\n      writer.uint32(34).bytes(message.signature);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseCommitSig();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.blockIdFlag = reader.int32();\n          break;\n        case 2:\n          message.validatorAddress = reader.bytes();\n          break;\n        case 3:\n          message.timestamp = (0, _helpers.fromTimestamp)(_timestamp.Timestamp.decode(reader, reader.uint32()));\n          break;\n        case 4:\n          message.signature = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$blockIdFlag, _object$validatorAddr2, _object$timestamp2, _object$signature2;\n    var message = createBaseCommitSig();\n    message.blockIdFlag = (_object$blockIdFlag = object.blockIdFlag) !== null && _object$blockIdFlag !== void 0 ? _object$blockIdFlag : 0;\n    message.validatorAddress = (_object$validatorAddr2 = object.validatorAddress) !== null && _object$validatorAddr2 !== void 0 ? _object$validatorAddr2 : new Uint8Array();\n    message.timestamp = (_object$timestamp2 = object.timestamp) !== null && _object$timestamp2 !== void 0 ? _object$timestamp2 : undefined;\n    message.signature = (_object$signature2 = object.signature) !== null && _object$signature2 !== void 0 ? _object$signature2 : new Uint8Array();\n    return message;\n  }\n};\nexports.CommitSig = CommitSig;\nfunction createBaseProposal() {\n  return {\n    type: 0,\n    height: _helpers.Long.ZERO,\n    round: 0,\n    polRound: 0,\n    blockId: BlockID.fromPartial({}),\n    timestamp: undefined,\n    signature: new Uint8Array()\n  };\n}\nvar Proposal = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.type !== 0) {\n      writer.uint32(8).int32(message.type);\n    }\n    if (!message.height.isZero()) {\n      writer.uint32(16).int64(message.height);\n    }\n    if (message.round !== 0) {\n      writer.uint32(24).int32(message.round);\n    }\n    if (message.polRound !== 0) {\n      writer.uint32(32).int32(message.polRound);\n    }\n    if (message.blockId !== undefined) {\n      BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n    }\n    if (message.timestamp !== undefined) {\n      _timestamp.Timestamp.encode((0, _helpers.toTimestamp)(message.timestamp), writer.uint32(50).fork()).ldelim();\n    }\n    if (message.signature.length !== 0) {\n      writer.uint32(58).bytes(message.signature);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseProposal();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.type = reader.int32();\n          break;\n        case 2:\n          message.height = reader.int64();\n          break;\n        case 3:\n          message.round = reader.int32();\n          break;\n        case 4:\n          message.polRound = reader.int32();\n          break;\n        case 5:\n          message.blockId = BlockID.decode(reader, reader.uint32());\n          break;\n        case 6:\n          message.timestamp = (0, _helpers.fromTimestamp)(_timestamp.Timestamp.decode(reader, reader.uint32()));\n          break;\n        case 7:\n          message.signature = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$type2, _object$round3, _object$polRound, _object$timestamp3, _object$signature3;\n    var message = createBaseProposal();\n    message.type = (_object$type2 = object.type) !== null && _object$type2 !== void 0 ? _object$type2 : 0;\n    message.height = object.height !== undefined && object.height !== null ? _helpers.Long.fromValue(object.height) : _helpers.Long.ZERO;\n    message.round = (_object$round3 = object.round) !== null && _object$round3 !== void 0 ? _object$round3 : 0;\n    message.polRound = (_object$polRound = object.polRound) !== null && _object$polRound !== void 0 ? _object$polRound : 0;\n    message.blockId = object.blockId !== undefined && object.blockId !== null ? BlockID.fromPartial(object.blockId) : undefined;\n    message.timestamp = (_object$timestamp3 = object.timestamp) !== null && _object$timestamp3 !== void 0 ? _object$timestamp3 : undefined;\n    message.signature = (_object$signature3 = object.signature) !== null && _object$signature3 !== void 0 ? _object$signature3 : new Uint8Array();\n    return message;\n  }\n};\nexports.Proposal = Proposal;\nfunction createBaseSignedHeader() {\n  return {\n    header: Header.fromPartial({}),\n    commit: Commit.fromPartial({})\n  };\n}\nvar SignedHeader = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.header !== undefined) {\n      Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.commit !== undefined) {\n      Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseSignedHeader();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.header = Header.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.commit = Commit.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseSignedHeader();\n    message.header = object.header !== undefined && object.header !== null ? Header.fromPartial(object.header) : undefined;\n    message.commit = object.commit !== undefined && object.commit !== null ? Commit.fromPartial(object.commit) : undefined;\n    return message;\n  }\n};\nexports.SignedHeader = SignedHeader;\nfunction createBaseLightBlock() {\n  return {\n    signedHeader: SignedHeader.fromPartial({}),\n    validatorSet: _validator.ValidatorSet.fromPartial({})\n  };\n}\nvar LightBlock = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.signedHeader !== undefined) {\n      SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.validatorSet !== undefined) {\n      _validator.ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseLightBlock();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.validatorSet = _validator.ValidatorSet.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseLightBlock();\n    message.signedHeader = object.signedHeader !== undefined && object.signedHeader !== null ? SignedHeader.fromPartial(object.signedHeader) : undefined;\n    message.validatorSet = object.validatorSet !== undefined && object.validatorSet !== null ? _validator.ValidatorSet.fromPartial(object.validatorSet) : undefined;\n    return message;\n  }\n};\nexports.LightBlock = LightBlock;\nfunction createBaseBlockMeta() {\n  return {\n    blockId: BlockID.fromPartial({}),\n    blockSize: _helpers.Long.ZERO,\n    header: Header.fromPartial({}),\n    numTxs: _helpers.Long.ZERO\n  };\n}\nvar BlockMeta = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.blockId !== undefined) {\n      BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n    }\n    if (!message.blockSize.isZero()) {\n      writer.uint32(16).int64(message.blockSize);\n    }\n    if (message.header !== undefined) {\n      Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n    }\n    if (!message.numTxs.isZero()) {\n      writer.uint32(32).int64(message.numTxs);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseBlockMeta();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.blockId = BlockID.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.blockSize = reader.int64();\n          break;\n        case 3:\n          message.header = Header.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.numTxs = reader.int64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseBlockMeta();\n    message.blockId = object.blockId !== undefined && object.blockId !== null ? BlockID.fromPartial(object.blockId) : undefined;\n    message.blockSize = object.blockSize !== undefined && object.blockSize !== null ? _helpers.Long.fromValue(object.blockSize) : _helpers.Long.ZERO;\n    message.header = object.header !== undefined && object.header !== null ? Header.fromPartial(object.header) : undefined;\n    message.numTxs = object.numTxs !== undefined && object.numTxs !== null ? _helpers.Long.fromValue(object.numTxs) : _helpers.Long.ZERO;\n    return message;\n  }\n};\nexports.BlockMeta = BlockMeta;\nfunction createBaseTxProof() {\n  return {\n    rootHash: new Uint8Array(),\n    data: new Uint8Array(),\n    proof: _proof.Proof.fromPartial({})\n  };\n}\nvar TxProof = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.rootHash.length !== 0) {\n      writer.uint32(10).bytes(message.rootHash);\n    }\n    if (message.data.length !== 0) {\n      writer.uint32(18).bytes(message.data);\n    }\n    if (message.proof !== undefined) {\n      _proof.Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseTxProof();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.rootHash = reader.bytes();\n          break;\n        case 2:\n          message.data = reader.bytes();\n          break;\n        case 3:\n          message.proof = _proof.Proof.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$rootHash, _object$data;\n    var message = createBaseTxProof();\n    message.rootHash = (_object$rootHash = object.rootHash) !== null && _object$rootHash !== void 0 ? _object$rootHash : new Uint8Array();\n    message.data = (_object$data = object.data) !== null && _object$data !== void 0 ? _object$data : new Uint8Array();\n    message.proof = object.proof !== undefined && object.proof !== null ? _proof.Proof.fromPartial(object.proof) : undefined;\n    return message;\n  }\n};\nexports.TxProof = TxProof;","map":{"version":3,"names":["_typeof","require","Object","defineProperty","exports","value","Vote","TxProof","SignedMsgTypeSDKType","SignedMsgType","SignedHeader","Proposal","PartSetHeader","Part","LightBlock","Header","Data","CommitSig","Commit","BlockMeta","BlockIDFlagSDKType","BlockIDFlag","BlockID","blockIDFlagFromJSON","blockIDFlagToJSON","signedMsgTypeFromJSON","signedMsgTypeToJSON","_proof","_types","_timestamp","_validator","_helpers","_m0","_interopRequireWildcard","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","e","_e","f","TypeError","normalCompletion","didErr","err","step","next","_e2","minLen","_arrayLikeToArray","toString","slice","constructor","name","from","test","arr","len","arr2","object","BLOCK_ID_FLAG_UNKNOWN","BLOCK_ID_FLAG_ABSENT","BLOCK_ID_FLAG_COMMIT","BLOCK_ID_FLAG_NIL","UNRECOGNIZED","SIGNED_MSG_TYPE_UNKNOWN","SIGNED_MSG_TYPE_PREVOTE","SIGNED_MSG_TYPE_PRECOMMIT","SIGNED_MSG_TYPE_PROPOSAL","createBasePartSetHeader","total","hash","Uint8Array","encode","message","writer","arguments","undefined","Writer","create","uint32","bytes","decode","input","reader","Reader","end","pos","tag","skipType","fromPartial","_object$total","_object$hash","createBasePart","index","proof","Proof","fork","ldelim","_object$index","_object$bytes","createBaseBlockID","partSetHeader","_object$hash2","createBaseHeader","version","Consensus","chainId","height","Long","ZERO","time","lastBlockId","lastCommitHash","dataHash","validatorsHash","nextValidatorsHash","consensusHash","appHash","lastResultsHash","evidenceHash","proposerAddress","string","isZero","int64","Timestamp","toTimestamp","fromTimestamp","_object$chainId","_object$time","_object$lastCommitHas","_object$dataHash","_object$validatorsHas","_object$nextValidator","_object$consensusHash","_object$appHash","_object$lastResultsHa","_object$evidenceHash","_object$proposerAddre","fromValue","createBaseData","txs","_iterator","_step","v","push","_object$txs","map","createBaseVote","type","round","blockId","timestamp","validatorAddress","validatorIndex","signature","int32","_object$type","_object$round","_object$timestamp","_object$validatorAddr","_object$validatorInde","_object$signature","createBaseCommit","signatures","_iterator2","_step2","_object$round2","_object$signatures","createBaseCommitSig","blockIdFlag","_object$blockIdFlag","_object$validatorAddr2","_object$timestamp2","_object$signature2","createBaseProposal","polRound","_object$type2","_object$round3","_object$polRound","_object$timestamp3","_object$signature3","createBaseSignedHeader","header","commit","createBaseLightBlock","signedHeader","validatorSet","ValidatorSet","createBaseBlockMeta","blockSize","numTxs","createBaseTxProof","rootHash","data","_object$rootHash","_object$data"],"sources":["/Users/linanqi/Hackathon/Magic-Movie/frontend/node_modules/@sei-js/proto/main/codegen/tendermint/types/types.js"],"sourcesContent":["\"use strict\";\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Vote = exports.TxProof = exports.SignedMsgTypeSDKType = exports.SignedMsgType = exports.SignedHeader = exports.Proposal = exports.PartSetHeader = exports.Part = exports.LightBlock = exports.Header = exports.Data = exports.CommitSig = exports.Commit = exports.BlockMeta = exports.BlockIDFlagSDKType = exports.BlockIDFlag = exports.BlockID = void 0;\nexports.blockIDFlagFromJSON = blockIDFlagFromJSON;\nexports.blockIDFlagToJSON = blockIDFlagToJSON;\nexports.signedMsgTypeFromJSON = signedMsgTypeFromJSON;\nexports.signedMsgTypeToJSON = signedMsgTypeToJSON;\nvar _proof = require(\"../crypto/proof\");\nvar _types = require(\"../version/types\");\nvar _timestamp = require(\"../../google/protobuf/timestamp\");\nvar _validator = require(\"./validator\");\nvar _helpers = require(\"../../helpers\");\nvar _m0 = _interopRequireWildcard(require(\"protobufjs/minimal\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n/** BlockIdFlag indicates which BlcokID the signature is for */\nvar BlockIDFlag;\nexports.BlockIDFlag = BlockIDFlag;\n(function (BlockIDFlag) {\n  BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n  BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n  BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n  BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n  BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (exports.BlockIDFlag = BlockIDFlag = {}));\nvar BlockIDFlagSDKType = BlockIDFlag;\nexports.BlockIDFlagSDKType = BlockIDFlagSDKType;\nfunction blockIDFlagFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"BLOCK_ID_FLAG_UNKNOWN\":\n      return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n    case 1:\n    case \"BLOCK_ID_FLAG_ABSENT\":\n      return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n    case 2:\n    case \"BLOCK_ID_FLAG_COMMIT\":\n      return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n    case 3:\n    case \"BLOCK_ID_FLAG_NIL\":\n      return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return BlockIDFlag.UNRECOGNIZED;\n  }\n}\nfunction blockIDFlagToJSON(object) {\n  switch (object) {\n    case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n      return \"BLOCK_ID_FLAG_UNKNOWN\";\n    case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n      return \"BLOCK_ID_FLAG_ABSENT\";\n    case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n      return \"BLOCK_ID_FLAG_COMMIT\";\n    case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n      return \"BLOCK_ID_FLAG_NIL\";\n    case BlockIDFlag.UNRECOGNIZED:\n    default:\n      return \"UNRECOGNIZED\";\n  }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nvar SignedMsgType;\nexports.SignedMsgType = SignedMsgType;\n(function (SignedMsgType) {\n  SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n  SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n  SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n  SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n  SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (exports.SignedMsgType = SignedMsgType = {}));\nvar SignedMsgTypeSDKType = SignedMsgType;\nexports.SignedMsgTypeSDKType = SignedMsgTypeSDKType;\nfunction signedMsgTypeFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"SIGNED_MSG_TYPE_UNKNOWN\":\n      return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n    case 1:\n    case \"SIGNED_MSG_TYPE_PREVOTE\":\n      return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n    case 2:\n    case \"SIGNED_MSG_TYPE_PRECOMMIT\":\n      return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n    case 32:\n    case \"SIGNED_MSG_TYPE_PROPOSAL\":\n      return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return SignedMsgType.UNRECOGNIZED;\n  }\n}\nfunction signedMsgTypeToJSON(object) {\n  switch (object) {\n    case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n      return \"SIGNED_MSG_TYPE_UNKNOWN\";\n    case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n      return \"SIGNED_MSG_TYPE_PREVOTE\";\n    case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n      return \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n      return \"SIGNED_MSG_TYPE_PROPOSAL\";\n    case SignedMsgType.UNRECOGNIZED:\n    default:\n      return \"UNRECOGNIZED\";\n  }\n}\n/** PartsetHeader */\n\nfunction createBasePartSetHeader() {\n  return {\n    total: 0,\n    hash: new Uint8Array()\n  };\n}\nvar PartSetHeader = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.total !== 0) {\n      writer.uint32(8).uint32(message.total);\n    }\n    if (message.hash.length !== 0) {\n      writer.uint32(18).bytes(message.hash);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBasePartSetHeader();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.total = reader.uint32();\n          break;\n        case 2:\n          message.hash = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$total, _object$hash;\n    var message = createBasePartSetHeader();\n    message.total = (_object$total = object.total) !== null && _object$total !== void 0 ? _object$total : 0;\n    message.hash = (_object$hash = object.hash) !== null && _object$hash !== void 0 ? _object$hash : new Uint8Array();\n    return message;\n  }\n};\nexports.PartSetHeader = PartSetHeader;\nfunction createBasePart() {\n  return {\n    index: 0,\n    bytes: new Uint8Array(),\n    proof: _proof.Proof.fromPartial({})\n  };\n}\nvar Part = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.index !== 0) {\n      writer.uint32(8).uint32(message.index);\n    }\n    if (message.bytes.length !== 0) {\n      writer.uint32(18).bytes(message.bytes);\n    }\n    if (message.proof !== undefined) {\n      _proof.Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBasePart();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.index = reader.uint32();\n          break;\n        case 2:\n          message.bytes = reader.bytes();\n          break;\n        case 3:\n          message.proof = _proof.Proof.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$index, _object$bytes;\n    var message = createBasePart();\n    message.index = (_object$index = object.index) !== null && _object$index !== void 0 ? _object$index : 0;\n    message.bytes = (_object$bytes = object.bytes) !== null && _object$bytes !== void 0 ? _object$bytes : new Uint8Array();\n    message.proof = object.proof !== undefined && object.proof !== null ? _proof.Proof.fromPartial(object.proof) : undefined;\n    return message;\n  }\n};\nexports.Part = Part;\nfunction createBaseBlockID() {\n  return {\n    hash: new Uint8Array(),\n    partSetHeader: PartSetHeader.fromPartial({})\n  };\n}\nvar BlockID = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.hash.length !== 0) {\n      writer.uint32(10).bytes(message.hash);\n    }\n    if (message.partSetHeader !== undefined) {\n      PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseBlockID();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.hash = reader.bytes();\n          break;\n        case 2:\n          message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$hash2;\n    var message = createBaseBlockID();\n    message.hash = (_object$hash2 = object.hash) !== null && _object$hash2 !== void 0 ? _object$hash2 : new Uint8Array();\n    message.partSetHeader = object.partSetHeader !== undefined && object.partSetHeader !== null ? PartSetHeader.fromPartial(object.partSetHeader) : undefined;\n    return message;\n  }\n};\nexports.BlockID = BlockID;\nfunction createBaseHeader() {\n  return {\n    version: _types.Consensus.fromPartial({}),\n    chainId: \"\",\n    height: _helpers.Long.ZERO,\n    time: undefined,\n    lastBlockId: BlockID.fromPartial({}),\n    lastCommitHash: new Uint8Array(),\n    dataHash: new Uint8Array(),\n    validatorsHash: new Uint8Array(),\n    nextValidatorsHash: new Uint8Array(),\n    consensusHash: new Uint8Array(),\n    appHash: new Uint8Array(),\n    lastResultsHash: new Uint8Array(),\n    evidenceHash: new Uint8Array(),\n    proposerAddress: new Uint8Array()\n  };\n}\nvar Header = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.version !== undefined) {\n      _types.Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.chainId !== \"\") {\n      writer.uint32(18).string(message.chainId);\n    }\n    if (!message.height.isZero()) {\n      writer.uint32(24).int64(message.height);\n    }\n    if (message.time !== undefined) {\n      _timestamp.Timestamp.encode((0, _helpers.toTimestamp)(message.time), writer.uint32(34).fork()).ldelim();\n    }\n    if (message.lastBlockId !== undefined) {\n      BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n    }\n    if (message.lastCommitHash.length !== 0) {\n      writer.uint32(50).bytes(message.lastCommitHash);\n    }\n    if (message.dataHash.length !== 0) {\n      writer.uint32(58).bytes(message.dataHash);\n    }\n    if (message.validatorsHash.length !== 0) {\n      writer.uint32(66).bytes(message.validatorsHash);\n    }\n    if (message.nextValidatorsHash.length !== 0) {\n      writer.uint32(74).bytes(message.nextValidatorsHash);\n    }\n    if (message.consensusHash.length !== 0) {\n      writer.uint32(82).bytes(message.consensusHash);\n    }\n    if (message.appHash.length !== 0) {\n      writer.uint32(90).bytes(message.appHash);\n    }\n    if (message.lastResultsHash.length !== 0) {\n      writer.uint32(98).bytes(message.lastResultsHash);\n    }\n    if (message.evidenceHash.length !== 0) {\n      writer.uint32(106).bytes(message.evidenceHash);\n    }\n    if (message.proposerAddress.length !== 0) {\n      writer.uint32(114).bytes(message.proposerAddress);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseHeader();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.version = _types.Consensus.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.chainId = reader.string();\n          break;\n        case 3:\n          message.height = reader.int64();\n          break;\n        case 4:\n          message.time = (0, _helpers.fromTimestamp)(_timestamp.Timestamp.decode(reader, reader.uint32()));\n          break;\n        case 5:\n          message.lastBlockId = BlockID.decode(reader, reader.uint32());\n          break;\n        case 6:\n          message.lastCommitHash = reader.bytes();\n          break;\n        case 7:\n          message.dataHash = reader.bytes();\n          break;\n        case 8:\n          message.validatorsHash = reader.bytes();\n          break;\n        case 9:\n          message.nextValidatorsHash = reader.bytes();\n          break;\n        case 10:\n          message.consensusHash = reader.bytes();\n          break;\n        case 11:\n          message.appHash = reader.bytes();\n          break;\n        case 12:\n          message.lastResultsHash = reader.bytes();\n          break;\n        case 13:\n          message.evidenceHash = reader.bytes();\n          break;\n        case 14:\n          message.proposerAddress = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$chainId, _object$time, _object$lastCommitHas, _object$dataHash, _object$validatorsHas, _object$nextValidator, _object$consensusHash, _object$appHash, _object$lastResultsHa, _object$evidenceHash, _object$proposerAddre;\n    var message = createBaseHeader();\n    message.version = object.version !== undefined && object.version !== null ? _types.Consensus.fromPartial(object.version) : undefined;\n    message.chainId = (_object$chainId = object.chainId) !== null && _object$chainId !== void 0 ? _object$chainId : \"\";\n    message.height = object.height !== undefined && object.height !== null ? _helpers.Long.fromValue(object.height) : _helpers.Long.ZERO;\n    message.time = (_object$time = object.time) !== null && _object$time !== void 0 ? _object$time : undefined;\n    message.lastBlockId = object.lastBlockId !== undefined && object.lastBlockId !== null ? BlockID.fromPartial(object.lastBlockId) : undefined;\n    message.lastCommitHash = (_object$lastCommitHas = object.lastCommitHash) !== null && _object$lastCommitHas !== void 0 ? _object$lastCommitHas : new Uint8Array();\n    message.dataHash = (_object$dataHash = object.dataHash) !== null && _object$dataHash !== void 0 ? _object$dataHash : new Uint8Array();\n    message.validatorsHash = (_object$validatorsHas = object.validatorsHash) !== null && _object$validatorsHas !== void 0 ? _object$validatorsHas : new Uint8Array();\n    message.nextValidatorsHash = (_object$nextValidator = object.nextValidatorsHash) !== null && _object$nextValidator !== void 0 ? _object$nextValidator : new Uint8Array();\n    message.consensusHash = (_object$consensusHash = object.consensusHash) !== null && _object$consensusHash !== void 0 ? _object$consensusHash : new Uint8Array();\n    message.appHash = (_object$appHash = object.appHash) !== null && _object$appHash !== void 0 ? _object$appHash : new Uint8Array();\n    message.lastResultsHash = (_object$lastResultsHa = object.lastResultsHash) !== null && _object$lastResultsHa !== void 0 ? _object$lastResultsHa : new Uint8Array();\n    message.evidenceHash = (_object$evidenceHash = object.evidenceHash) !== null && _object$evidenceHash !== void 0 ? _object$evidenceHash : new Uint8Array();\n    message.proposerAddress = (_object$proposerAddre = object.proposerAddress) !== null && _object$proposerAddre !== void 0 ? _object$proposerAddre : new Uint8Array();\n    return message;\n  }\n};\nexports.Header = Header;\nfunction createBaseData() {\n  return {\n    txs: []\n  };\n}\nvar Data = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    var _iterator = _createForOfIteratorHelper(message.txs),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        writer.uint32(10).bytes(v);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseData();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.txs.push(reader.bytes());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$txs;\n    var message = createBaseData();\n    message.txs = ((_object$txs = object.txs) === null || _object$txs === void 0 ? void 0 : _object$txs.map(function (e) {\n      return e;\n    })) || [];\n    return message;\n  }\n};\nexports.Data = Data;\nfunction createBaseVote() {\n  return {\n    type: 0,\n    height: _helpers.Long.ZERO,\n    round: 0,\n    blockId: BlockID.fromPartial({}),\n    timestamp: undefined,\n    validatorAddress: new Uint8Array(),\n    validatorIndex: 0,\n    signature: new Uint8Array()\n  };\n}\nvar Vote = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.type !== 0) {\n      writer.uint32(8).int32(message.type);\n    }\n    if (!message.height.isZero()) {\n      writer.uint32(16).int64(message.height);\n    }\n    if (message.round !== 0) {\n      writer.uint32(24).int32(message.round);\n    }\n    if (message.blockId !== undefined) {\n      BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.timestamp !== undefined) {\n      _timestamp.Timestamp.encode((0, _helpers.toTimestamp)(message.timestamp), writer.uint32(42).fork()).ldelim();\n    }\n    if (message.validatorAddress.length !== 0) {\n      writer.uint32(50).bytes(message.validatorAddress);\n    }\n    if (message.validatorIndex !== 0) {\n      writer.uint32(56).int32(message.validatorIndex);\n    }\n    if (message.signature.length !== 0) {\n      writer.uint32(66).bytes(message.signature);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseVote();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.type = reader.int32();\n          break;\n        case 2:\n          message.height = reader.int64();\n          break;\n        case 3:\n          message.round = reader.int32();\n          break;\n        case 4:\n          message.blockId = BlockID.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.timestamp = (0, _helpers.fromTimestamp)(_timestamp.Timestamp.decode(reader, reader.uint32()));\n          break;\n        case 6:\n          message.validatorAddress = reader.bytes();\n          break;\n        case 7:\n          message.validatorIndex = reader.int32();\n          break;\n        case 8:\n          message.signature = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$type, _object$round, _object$timestamp, _object$validatorAddr, _object$validatorInde, _object$signature;\n    var message = createBaseVote();\n    message.type = (_object$type = object.type) !== null && _object$type !== void 0 ? _object$type : 0;\n    message.height = object.height !== undefined && object.height !== null ? _helpers.Long.fromValue(object.height) : _helpers.Long.ZERO;\n    message.round = (_object$round = object.round) !== null && _object$round !== void 0 ? _object$round : 0;\n    message.blockId = object.blockId !== undefined && object.blockId !== null ? BlockID.fromPartial(object.blockId) : undefined;\n    message.timestamp = (_object$timestamp = object.timestamp) !== null && _object$timestamp !== void 0 ? _object$timestamp : undefined;\n    message.validatorAddress = (_object$validatorAddr = object.validatorAddress) !== null && _object$validatorAddr !== void 0 ? _object$validatorAddr : new Uint8Array();\n    message.validatorIndex = (_object$validatorInde = object.validatorIndex) !== null && _object$validatorInde !== void 0 ? _object$validatorInde : 0;\n    message.signature = (_object$signature = object.signature) !== null && _object$signature !== void 0 ? _object$signature : new Uint8Array();\n    return message;\n  }\n};\nexports.Vote = Vote;\nfunction createBaseCommit() {\n  return {\n    height: _helpers.Long.ZERO,\n    round: 0,\n    blockId: BlockID.fromPartial({}),\n    signatures: []\n  };\n}\nvar Commit = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (!message.height.isZero()) {\n      writer.uint32(8).int64(message.height);\n    }\n    if (message.round !== 0) {\n      writer.uint32(16).int32(message.round);\n    }\n    if (message.blockId !== undefined) {\n      BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n    }\n    var _iterator2 = _createForOfIteratorHelper(message.signatures),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var v = _step2.value;\n        CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseCommit();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.height = reader.int64();\n          break;\n        case 2:\n          message.round = reader.int32();\n          break;\n        case 3:\n          message.blockId = BlockID.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$round2, _object$signatures;\n    var message = createBaseCommit();\n    message.height = object.height !== undefined && object.height !== null ? _helpers.Long.fromValue(object.height) : _helpers.Long.ZERO;\n    message.round = (_object$round2 = object.round) !== null && _object$round2 !== void 0 ? _object$round2 : 0;\n    message.blockId = object.blockId !== undefined && object.blockId !== null ? BlockID.fromPartial(object.blockId) : undefined;\n    message.signatures = ((_object$signatures = object.signatures) === null || _object$signatures === void 0 ? void 0 : _object$signatures.map(function (e) {\n      return CommitSig.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nexports.Commit = Commit;\nfunction createBaseCommitSig() {\n  return {\n    blockIdFlag: 0,\n    validatorAddress: new Uint8Array(),\n    timestamp: undefined,\n    signature: new Uint8Array()\n  };\n}\nvar CommitSig = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.blockIdFlag !== 0) {\n      writer.uint32(8).int32(message.blockIdFlag);\n    }\n    if (message.validatorAddress.length !== 0) {\n      writer.uint32(18).bytes(message.validatorAddress);\n    }\n    if (message.timestamp !== undefined) {\n      _timestamp.Timestamp.encode((0, _helpers.toTimestamp)(message.timestamp), writer.uint32(26).fork()).ldelim();\n    }\n    if (message.signature.length !== 0) {\n      writer.uint32(34).bytes(message.signature);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseCommitSig();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.blockIdFlag = reader.int32();\n          break;\n        case 2:\n          message.validatorAddress = reader.bytes();\n          break;\n        case 3:\n          message.timestamp = (0, _helpers.fromTimestamp)(_timestamp.Timestamp.decode(reader, reader.uint32()));\n          break;\n        case 4:\n          message.signature = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$blockIdFlag, _object$validatorAddr2, _object$timestamp2, _object$signature2;\n    var message = createBaseCommitSig();\n    message.blockIdFlag = (_object$blockIdFlag = object.blockIdFlag) !== null && _object$blockIdFlag !== void 0 ? _object$blockIdFlag : 0;\n    message.validatorAddress = (_object$validatorAddr2 = object.validatorAddress) !== null && _object$validatorAddr2 !== void 0 ? _object$validatorAddr2 : new Uint8Array();\n    message.timestamp = (_object$timestamp2 = object.timestamp) !== null && _object$timestamp2 !== void 0 ? _object$timestamp2 : undefined;\n    message.signature = (_object$signature2 = object.signature) !== null && _object$signature2 !== void 0 ? _object$signature2 : new Uint8Array();\n    return message;\n  }\n};\nexports.CommitSig = CommitSig;\nfunction createBaseProposal() {\n  return {\n    type: 0,\n    height: _helpers.Long.ZERO,\n    round: 0,\n    polRound: 0,\n    blockId: BlockID.fromPartial({}),\n    timestamp: undefined,\n    signature: new Uint8Array()\n  };\n}\nvar Proposal = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.type !== 0) {\n      writer.uint32(8).int32(message.type);\n    }\n    if (!message.height.isZero()) {\n      writer.uint32(16).int64(message.height);\n    }\n    if (message.round !== 0) {\n      writer.uint32(24).int32(message.round);\n    }\n    if (message.polRound !== 0) {\n      writer.uint32(32).int32(message.polRound);\n    }\n    if (message.blockId !== undefined) {\n      BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n    }\n    if (message.timestamp !== undefined) {\n      _timestamp.Timestamp.encode((0, _helpers.toTimestamp)(message.timestamp), writer.uint32(50).fork()).ldelim();\n    }\n    if (message.signature.length !== 0) {\n      writer.uint32(58).bytes(message.signature);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseProposal();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.type = reader.int32();\n          break;\n        case 2:\n          message.height = reader.int64();\n          break;\n        case 3:\n          message.round = reader.int32();\n          break;\n        case 4:\n          message.polRound = reader.int32();\n          break;\n        case 5:\n          message.blockId = BlockID.decode(reader, reader.uint32());\n          break;\n        case 6:\n          message.timestamp = (0, _helpers.fromTimestamp)(_timestamp.Timestamp.decode(reader, reader.uint32()));\n          break;\n        case 7:\n          message.signature = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$type2, _object$round3, _object$polRound, _object$timestamp3, _object$signature3;\n    var message = createBaseProposal();\n    message.type = (_object$type2 = object.type) !== null && _object$type2 !== void 0 ? _object$type2 : 0;\n    message.height = object.height !== undefined && object.height !== null ? _helpers.Long.fromValue(object.height) : _helpers.Long.ZERO;\n    message.round = (_object$round3 = object.round) !== null && _object$round3 !== void 0 ? _object$round3 : 0;\n    message.polRound = (_object$polRound = object.polRound) !== null && _object$polRound !== void 0 ? _object$polRound : 0;\n    message.blockId = object.blockId !== undefined && object.blockId !== null ? BlockID.fromPartial(object.blockId) : undefined;\n    message.timestamp = (_object$timestamp3 = object.timestamp) !== null && _object$timestamp3 !== void 0 ? _object$timestamp3 : undefined;\n    message.signature = (_object$signature3 = object.signature) !== null && _object$signature3 !== void 0 ? _object$signature3 : new Uint8Array();\n    return message;\n  }\n};\nexports.Proposal = Proposal;\nfunction createBaseSignedHeader() {\n  return {\n    header: Header.fromPartial({}),\n    commit: Commit.fromPartial({})\n  };\n}\nvar SignedHeader = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.header !== undefined) {\n      Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.commit !== undefined) {\n      Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseSignedHeader();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.header = Header.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.commit = Commit.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseSignedHeader();\n    message.header = object.header !== undefined && object.header !== null ? Header.fromPartial(object.header) : undefined;\n    message.commit = object.commit !== undefined && object.commit !== null ? Commit.fromPartial(object.commit) : undefined;\n    return message;\n  }\n};\nexports.SignedHeader = SignedHeader;\nfunction createBaseLightBlock() {\n  return {\n    signedHeader: SignedHeader.fromPartial({}),\n    validatorSet: _validator.ValidatorSet.fromPartial({})\n  };\n}\nvar LightBlock = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.signedHeader !== undefined) {\n      SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.validatorSet !== undefined) {\n      _validator.ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseLightBlock();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.validatorSet = _validator.ValidatorSet.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseLightBlock();\n    message.signedHeader = object.signedHeader !== undefined && object.signedHeader !== null ? SignedHeader.fromPartial(object.signedHeader) : undefined;\n    message.validatorSet = object.validatorSet !== undefined && object.validatorSet !== null ? _validator.ValidatorSet.fromPartial(object.validatorSet) : undefined;\n    return message;\n  }\n};\nexports.LightBlock = LightBlock;\nfunction createBaseBlockMeta() {\n  return {\n    blockId: BlockID.fromPartial({}),\n    blockSize: _helpers.Long.ZERO,\n    header: Header.fromPartial({}),\n    numTxs: _helpers.Long.ZERO\n  };\n}\nvar BlockMeta = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.blockId !== undefined) {\n      BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n    }\n    if (!message.blockSize.isZero()) {\n      writer.uint32(16).int64(message.blockSize);\n    }\n    if (message.header !== undefined) {\n      Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n    }\n    if (!message.numTxs.isZero()) {\n      writer.uint32(32).int64(message.numTxs);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseBlockMeta();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.blockId = BlockID.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.blockSize = reader.int64();\n          break;\n        case 3:\n          message.header = Header.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.numTxs = reader.int64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseBlockMeta();\n    message.blockId = object.blockId !== undefined && object.blockId !== null ? BlockID.fromPartial(object.blockId) : undefined;\n    message.blockSize = object.blockSize !== undefined && object.blockSize !== null ? _helpers.Long.fromValue(object.blockSize) : _helpers.Long.ZERO;\n    message.header = object.header !== undefined && object.header !== null ? Header.fromPartial(object.header) : undefined;\n    message.numTxs = object.numTxs !== undefined && object.numTxs !== null ? _helpers.Long.fromValue(object.numTxs) : _helpers.Long.ZERO;\n    return message;\n  }\n};\nexports.BlockMeta = BlockMeta;\nfunction createBaseTxProof() {\n  return {\n    rootHash: new Uint8Array(),\n    data: new Uint8Array(),\n    proof: _proof.Proof.fromPartial({})\n  };\n}\nvar TxProof = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.rootHash.length !== 0) {\n      writer.uint32(10).bytes(message.rootHash);\n    }\n    if (message.data.length !== 0) {\n      writer.uint32(18).bytes(message.data);\n    }\n    if (message.proof !== undefined) {\n      _proof.Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseTxProof();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.rootHash = reader.bytes();\n          break;\n        case 2:\n          message.data = reader.bytes();\n          break;\n        case 3:\n          message.proof = _proof.Proof.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$rootHash, _object$data;\n    var message = createBaseTxProof();\n    message.rootHash = (_object$rootHash = object.rootHash) !== null && _object$rootHash !== void 0 ? _object$rootHash : new Uint8Array();\n    message.data = (_object$data = object.data) !== null && _object$data !== void 0 ? _object$data : new Uint8Array();\n    message.proof = object.proof !== undefined && object.proof !== null ? _proof.Proof.fromPartial(object.proof) : undefined;\n    return message;\n  }\n};\nexports.TxProof = TxProof;"],"mappings":"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"},"metadata":{},"sourceType":"script"}