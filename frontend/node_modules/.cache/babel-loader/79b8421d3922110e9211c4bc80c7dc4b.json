{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createRpcQueryExtension = exports.QueryClientImpl = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _m0 = _interopRequireWildcard(require(\"protobufjs/minimal\"));\nvar _stargate = require(\"@cosmjs/stargate\");\nvar _query = require(\"./query\");\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj[\"default\"] = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nvar QueryClientImpl = /*#__PURE__*/function () {\n  function QueryClientImpl(rpc) {\n    (0, _classCallCheck2[\"default\"])(this, QueryClientImpl);\n    (0, _defineProperty2[\"default\"])(this, \"rpc\", void 0);\n    this.rpc = rpc;\n    this.validators = this.validators.bind(this);\n    this.validator = this.validator.bind(this);\n    this.validatorDelegations = this.validatorDelegations.bind(this);\n    this.validatorUnbondingDelegations = this.validatorUnbondingDelegations.bind(this);\n    this.delegation = this.delegation.bind(this);\n    this.unbondingDelegation = this.unbondingDelegation.bind(this);\n    this.delegatorDelegations = this.delegatorDelegations.bind(this);\n    this.delegatorUnbondingDelegations = this.delegatorUnbondingDelegations.bind(this);\n    this.redelegations = this.redelegations.bind(this);\n    this.delegatorValidators = this.delegatorValidators.bind(this);\n    this.delegatorValidator = this.delegatorValidator.bind(this);\n    this.historicalInfo = this.historicalInfo.bind(this);\n    this.pool = this.pool.bind(this);\n    this.params = this.params.bind(this);\n  }\n  (0, _createClass2[\"default\"])(QueryClientImpl, [{\n    key: \"validators\",\n    value: function validators(request) {\n      var data = _query.QueryValidatorsRequest.encode(request).finish();\n      var promise = this.rpc.request(\"cosmos.staking.v1beta1.Query\", \"Validators\", data);\n      return promise.then(function (data) {\n        return _query.QueryValidatorsResponse.decode(new _m0.Reader(data));\n      });\n    }\n  }, {\n    key: \"validator\",\n    value: function validator(request) {\n      var data = _query.QueryValidatorRequest.encode(request).finish();\n      var promise = this.rpc.request(\"cosmos.staking.v1beta1.Query\", \"Validator\", data);\n      return promise.then(function (data) {\n        return _query.QueryValidatorResponse.decode(new _m0.Reader(data));\n      });\n    }\n  }, {\n    key: \"validatorDelegations\",\n    value: function validatorDelegations(request) {\n      var data = _query.QueryValidatorDelegationsRequest.encode(request).finish();\n      var promise = this.rpc.request(\"cosmos.staking.v1beta1.Query\", \"ValidatorDelegations\", data);\n      return promise.then(function (data) {\n        return _query.QueryValidatorDelegationsResponse.decode(new _m0.Reader(data));\n      });\n    }\n  }, {\n    key: \"validatorUnbondingDelegations\",\n    value: function validatorUnbondingDelegations(request) {\n      var data = _query.QueryValidatorUnbondingDelegationsRequest.encode(request).finish();\n      var promise = this.rpc.request(\"cosmos.staking.v1beta1.Query\", \"ValidatorUnbondingDelegations\", data);\n      return promise.then(function (data) {\n        return _query.QueryValidatorUnbondingDelegationsResponse.decode(new _m0.Reader(data));\n      });\n    }\n  }, {\n    key: \"delegation\",\n    value: function delegation(request) {\n      var data = _query.QueryDelegationRequest.encode(request).finish();\n      var promise = this.rpc.request(\"cosmos.staking.v1beta1.Query\", \"Delegation\", data);\n      return promise.then(function (data) {\n        return _query.QueryDelegationResponse.decode(new _m0.Reader(data));\n      });\n    }\n  }, {\n    key: \"unbondingDelegation\",\n    value: function unbondingDelegation(request) {\n      var data = _query.QueryUnbondingDelegationRequest.encode(request).finish();\n      var promise = this.rpc.request(\"cosmos.staking.v1beta1.Query\", \"UnbondingDelegation\", data);\n      return promise.then(function (data) {\n        return _query.QueryUnbondingDelegationResponse.decode(new _m0.Reader(data));\n      });\n    }\n  }, {\n    key: \"delegatorDelegations\",\n    value: function delegatorDelegations(request) {\n      var data = _query.QueryDelegatorDelegationsRequest.encode(request).finish();\n      var promise = this.rpc.request(\"cosmos.staking.v1beta1.Query\", \"DelegatorDelegations\", data);\n      return promise.then(function (data) {\n        return _query.QueryDelegatorDelegationsResponse.decode(new _m0.Reader(data));\n      });\n    }\n  }, {\n    key: \"delegatorUnbondingDelegations\",\n    value: function delegatorUnbondingDelegations(request) {\n      var data = _query.QueryDelegatorUnbondingDelegationsRequest.encode(request).finish();\n      var promise = this.rpc.request(\"cosmos.staking.v1beta1.Query\", \"DelegatorUnbondingDelegations\", data);\n      return promise.then(function (data) {\n        return _query.QueryDelegatorUnbondingDelegationsResponse.decode(new _m0.Reader(data));\n      });\n    }\n  }, {\n    key: \"redelegations\",\n    value: function redelegations(request) {\n      var data = _query.QueryRedelegationsRequest.encode(request).finish();\n      var promise = this.rpc.request(\"cosmos.staking.v1beta1.Query\", \"Redelegations\", data);\n      return promise.then(function (data) {\n        return _query.QueryRedelegationsResponse.decode(new _m0.Reader(data));\n      });\n    }\n  }, {\n    key: \"delegatorValidators\",\n    value: function delegatorValidators(request) {\n      var data = _query.QueryDelegatorValidatorsRequest.encode(request).finish();\n      var promise = this.rpc.request(\"cosmos.staking.v1beta1.Query\", \"DelegatorValidators\", data);\n      return promise.then(function (data) {\n        return _query.QueryDelegatorValidatorsResponse.decode(new _m0.Reader(data));\n      });\n    }\n  }, {\n    key: \"delegatorValidator\",\n    value: function delegatorValidator(request) {\n      var data = _query.QueryDelegatorValidatorRequest.encode(request).finish();\n      var promise = this.rpc.request(\"cosmos.staking.v1beta1.Query\", \"DelegatorValidator\", data);\n      return promise.then(function (data) {\n        return _query.QueryDelegatorValidatorResponse.decode(new _m0.Reader(data));\n      });\n    }\n  }, {\n    key: \"historicalInfo\",\n    value: function historicalInfo(request) {\n      var data = _query.QueryHistoricalInfoRequest.encode(request).finish();\n      var promise = this.rpc.request(\"cosmos.staking.v1beta1.Query\", \"HistoricalInfo\", data);\n      return promise.then(function (data) {\n        return _query.QueryHistoricalInfoResponse.decode(new _m0.Reader(data));\n      });\n    }\n  }, {\n    key: \"pool\",\n    value: function pool() {\n      var request = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var data = _query.QueryPoolRequest.encode(request).finish();\n      var promise = this.rpc.request(\"cosmos.staking.v1beta1.Query\", \"Pool\", data);\n      return promise.then(function (data) {\n        return _query.QueryPoolResponse.decode(new _m0.Reader(data));\n      });\n    }\n  }, {\n    key: \"params\",\n    value: function params() {\n      var request = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var data = _query.QueryParamsRequest.encode(request).finish();\n      var promise = this.rpc.request(\"cosmos.staking.v1beta1.Query\", \"Params\", data);\n      return promise.then(function (data) {\n        return _query.QueryParamsResponse.decode(new _m0.Reader(data));\n      });\n    }\n  }]);\n  return QueryClientImpl;\n}();\nexports.QueryClientImpl = QueryClientImpl;\nvar createRpcQueryExtension = function createRpcQueryExtension(base) {\n  var rpc = (0, _stargate.createProtobufRpcClient)(base);\n  var queryService = new QueryClientImpl(rpc);\n  return {\n    validators: function validators(request) {\n      return queryService.validators(request);\n    },\n    validator: function validator(request) {\n      return queryService.validator(request);\n    },\n    validatorDelegations: function validatorDelegations(request) {\n      return queryService.validatorDelegations(request);\n    },\n    validatorUnbondingDelegations: function validatorUnbondingDelegations(request) {\n      return queryService.validatorUnbondingDelegations(request);\n    },\n    delegation: function delegation(request) {\n      return queryService.delegation(request);\n    },\n    unbondingDelegation: function unbondingDelegation(request) {\n      return queryService.unbondingDelegation(request);\n    },\n    delegatorDelegations: function delegatorDelegations(request) {\n      return queryService.delegatorDelegations(request);\n    },\n    delegatorUnbondingDelegations: function delegatorUnbondingDelegations(request) {\n      return queryService.delegatorUnbondingDelegations(request);\n    },\n    redelegations: function redelegations(request) {\n      return queryService.redelegations(request);\n    },\n    delegatorValidators: function delegatorValidators(request) {\n      return queryService.delegatorValidators(request);\n    },\n    delegatorValidator: function delegatorValidator(request) {\n      return queryService.delegatorValidator(request);\n    },\n    historicalInfo: function historicalInfo(request) {\n      return queryService.historicalInfo(request);\n    },\n    pool: function pool(request) {\n      return queryService.pool(request);\n    },\n    params: function params(request) {\n      return queryService.params(request);\n    }\n  };\n};\nexports.createRpcQueryExtension = createRpcQueryExtension;","map":null,"metadata":{},"sourceType":"script"}