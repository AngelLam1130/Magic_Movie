{"ast":null,"code":"\"use strict\";\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ValidatorSlashEvents = exports.ValidatorSlashEvent = exports.ValidatorOutstandingRewards = exports.ValidatorHistoricalRewards = exports.ValidatorCurrentRewards = exports.ValidatorAccumulatedCommission = exports.Params = exports.FeePool = exports.DelegatorStartingInfo = exports.DelegationDelegatorReward = exports.CommunityPoolSpendProposalWithDeposit = exports.CommunityPoolSpendProposal = void 0;\nvar _coin = require(\"../../base/v1beta1/coin\");\nvar _helpers = require(\"../../../helpers\");\nvar _m0 = _interopRequireWildcard(require(\"protobufjs/minimal\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj[\"default\"] = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction createBaseParams() {\n  return {\n    communityTax: \"\",\n    baseProposerReward: \"\",\n    bonusProposerReward: \"\",\n    withdrawAddrEnabled: false\n  };\n}\nvar Params = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.communityTax !== \"\") {\n      writer.uint32(10).string(message.communityTax);\n    }\n    if (message.baseProposerReward !== \"\") {\n      writer.uint32(18).string(message.baseProposerReward);\n    }\n    if (message.bonusProposerReward !== \"\") {\n      writer.uint32(26).string(message.bonusProposerReward);\n    }\n    if (message.withdrawAddrEnabled === true) {\n      writer.uint32(32).bool(message.withdrawAddrEnabled);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseParams();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.communityTax = reader.string();\n          break;\n        case 2:\n          message.baseProposerReward = reader.string();\n          break;\n        case 3:\n          message.bonusProposerReward = reader.string();\n          break;\n        case 4:\n          message.withdrawAddrEnabled = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$communityTax, _object$baseProposerR, _object$bonusProposer, _object$withdrawAddrE;\n    var message = createBaseParams();\n    message.communityTax = (_object$communityTax = object.communityTax) !== null && _object$communityTax !== void 0 ? _object$communityTax : \"\";\n    message.baseProposerReward = (_object$baseProposerR = object.baseProposerReward) !== null && _object$baseProposerR !== void 0 ? _object$baseProposerR : \"\";\n    message.bonusProposerReward = (_object$bonusProposer = object.bonusProposerReward) !== null && _object$bonusProposer !== void 0 ? _object$bonusProposer : \"\";\n    message.withdrawAddrEnabled = (_object$withdrawAddrE = object.withdrawAddrEnabled) !== null && _object$withdrawAddrE !== void 0 ? _object$withdrawAddrE : false;\n    return message;\n  }\n};\nexports.Params = Params;\nfunction createBaseValidatorHistoricalRewards() {\n  return {\n    cumulativeRewardRatio: [],\n    referenceCount: 0\n  };\n}\nvar ValidatorHistoricalRewards = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    var _iterator = _createForOfIteratorHelper(message.cumulativeRewardRatio),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        _coin.DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    if (message.referenceCount !== 0) {\n      writer.uint32(16).uint32(message.referenceCount);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseValidatorHistoricalRewards();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.cumulativeRewardRatio.push(_coin.DecCoin.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.referenceCount = reader.uint32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$cumulativeRew, _object$referenceCoun;\n    var message = createBaseValidatorHistoricalRewards();\n    message.cumulativeRewardRatio = ((_object$cumulativeRew = object.cumulativeRewardRatio) === null || _object$cumulativeRew === void 0 ? void 0 : _object$cumulativeRew.map(function (e) {\n      return _coin.DecCoin.fromPartial(e);\n    })) || [];\n    message.referenceCount = (_object$referenceCoun = object.referenceCount) !== null && _object$referenceCoun !== void 0 ? _object$referenceCoun : 0;\n    return message;\n  }\n};\nexports.ValidatorHistoricalRewards = ValidatorHistoricalRewards;\nfunction createBaseValidatorCurrentRewards() {\n  return {\n    rewards: [],\n    period: _helpers.Long.UZERO\n  };\n}\nvar ValidatorCurrentRewards = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    var _iterator2 = _createForOfIteratorHelper(message.rewards),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var v = _step2.value;\n        _coin.DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    if (!message.period.isZero()) {\n      writer.uint32(16).uint64(message.period);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseValidatorCurrentRewards();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.rewards.push(_coin.DecCoin.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.period = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$rewards;\n    var message = createBaseValidatorCurrentRewards();\n    message.rewards = ((_object$rewards = object.rewards) === null || _object$rewards === void 0 ? void 0 : _object$rewards.map(function (e) {\n      return _coin.DecCoin.fromPartial(e);\n    })) || [];\n    message.period = object.period !== undefined && object.period !== null ? _helpers.Long.fromValue(object.period) : _helpers.Long.UZERO;\n    return message;\n  }\n};\nexports.ValidatorCurrentRewards = ValidatorCurrentRewards;\nfunction createBaseValidatorAccumulatedCommission() {\n  return {\n    commission: []\n  };\n}\nvar ValidatorAccumulatedCommission = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    var _iterator3 = _createForOfIteratorHelper(message.commission),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var v = _step3.value;\n        _coin.DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseValidatorAccumulatedCommission();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.commission.push(_coin.DecCoin.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$commission;\n    var message = createBaseValidatorAccumulatedCommission();\n    message.commission = ((_object$commission = object.commission) === null || _object$commission === void 0 ? void 0 : _object$commission.map(function (e) {\n      return _coin.DecCoin.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nexports.ValidatorAccumulatedCommission = ValidatorAccumulatedCommission;\nfunction createBaseValidatorOutstandingRewards() {\n  return {\n    rewards: []\n  };\n}\nvar ValidatorOutstandingRewards = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    var _iterator4 = _createForOfIteratorHelper(message.rewards),\n      _step4;\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var v = _step4.value;\n        _coin.DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseValidatorOutstandingRewards();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.rewards.push(_coin.DecCoin.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$rewards2;\n    var message = createBaseValidatorOutstandingRewards();\n    message.rewards = ((_object$rewards2 = object.rewards) === null || _object$rewards2 === void 0 ? void 0 : _object$rewards2.map(function (e) {\n      return _coin.DecCoin.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nexports.ValidatorOutstandingRewards = ValidatorOutstandingRewards;\nfunction createBaseValidatorSlashEvent() {\n  return {\n    validatorPeriod: _helpers.Long.UZERO,\n    fraction: \"\"\n  };\n}\nvar ValidatorSlashEvent = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (!message.validatorPeriod.isZero()) {\n      writer.uint32(8).uint64(message.validatorPeriod);\n    }\n    if (message.fraction !== \"\") {\n      writer.uint32(18).string(message.fraction);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseValidatorSlashEvent();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.validatorPeriod = reader.uint64();\n          break;\n        case 2:\n          message.fraction = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$fraction;\n    var message = createBaseValidatorSlashEvent();\n    message.validatorPeriod = object.validatorPeriod !== undefined && object.validatorPeriod !== null ? _helpers.Long.fromValue(object.validatorPeriod) : _helpers.Long.UZERO;\n    message.fraction = (_object$fraction = object.fraction) !== null && _object$fraction !== void 0 ? _object$fraction : \"\";\n    return message;\n  }\n};\nexports.ValidatorSlashEvent = ValidatorSlashEvent;\nfunction createBaseValidatorSlashEvents() {\n  return {\n    validatorSlashEvents: []\n  };\n}\nvar ValidatorSlashEvents = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    var _iterator5 = _createForOfIteratorHelper(message.validatorSlashEvents),\n      _step5;\n    try {\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        var v = _step5.value;\n        ValidatorSlashEvent.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseValidatorSlashEvents();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.validatorSlashEvents.push(ValidatorSlashEvent.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$validatorSlas;\n    var message = createBaseValidatorSlashEvents();\n    message.validatorSlashEvents = ((_object$validatorSlas = object.validatorSlashEvents) === null || _object$validatorSlas === void 0 ? void 0 : _object$validatorSlas.map(function (e) {\n      return ValidatorSlashEvent.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nexports.ValidatorSlashEvents = ValidatorSlashEvents;\nfunction createBaseFeePool() {\n  return {\n    communityPool: []\n  };\n}\nvar FeePool = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    var _iterator6 = _createForOfIteratorHelper(message.communityPool),\n      _step6;\n    try {\n      for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n        var v = _step6.value;\n        _coin.DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator6.e(err);\n    } finally {\n      _iterator6.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseFeePool();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.communityPool.push(_coin.DecCoin.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$communityPool;\n    var message = createBaseFeePool();\n    message.communityPool = ((_object$communityPool = object.communityPool) === null || _object$communityPool === void 0 ? void 0 : _object$communityPool.map(function (e) {\n      return _coin.DecCoin.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nexports.FeePool = FeePool;\nfunction createBaseCommunityPoolSpendProposal() {\n  return {\n    title: \"\",\n    description: \"\",\n    recipient: \"\",\n    amount: []\n  };\n}\nvar CommunityPoolSpendProposal = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.title !== \"\") {\n      writer.uint32(10).string(message.title);\n    }\n    if (message.description !== \"\") {\n      writer.uint32(18).string(message.description);\n    }\n    if (message.recipient !== \"\") {\n      writer.uint32(26).string(message.recipient);\n    }\n    var _iterator7 = _createForOfIteratorHelper(message.amount),\n      _step7;\n    try {\n      for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n        var v = _step7.value;\n        _coin.Coin.encode(v, writer.uint32(34).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator7.e(err);\n    } finally {\n      _iterator7.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseCommunityPoolSpendProposal();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.title = reader.string();\n          break;\n        case 2:\n          message.description = reader.string();\n          break;\n        case 3:\n          message.recipient = reader.string();\n          break;\n        case 4:\n          message.amount.push(_coin.Coin.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$title, _object$description, _object$recipient, _object$amount;\n    var message = createBaseCommunityPoolSpendProposal();\n    message.title = (_object$title = object.title) !== null && _object$title !== void 0 ? _object$title : \"\";\n    message.description = (_object$description = object.description) !== null && _object$description !== void 0 ? _object$description : \"\";\n    message.recipient = (_object$recipient = object.recipient) !== null && _object$recipient !== void 0 ? _object$recipient : \"\";\n    message.amount = ((_object$amount = object.amount) === null || _object$amount === void 0 ? void 0 : _object$amount.map(function (e) {\n      return _coin.Coin.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nexports.CommunityPoolSpendProposal = CommunityPoolSpendProposal;\nfunction createBaseDelegatorStartingInfo() {\n  return {\n    previousPeriod: _helpers.Long.UZERO,\n    stake: \"\",\n    height: _helpers.Long.UZERO\n  };\n}\nvar DelegatorStartingInfo = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (!message.previousPeriod.isZero()) {\n      writer.uint32(8).uint64(message.previousPeriod);\n    }\n    if (message.stake !== \"\") {\n      writer.uint32(18).string(message.stake);\n    }\n    if (!message.height.isZero()) {\n      writer.uint32(24).uint64(message.height);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseDelegatorStartingInfo();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.previousPeriod = reader.uint64();\n          break;\n        case 2:\n          message.stake = reader.string();\n          break;\n        case 3:\n          message.height = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$stake;\n    var message = createBaseDelegatorStartingInfo();\n    message.previousPeriod = object.previousPeriod !== undefined && object.previousPeriod !== null ? _helpers.Long.fromValue(object.previousPeriod) : _helpers.Long.UZERO;\n    message.stake = (_object$stake = object.stake) !== null && _object$stake !== void 0 ? _object$stake : \"\";\n    message.height = object.height !== undefined && object.height !== null ? _helpers.Long.fromValue(object.height) : _helpers.Long.UZERO;\n    return message;\n  }\n};\nexports.DelegatorStartingInfo = DelegatorStartingInfo;\nfunction createBaseDelegationDelegatorReward() {\n  return {\n    validatorAddress: \"\",\n    reward: []\n  };\n}\nvar DelegationDelegatorReward = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.validatorAddress !== \"\") {\n      writer.uint32(10).string(message.validatorAddress);\n    }\n    var _iterator8 = _createForOfIteratorHelper(message.reward),\n      _step8;\n    try {\n      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n        var v = _step8.value;\n        _coin.DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator8.e(err);\n    } finally {\n      _iterator8.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseDelegationDelegatorReward();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.validatorAddress = reader.string();\n          break;\n        case 2:\n          message.reward.push(_coin.DecCoin.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$validatorAddr, _object$reward;\n    var message = createBaseDelegationDelegatorReward();\n    message.validatorAddress = (_object$validatorAddr = object.validatorAddress) !== null && _object$validatorAddr !== void 0 ? _object$validatorAddr : \"\";\n    message.reward = ((_object$reward = object.reward) === null || _object$reward === void 0 ? void 0 : _object$reward.map(function (e) {\n      return _coin.DecCoin.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nexports.DelegationDelegatorReward = DelegationDelegatorReward;\nfunction createBaseCommunityPoolSpendProposalWithDeposit() {\n  return {\n    title: \"\",\n    description: \"\",\n    recipient: \"\",\n    amount: \"\",\n    deposit: \"\"\n  };\n}\nvar CommunityPoolSpendProposalWithDeposit = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.title !== \"\") {\n      writer.uint32(10).string(message.title);\n    }\n    if (message.description !== \"\") {\n      writer.uint32(18).string(message.description);\n    }\n    if (message.recipient !== \"\") {\n      writer.uint32(26).string(message.recipient);\n    }\n    if (message.amount !== \"\") {\n      writer.uint32(34).string(message.amount);\n    }\n    if (message.deposit !== \"\") {\n      writer.uint32(42).string(message.deposit);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseCommunityPoolSpendProposalWithDeposit();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.title = reader.string();\n          break;\n        case 2:\n          message.description = reader.string();\n          break;\n        case 3:\n          message.recipient = reader.string();\n          break;\n        case 4:\n          message.amount = reader.string();\n          break;\n        case 5:\n          message.deposit = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$title2, _object$description2, _object$recipient2, _object$amount2, _object$deposit;\n    var message = createBaseCommunityPoolSpendProposalWithDeposit();\n    message.title = (_object$title2 = object.title) !== null && _object$title2 !== void 0 ? _object$title2 : \"\";\n    message.description = (_object$description2 = object.description) !== null && _object$description2 !== void 0 ? _object$description2 : \"\";\n    message.recipient = (_object$recipient2 = object.recipient) !== null && _object$recipient2 !== void 0 ? _object$recipient2 : \"\";\n    message.amount = (_object$amount2 = object.amount) !== null && _object$amount2 !== void 0 ? _object$amount2 : \"\";\n    message.deposit = (_object$deposit = object.deposit) !== null && _object$deposit !== void 0 ? _object$deposit : \"\";\n    return message;\n  }\n};\nexports.CommunityPoolSpendProposalWithDeposit = CommunityPoolSpendProposalWithDeposit;","map":null,"metadata":{},"sourceType":"script"}