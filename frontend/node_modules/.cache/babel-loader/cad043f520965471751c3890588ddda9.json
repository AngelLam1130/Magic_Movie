{"ast":null,"code":"var _jsxFileName = \"/Users/linanqi/Hackathon/Magic-Movie/frontend/src/components/Home.js\",\n  _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from 'react';\nimport React from 'react';\nimport { useCosmWasmClient, useSigningCosmWasmClient, useWallet, WalletConnectButton } from '@sei-js/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CONTRACT_ADDRESS = 'sei18g4g35mhy5s88nshpa6flvpj9ex6u88l6mhjmzjchnrfa7xr00js0gswru'; // (atlantic-2 example) sei18g4g35mhy5s88nshpa6flvpj9ex6u88l6mhjmzjchnrfa7xr00js0gswru\n\nfunction Home() {\n  _s();\n  const [count, setCount] = useState(2);\n  const [error, setError] = useState('');\n  const [isIncrementing, setIsIncrementing] = useState(false);\n\n  // Helpful hook for getting the currently connected wallet and chain info\n  const {\n    connectedWallet,\n    accounts\n  } = useWallet();\n\n  // For querying cosmwasm smart contracts\n  const {\n    cosmWasmClient: queryClient\n  } = useCosmWasmClient();\n\n  // For executing messages on cosmwasm smart contracts\n  const {\n    signingCosmWasmClient: signingClient\n  } = useSigningCosmWasmClient();\n  const fetchCount = useCallback(async () => {\n    console.log(queryClient);\n    const response = await (queryClient === null || queryClient === void 0 ? void 0 : queryClient.queryContractSmart(CONTRACT_ADDRESS, {\n      get_count: {}\n    }));\n    return response === null || response === void 0 ? void 0 : response.count;\n  }, [queryClient]);\n  useEffect(() => {\n    fetchCount().then(setCount);\n  }, [connectedWallet, fetchCount]);\n  const incrementCounter = async () => {\n    setIsIncrementing(true);\n    try {\n      const senderAddress = accounts[0].address;\n\n      // Build message content\n      const msg = {\n        increment: {}\n      };\n\n      // Define gas price and limit\n      const fee = {\n        amount: [{\n          amount: '0.1',\n          denom: 'usei'\n        }],\n        gas: '200000'\n      };\n\n      // Call smart contract execute msg\n      await (signingClient === null || signingClient === void 0 ? void 0 : signingClient.execute(senderAddress, CONTRACT_ADDRESS, msg, fee));\n\n      // Updates the counter state again\n      const updatedCount = await fetchCount();\n      setCount(updatedCount);\n      setIsIncrementing(false);\n      setError('');\n    } catch (error) {\n      if (error instanceof Error) {\n        setError(error.message);\n      } else {\n        setError('unknown error');\n      }\n      setIsIncrementing(false);\n    }\n  };\n\n  // Helpful component for wallet connection\n  if (!connectedWallet) return /*#__PURE__*/_jsxDEV(WalletConnectButton, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 31\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Count is: \", count ? count : '---']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: isIncrementing,\n      onClick: incrementCounter,\n      children: isIncrementing ? 'incrementing...' : 'increment'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 3\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 6\n  }, this);\n}\n_s(Home, \"3VMBPXNb+EquB2ERZ1KVhAvRz64=\", false, function () {\n  return [useWallet, useCosmWasmClient, useSigningCosmWasmClient];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useCallback","useEffect","useState","React","useCosmWasmClient","useSigningCosmWasmClient","useWallet","WalletConnectButton","jsxDEV","_jsxDEV","CONTRACT_ADDRESS","Home","_s","count","setCount","error","setError","isIncrementing","setIsIncrementing","connectedWallet","accounts","cosmWasmClient","queryClient","signingCosmWasmClient","signingClient","fetchCount","console","log","response","queryContractSmart","get_count","then","incrementCounter","senderAddress","address","msg","increment","fee","amount","denom","gas","execute","updatedCount","Error","message","fileName","_jsxFileName","lineNumber","columnNumber","children","disabled","onClick","style","color","_c","$RefreshReg$"],"sources":["/Users/linanqi/Hackathon/Magic-Movie/frontend/src/components/Home.js"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport React from 'react'\nimport { useCosmWasmClient, useSigningCosmWasmClient, useWallet, WalletConnectButton } from '@sei-js/react';\n\nconst CONTRACT_ADDRESS = 'sei18g4g35mhy5s88nshpa6flvpj9ex6u88l6mhjmzjchnrfa7xr00js0gswru'; // (atlantic-2 example) sei18g4g35mhy5s88nshpa6flvpj9ex6u88l6mhjmzjchnrfa7xr00js0gswru\n\nfunction Home() {\n\tconst [count, setCount] = useState(2);\n\tconst [error, setError] = useState('');\n\tconst [isIncrementing, setIsIncrementing] = useState(false);\n\n\t// Helpful hook for getting the currently connected wallet and chain info\n\tconst { connectedWallet, accounts } = useWallet();\n\n\t// For querying cosmwasm smart contracts\n\tconst { cosmWasmClient: queryClient } = useCosmWasmClient();\n\t\n\t// For executing messages on cosmwasm smart contracts\n\tconst { signingCosmWasmClient: signingClient } = useSigningCosmWasmClient();\n\n\tconst fetchCount = useCallback(async () => {\n\t\tconsole.log(queryClient);\n\t    const response = await queryClient?.queryContractSmart(CONTRACT_ADDRESS, { get_count: {} });\n\t    return response?.count;\n\t}, [queryClient]);\n\n\tuseEffect(() => {\n\t    fetchCount().then(setCount);\n\t}, [connectedWallet, fetchCount]);\n\n\tconst incrementCounter = async () => {\n\t    setIsIncrementing(true);\n\t\ttry {\n\t\t    const senderAddress = accounts[0].address;\n\n\t\t    // Build message content\n\t\t    const msg = { increment: {} };\n\t\t\t\n\t\t   // Define gas price and limit\n\t\t    const fee = {\n\t\t\tamount: [{ amount: '0.1', denom: 'usei' }],\n\t\t\tgas: '200000'\n\t\t    };\n\n\t\t    // Call smart contract execute msg\n\t\t    await signingClient?.execute(senderAddress, CONTRACT_ADDRESS, msg, fee);\n\n\t\t    // Updates the counter state again\n\t\t    const updatedCount = await fetchCount();\n\t\t    setCount(updatedCount);\n\t\t\n\t\t    setIsIncrementing(false);\n\t\t    setError('');\n\t\t} catch (error) {\n\t\t    if (error instanceof Error) {\n\t\t\tsetError(error.message);\n\t\t    } else {\n\t\t\tsetError('unknown error');\n\t\t    }\n\t\t    setIsIncrementing(false);\n\t\t}\n\t};\n\n\t// Helpful component for wallet connection\n\tif (!connectedWallet) return <WalletConnectButton />;\n\n\treturn (\n\t    <div>\n\t\t<h1>Count is: {count ? count : '---'}</h1>\n\t\t<button disabled={isIncrementing} onClick={incrementCounter}>\n\t\t    {isIncrementing ? 'incrementing...' : 'increment'}\n\t\t</button>\n\t\t{error && <p style={{ color: 'red' }}>{error}</p>}\n\t    </div>\n\t);\n}\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}