{"ast":null,"code":"\"use strict\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Grant = exports.AllowedMsgAllowance = exports.PeriodicAllowance = exports.BasicAllowance = exports.protobufPackage = void 0;\n/* eslint-disable */\nvar long_1 = __importDefault(require(\"long\"));\nvar minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nvar any_1 = require(\"../../../google/protobuf/any\");\nvar duration_1 = require(\"../../../google/protobuf/duration\");\nvar timestamp_1 = require(\"../../../google/protobuf/timestamp\");\nvar coin_1 = require(\"../../base/v1beta1/coin\");\nexports.protobufPackage = \"cosmos.feegrant.v1beta1\";\nfunction createBaseBasicAllowance() {\n  return {\n    spendLimit: [],\n    expiration: undefined\n  };\n}\nexports.BasicAllowance = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    var _iterator = _createForOfIteratorHelper(message.spendLimit),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    if (message.expiration !== undefined) {\n      timestamp_1.Timestamp.encode(message.expiration, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseBasicAllowance();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.spendLimit.push(coin_1.Coin.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.expiration = timestamp_1.Timestamp.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      spendLimit: Array.isArray(object === null || object === void 0 ? void 0 : object.spendLimit) ? object.spendLimit.map(function (e) {\n        return coin_1.Coin.fromJSON(e);\n      }) : [],\n      expiration: isSet(object.expiration) ? fromJsonTimestamp(object.expiration) : undefined\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    if (message.spendLimit) {\n      obj.spendLimit = message.spendLimit.map(function (e) {\n        return e ? coin_1.Coin.toJSON(e) : undefined;\n      });\n    } else {\n      obj.spendLimit = [];\n    }\n    message.expiration !== undefined && (obj.expiration = fromTimestamp(message.expiration).toISOString());\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseBasicAllowance();\n    message.spendLimit = ((_a = object.spendLimit) === null || _a === void 0 ? void 0 : _a.map(function (e) {\n      return coin_1.Coin.fromPartial(e);\n    })) || [];\n    message.expiration = object.expiration !== undefined && object.expiration !== null ? timestamp_1.Timestamp.fromPartial(object.expiration) : undefined;\n    return message;\n  }\n};\nfunction createBasePeriodicAllowance() {\n  return {\n    basic: undefined,\n    period: undefined,\n    periodSpendLimit: [],\n    periodCanSpend: [],\n    periodReset: undefined\n  };\n}\nexports.PeriodicAllowance = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.basic !== undefined) {\n      exports.BasicAllowance.encode(message.basic, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.period !== undefined) {\n      duration_1.Duration.encode(message.period, writer.uint32(18).fork()).ldelim();\n    }\n    var _iterator2 = _createForOfIteratorHelper(message.periodSpendLimit),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var v = _step2.value;\n        coin_1.Coin.encode(v, writer.uint32(26).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    var _iterator3 = _createForOfIteratorHelper(message.periodCanSpend),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var _v = _step3.value;\n        coin_1.Coin.encode(_v, writer.uint32(34).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    if (message.periodReset !== undefined) {\n      timestamp_1.Timestamp.encode(message.periodReset, writer.uint32(42).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBasePeriodicAllowance();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.basic = exports.BasicAllowance.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.period = duration_1.Duration.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.periodSpendLimit.push(coin_1.Coin.decode(reader, reader.uint32()));\n          break;\n        case 4:\n          message.periodCanSpend.push(coin_1.Coin.decode(reader, reader.uint32()));\n          break;\n        case 5:\n          message.periodReset = timestamp_1.Timestamp.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      basic: isSet(object.basic) ? exports.BasicAllowance.fromJSON(object.basic) : undefined,\n      period: isSet(object.period) ? duration_1.Duration.fromJSON(object.period) : undefined,\n      periodSpendLimit: Array.isArray(object === null || object === void 0 ? void 0 : object.periodSpendLimit) ? object.periodSpendLimit.map(function (e) {\n        return coin_1.Coin.fromJSON(e);\n      }) : [],\n      periodCanSpend: Array.isArray(object === null || object === void 0 ? void 0 : object.periodCanSpend) ? object.periodCanSpend.map(function (e) {\n        return coin_1.Coin.fromJSON(e);\n      }) : [],\n      periodReset: isSet(object.periodReset) ? fromJsonTimestamp(object.periodReset) : undefined\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.basic !== undefined && (obj.basic = message.basic ? exports.BasicAllowance.toJSON(message.basic) : undefined);\n    message.period !== undefined && (obj.period = message.period ? duration_1.Duration.toJSON(message.period) : undefined);\n    if (message.periodSpendLimit) {\n      obj.periodSpendLimit = message.periodSpendLimit.map(function (e) {\n        return e ? coin_1.Coin.toJSON(e) : undefined;\n      });\n    } else {\n      obj.periodSpendLimit = [];\n    }\n    if (message.periodCanSpend) {\n      obj.periodCanSpend = message.periodCanSpend.map(function (e) {\n        return e ? coin_1.Coin.toJSON(e) : undefined;\n      });\n    } else {\n      obj.periodCanSpend = [];\n    }\n    message.periodReset !== undefined && (obj.periodReset = fromTimestamp(message.periodReset).toISOString());\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b;\n    var message = createBasePeriodicAllowance();\n    message.basic = object.basic !== undefined && object.basic !== null ? exports.BasicAllowance.fromPartial(object.basic) : undefined;\n    message.period = object.period !== undefined && object.period !== null ? duration_1.Duration.fromPartial(object.period) : undefined;\n    message.periodSpendLimit = ((_a = object.periodSpendLimit) === null || _a === void 0 ? void 0 : _a.map(function (e) {\n      return coin_1.Coin.fromPartial(e);\n    })) || [];\n    message.periodCanSpend = ((_b = object.periodCanSpend) === null || _b === void 0 ? void 0 : _b.map(function (e) {\n      return coin_1.Coin.fromPartial(e);\n    })) || [];\n    message.periodReset = object.periodReset !== undefined && object.periodReset !== null ? timestamp_1.Timestamp.fromPartial(object.periodReset) : undefined;\n    return message;\n  }\n};\nfunction createBaseAllowedMsgAllowance() {\n  return {\n    allowance: undefined,\n    allowedMessages: []\n  };\n}\nexports.AllowedMsgAllowance = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.allowance !== undefined) {\n      any_1.Any.encode(message.allowance, writer.uint32(10).fork()).ldelim();\n    }\n    var _iterator4 = _createForOfIteratorHelper(message.allowedMessages),\n      _step4;\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var v = _step4.value;\n        writer.uint32(18).string(v);\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseAllowedMsgAllowance();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.allowance = any_1.Any.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.allowedMessages.push(reader.string());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      allowance: isSet(object.allowance) ? any_1.Any.fromJSON(object.allowance) : undefined,\n      allowedMessages: Array.isArray(object === null || object === void 0 ? void 0 : object.allowedMessages) ? object.allowedMessages.map(function (e) {\n        return String(e);\n      }) : []\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.allowance !== undefined && (obj.allowance = message.allowance ? any_1.Any.toJSON(message.allowance) : undefined);\n    if (message.allowedMessages) {\n      obj.allowedMessages = message.allowedMessages.map(function (e) {\n        return e;\n      });\n    } else {\n      obj.allowedMessages = [];\n    }\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseAllowedMsgAllowance();\n    message.allowance = object.allowance !== undefined && object.allowance !== null ? any_1.Any.fromPartial(object.allowance) : undefined;\n    message.allowedMessages = ((_a = object.allowedMessages) === null || _a === void 0 ? void 0 : _a.map(function (e) {\n      return e;\n    })) || [];\n    return message;\n  }\n};\nfunction createBaseGrant() {\n  return {\n    granter: \"\",\n    grantee: \"\",\n    allowance: undefined\n  };\n}\nexports.Grant = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.granter !== \"\") {\n      writer.uint32(10).string(message.granter);\n    }\n    if (message.grantee !== \"\") {\n      writer.uint32(18).string(message.grantee);\n    }\n    if (message.allowance !== undefined) {\n      any_1.Any.encode(message.allowance, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseGrant();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.granter = reader.string();\n          break;\n        case 2:\n          message.grantee = reader.string();\n          break;\n        case 3:\n          message.allowance = any_1.Any.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      granter: isSet(object.granter) ? String(object.granter) : \"\",\n      grantee: isSet(object.grantee) ? String(object.grantee) : \"\",\n      allowance: isSet(object.allowance) ? any_1.Any.fromJSON(object.allowance) : undefined\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.granter !== undefined && (obj.granter = message.granter);\n    message.grantee !== undefined && (obj.grantee = message.grantee);\n    message.allowance !== undefined && (obj.allowance = message.allowance ? any_1.Any.toJSON(message.allowance) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b;\n    var message = createBaseGrant();\n    message.granter = (_a = object.granter) !== null && _a !== void 0 ? _a : \"\";\n    message.grantee = (_b = object.grantee) !== null && _b !== void 0 ? _b : \"\";\n    message.allowance = object.allowance !== undefined && object.allowance !== null ? any_1.Any.fromPartial(object.allowance) : undefined;\n    return message;\n  }\n};\nfunction toTimestamp(date) {\n  var seconds = numberToLong(date.getTime() / 1000);\n  var nanos = date.getTime() % 1000 * 1000000;\n  return {\n    seconds: seconds,\n    nanos: nanos\n  };\n}\nfunction fromTimestamp(t) {\n  var millis = t.seconds.toNumber() * 1000;\n  millis += t.nanos / 1000000;\n  return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n  if (o instanceof Date) {\n    return toTimestamp(o);\n  } else if (typeof o === \"string\") {\n    return toTimestamp(new Date(o));\n  } else {\n    return timestamp_1.Timestamp.fromJSON(o);\n  }\n}\nfunction numberToLong(number) {\n  return long_1.default.fromNumber(number);\n}\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}\nfunction isSet(value) {\n  return value !== null && value !== undefined;\n}","map":null,"metadata":{},"sourceType":"script"}