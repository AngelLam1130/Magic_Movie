{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/linanqi/Hackathon/GameRoom/frontend/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/Users/linanqi/Hackathon/GameRoom/frontend/node_modules/@babel/runtime/helpers/createClass\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sha512 = exports.Sha512 = exports.sha256 = exports.Sha256 = void 0;\nvar sha256_1 = require(\"@noble/hashes/sha256\");\nvar sha512_1 = require(\"@noble/hashes/sha512\");\nvar utils_1 = require(\"./utils\");\nvar Sha256 = /*#__PURE__*/function () {\n  function Sha256(firstData) {\n    _classCallCheck(this, Sha256);\n    this.blockSize = 512 / 8;\n    this.impl = sha256_1.sha256.create();\n    if (firstData) {\n      this.update(firstData);\n    }\n  }\n  _createClass(Sha256, [{\n    key: \"update\",\n    value: function update(data) {\n      this.impl.update((0, utils_1.toRealUint8Array)(data));\n      return this;\n    }\n  }, {\n    key: \"digest\",\n    value: function digest() {\n      return this.impl.digest();\n    }\n  }]);\n  return Sha256;\n}();\nexports.Sha256 = Sha256;\n/** Convenience function equivalent to `new Sha256(data).digest()` */\nfunction sha256(data) {\n  return new Sha256(data).digest();\n}\nexports.sha256 = sha256;\nvar Sha512 = /*#__PURE__*/function () {\n  function Sha512(firstData) {\n    _classCallCheck(this, Sha512);\n    this.blockSize = 1024 / 8;\n    this.impl = sha512_1.sha512.create();\n    if (firstData) {\n      this.update(firstData);\n    }\n  }\n  _createClass(Sha512, [{\n    key: \"update\",\n    value: function update(data) {\n      this.impl.update((0, utils_1.toRealUint8Array)(data));\n      return this;\n    }\n  }, {\n    key: \"digest\",\n    value: function digest() {\n      return this.impl.digest();\n    }\n  }]);\n  return Sha512;\n}();\nexports.Sha512 = Sha512;\n/** Convenience function equivalent to `new Sha512(data).digest()` */\nfunction sha512(data) {\n  return new Sha512(data).digest();\n}\nexports.sha512 = sha512;","map":null,"metadata":{},"sourceType":"script"}