{"ast":null,"code":"import _slicedToArray from \"/Users/linanqi/Hackathon/RKA-808/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/linanqi/Hackathon/RKA-808/frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport ToolBar from './components/Toolbar';\nimport UploadedMusic from './components/UploadedMusic';\nimport Steps from './components/Steps';\nimport TrackList from './components/TrackList';\nimport PlayHead from './components/PlayHead';\nimport { Provider } from './hooks/useStore';\nimport useTimer from './hooks/useTimer';\nimport useStyles from './hooks/useStyles';\nimport './App.css';\n\nfunction App() {\n  const baseBPMPerOneSecond = 60;\n  const stepsPerBar = 8;\n  const beatsPerBar = 4;\n  const barsPerSequence = 2;\n  const totalSteps = stepsPerBar * barsPerSequence;\n  const totalBeats = beatsPerBar * barsPerSequence;\n\n  const _useState = useState(120),\n        _useState2 = _slicedToArray(_useState, 2),\n        BPM = _useState2[0],\n        setBPM = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        startTime = _useState4[0],\n        setStartTime = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        pastLapsedTime = _useState6[0],\n        setPastLapse = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        currentStepID = _useState8[0],\n        setCurrentStep = _useState8[1];\n\n  const _useStyles = useStyles(totalSteps),\n        _useStyles2 = _slicedToArray(_useStyles, 1),\n        getNotesAreaWidthInPixels = _useStyles2[0];\n\n  const notesAreaWidthInPixels = getNotesAreaWidthInPixels(totalSteps);\n  const timePerSequence = baseBPMPerOneSecond / BPM * 1000 * totalBeats;\n  const timePerStep = timePerSequence / totalSteps;\n  const isSequencePlaying = startTime !== null;\n  const playerTime = useTimer(isSequencePlaying);\n  const lapsedTime = isSequencePlaying ? Math.max(0, playerTime - startTime) : 0;\n  const totalLapsedTime = pastLapsedTime + lapsedTime;\n  useEffect(() => {\n    if (isSequencePlaying) {\n      setCurrentStep(Math.floor(totalLapsedTime / timePerStep) % totalSteps);\n    } else {\n      setCurrentStep(null);\n    }\n  }, [isSequencePlaying, timePerStep, totalLapsedTime, totalSteps]);\n  const toolBarProps = {\n    setStartTime,\n    setPastLapse,\n    setBPM,\n    isSequencePlaying,\n    startTime,\n    BPM\n  };\n  const playHeadProps = {\n    notesAreaWidthInPixels,\n    timePerSequence,\n    totalLapsedTime\n  };\n  const trackListProps = {\n    currentStepID\n  };\n  const uploadedMusicProps = {// setStartTime,\n    // setPastLapse,\n    // setBPM,\n    // isSequencePlaying,\n    // startTime,\n    // BPM\n    //need to be changed\n  };\n  return React.createElement(Provider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"main\", {\n    className: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"app_header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"app_title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"R.A.C.K.\"), React.createElement(\"h3\", {\n    className: \"app_title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Customize Your Own Music\")), React.createElement(\"div\", {\n    className: \"app_content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(UploadedMusic, Object.assign({}, uploadedMusicProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }))), React.createElement(\"footer\", {\n    className: \"app_footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/linanqi/Hackathon/RKA-808/frontend/src/App.js"],"names":["React","useState","useEffect","ToolBar","UploadedMusic","Steps","TrackList","PlayHead","Provider","useTimer","useStyles","App","baseBPMPerOneSecond","stepsPerBar","beatsPerBar","barsPerSequence","totalSteps","totalBeats","BPM","setBPM","startTime","setStartTime","pastLapsedTime","setPastLapse","currentStepID","setCurrentStep","getNotesAreaWidthInPixels","notesAreaWidthInPixels","timePerSequence","timePerStep","isSequencePlaying","playerTime","lapsedTime","Math","max","totalLapsedTime","floor","toolBarProps","playHeadProps","trackListProps","uploadedMusicProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport ToolBar from './components/Toolbar'\nimport UploadedMusic from './components/UploadedMusic'\nimport Steps from './components/Steps'\nimport TrackList from './components/TrackList'\nimport PlayHead from './components/PlayHead'\nimport { Provider } from './hooks/useStore'\nimport useTimer from './hooks/useTimer'\nimport useStyles from './hooks/useStyles'\nimport './App.css'\n\nfunction App() {\n\n    const baseBPMPerOneSecond = 60\n    const stepsPerBar = 8\n    const beatsPerBar = 4\n    const barsPerSequence = 2\n    const totalSteps = stepsPerBar * barsPerSequence\n    const totalBeats = beatsPerBar * barsPerSequence\n\n    const [BPM, setBPM] = useState(120)\n    const [startTime, setStartTime] = useState(null)\n    const [pastLapsedTime, setPastLapse] = useState(0)\n    const [currentStepID, setCurrentStep] = useState(null)\n    const [getNotesAreaWidthInPixels] = useStyles(totalSteps)\n\n    const notesAreaWidthInPixels = getNotesAreaWidthInPixels(totalSteps)\n    const timePerSequence = baseBPMPerOneSecond / BPM * 1000 * totalBeats\n    const timePerStep = timePerSequence / totalSteps\n    const isSequencePlaying = startTime !== null\n    const playerTime = useTimer(isSequencePlaying)\n    const lapsedTime = isSequencePlaying ? Math.max(0, playerTime - startTime) : 0\n    const totalLapsedTime = pastLapsedTime + lapsedTime\n\n    useEffect(() => {\n        if (isSequencePlaying) {\n            setCurrentStep(Math.floor(totalLapsedTime / timePerStep) % totalSteps)\n        } else {\n            setCurrentStep(null)\n        }\n    }, [isSequencePlaying, timePerStep, totalLapsedTime, totalSteps])\n\n    const toolBarProps = {\n        setStartTime,\n        setPastLapse,\n        setBPM,\n        isSequencePlaying,\n        startTime,\n        BPM\n    }\n\n    const playHeadProps = {\n        notesAreaWidthInPixels,\n        timePerSequence,\n        totalLapsedTime\n    }\n\n    const trackListProps = {\n        currentStepID\n    }\n\n    const uploadedMusicProps = {\n        // setStartTime,\n        // setPastLapse,\n        // setBPM,\n        // isSequencePlaying,\n        // startTime,\n        // BPM\n        //need to be changed\n    }\n\n    return (\n        <Provider>\n            <main className=\"app\">\n                <header className=\"app_header\">\n                    <h1 className=\"app_title\">R.A.C.K.</h1>\n                    <h3 className=\"app_title\">Customize Your Own Music</h3>\n                    {/* <ToolBar {...toolBarProps} /> */}\n                </header>\n                {/* <Steps count={totalSteps} /> */}\n                <div className=\"app_content\">\n                    {/* <PlayHead {...playHeadProps} />\n                    <TrackList {...trackListProps} /> */}\n                    <UploadedMusic {...uploadedMusicProps} />\n                </div>\n                <footer className=\"app_footer\">\n                </footer>\n            </main >\n        </Provider>\n    )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}