{"ast":null,"code":"\"use strict\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Fraction = exports.Header = exports.Misbehaviour = exports.ConsensusState = exports.ClientState = exports.protobufPackage = void 0;\n/* eslint-disable */\nvar long_1 = __importDefault(require(\"long\"));\nvar minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nvar proofs_1 = require(\"../../../../confio/proofs\");\nvar duration_1 = require(\"../../../../google/protobuf/duration\");\nvar timestamp_1 = require(\"../../../../google/protobuf/timestamp\");\nvar types_1 = require(\"../../../../tendermint/types/types\");\nvar validator_1 = require(\"../../../../tendermint/types/validator\");\nvar client_1 = require(\"../../../core/client/v1/client\");\nvar commitment_1 = require(\"../../../core/commitment/v1/commitment\");\nexports.protobufPackage = \"ibc.lightclients.tendermint.v1\";\nfunction createBaseClientState() {\n  return {\n    chainId: \"\",\n    trustLevel: undefined,\n    trustingPeriod: undefined,\n    unbondingPeriod: undefined,\n    maxClockDrift: undefined,\n    frozenHeight: undefined,\n    latestHeight: undefined,\n    proofSpecs: [],\n    upgradePath: [],\n    allowUpdateAfterExpiry: false,\n    allowUpdateAfterMisbehaviour: false\n  };\n}\nexports.ClientState = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.chainId !== \"\") {\n      writer.uint32(10).string(message.chainId);\n    }\n    if (message.trustLevel !== undefined) {\n      exports.Fraction.encode(message.trustLevel, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.trustingPeriod !== undefined) {\n      duration_1.Duration.encode(message.trustingPeriod, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.unbondingPeriod !== undefined) {\n      duration_1.Duration.encode(message.unbondingPeriod, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.maxClockDrift !== undefined) {\n      duration_1.Duration.encode(message.maxClockDrift, writer.uint32(42).fork()).ldelim();\n    }\n    if (message.frozenHeight !== undefined) {\n      client_1.Height.encode(message.frozenHeight, writer.uint32(50).fork()).ldelim();\n    }\n    if (message.latestHeight !== undefined) {\n      client_1.Height.encode(message.latestHeight, writer.uint32(58).fork()).ldelim();\n    }\n    var _iterator = _createForOfIteratorHelper(message.proofSpecs),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        proofs_1.ProofSpec.encode(v, writer.uint32(66).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    var _iterator2 = _createForOfIteratorHelper(message.upgradePath),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _v = _step2.value;\n        writer.uint32(74).string(_v);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    if (message.allowUpdateAfterExpiry === true) {\n      writer.uint32(80).bool(message.allowUpdateAfterExpiry);\n    }\n    if (message.allowUpdateAfterMisbehaviour === true) {\n      writer.uint32(88).bool(message.allowUpdateAfterMisbehaviour);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseClientState();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.chainId = reader.string();\n          break;\n        case 2:\n          message.trustLevel = exports.Fraction.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.trustingPeriod = duration_1.Duration.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.unbondingPeriod = duration_1.Duration.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.maxClockDrift = duration_1.Duration.decode(reader, reader.uint32());\n          break;\n        case 6:\n          message.frozenHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        case 7:\n          message.latestHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        case 8:\n          message.proofSpecs.push(proofs_1.ProofSpec.decode(reader, reader.uint32()));\n          break;\n        case 9:\n          message.upgradePath.push(reader.string());\n          break;\n        case 10:\n          message.allowUpdateAfterExpiry = reader.bool();\n          break;\n        case 11:\n          message.allowUpdateAfterMisbehaviour = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      chainId: isSet(object.chainId) ? String(object.chainId) : \"\",\n      trustLevel: isSet(object.trustLevel) ? exports.Fraction.fromJSON(object.trustLevel) : undefined,\n      trustingPeriod: isSet(object.trustingPeriod) ? duration_1.Duration.fromJSON(object.trustingPeriod) : undefined,\n      unbondingPeriod: isSet(object.unbondingPeriod) ? duration_1.Duration.fromJSON(object.unbondingPeriod) : undefined,\n      maxClockDrift: isSet(object.maxClockDrift) ? duration_1.Duration.fromJSON(object.maxClockDrift) : undefined,\n      frozenHeight: isSet(object.frozenHeight) ? client_1.Height.fromJSON(object.frozenHeight) : undefined,\n      latestHeight: isSet(object.latestHeight) ? client_1.Height.fromJSON(object.latestHeight) : undefined,\n      proofSpecs: Array.isArray(object === null || object === void 0 ? void 0 : object.proofSpecs) ? object.proofSpecs.map(function (e) {\n        return proofs_1.ProofSpec.fromJSON(e);\n      }) : [],\n      upgradePath: Array.isArray(object === null || object === void 0 ? void 0 : object.upgradePath) ? object.upgradePath.map(function (e) {\n        return String(e);\n      }) : [],\n      allowUpdateAfterExpiry: isSet(object.allowUpdateAfterExpiry) ? Boolean(object.allowUpdateAfterExpiry) : false,\n      allowUpdateAfterMisbehaviour: isSet(object.allowUpdateAfterMisbehaviour) ? Boolean(object.allowUpdateAfterMisbehaviour) : false\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.chainId !== undefined && (obj.chainId = message.chainId);\n    message.trustLevel !== undefined && (obj.trustLevel = message.trustLevel ? exports.Fraction.toJSON(message.trustLevel) : undefined);\n    message.trustingPeriod !== undefined && (obj.trustingPeriod = message.trustingPeriod ? duration_1.Duration.toJSON(message.trustingPeriod) : undefined);\n    message.unbondingPeriod !== undefined && (obj.unbondingPeriod = message.unbondingPeriod ? duration_1.Duration.toJSON(message.unbondingPeriod) : undefined);\n    message.maxClockDrift !== undefined && (obj.maxClockDrift = message.maxClockDrift ? duration_1.Duration.toJSON(message.maxClockDrift) : undefined);\n    message.frozenHeight !== undefined && (obj.frozenHeight = message.frozenHeight ? client_1.Height.toJSON(message.frozenHeight) : undefined);\n    message.latestHeight !== undefined && (obj.latestHeight = message.latestHeight ? client_1.Height.toJSON(message.latestHeight) : undefined);\n    if (message.proofSpecs) {\n      obj.proofSpecs = message.proofSpecs.map(function (e) {\n        return e ? proofs_1.ProofSpec.toJSON(e) : undefined;\n      });\n    } else {\n      obj.proofSpecs = [];\n    }\n    if (message.upgradePath) {\n      obj.upgradePath = message.upgradePath.map(function (e) {\n        return e;\n      });\n    } else {\n      obj.upgradePath = [];\n    }\n    message.allowUpdateAfterExpiry !== undefined && (obj.allowUpdateAfterExpiry = message.allowUpdateAfterExpiry);\n    message.allowUpdateAfterMisbehaviour !== undefined && (obj.allowUpdateAfterMisbehaviour = message.allowUpdateAfterMisbehaviour);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c, _d, _e;\n    var message = createBaseClientState();\n    message.chainId = (_a = object.chainId) !== null && _a !== void 0 ? _a : \"\";\n    message.trustLevel = object.trustLevel !== undefined && object.trustLevel !== null ? exports.Fraction.fromPartial(object.trustLevel) : undefined;\n    message.trustingPeriod = object.trustingPeriod !== undefined && object.trustingPeriod !== null ? duration_1.Duration.fromPartial(object.trustingPeriod) : undefined;\n    message.unbondingPeriod = object.unbondingPeriod !== undefined && object.unbondingPeriod !== null ? duration_1.Duration.fromPartial(object.unbondingPeriod) : undefined;\n    message.maxClockDrift = object.maxClockDrift !== undefined && object.maxClockDrift !== null ? duration_1.Duration.fromPartial(object.maxClockDrift) : undefined;\n    message.frozenHeight = object.frozenHeight !== undefined && object.frozenHeight !== null ? client_1.Height.fromPartial(object.frozenHeight) : undefined;\n    message.latestHeight = object.latestHeight !== undefined && object.latestHeight !== null ? client_1.Height.fromPartial(object.latestHeight) : undefined;\n    message.proofSpecs = ((_b = object.proofSpecs) === null || _b === void 0 ? void 0 : _b.map(function (e) {\n      return proofs_1.ProofSpec.fromPartial(e);\n    })) || [];\n    message.upgradePath = ((_c = object.upgradePath) === null || _c === void 0 ? void 0 : _c.map(function (e) {\n      return e;\n    })) || [];\n    message.allowUpdateAfterExpiry = (_d = object.allowUpdateAfterExpiry) !== null && _d !== void 0 ? _d : false;\n    message.allowUpdateAfterMisbehaviour = (_e = object.allowUpdateAfterMisbehaviour) !== null && _e !== void 0 ? _e : false;\n    return message;\n  }\n};\nfunction createBaseConsensusState() {\n  return {\n    timestamp: undefined,\n    root: undefined,\n    nextValidatorsHash: new Uint8Array()\n  };\n}\nexports.ConsensusState = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.timestamp !== undefined) {\n      timestamp_1.Timestamp.encode(message.timestamp, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.root !== undefined) {\n      commitment_1.MerkleRoot.encode(message.root, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.nextValidatorsHash.length !== 0) {\n      writer.uint32(26).bytes(message.nextValidatorsHash);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseConsensusState();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.timestamp = timestamp_1.Timestamp.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.root = commitment_1.MerkleRoot.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.nextValidatorsHash = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      timestamp: isSet(object.timestamp) ? fromJsonTimestamp(object.timestamp) : undefined,\n      root: isSet(object.root) ? commitment_1.MerkleRoot.fromJSON(object.root) : undefined,\n      nextValidatorsHash: isSet(object.nextValidatorsHash) ? bytesFromBase64(object.nextValidatorsHash) : new Uint8Array()\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.timestamp !== undefined && (obj.timestamp = fromTimestamp(message.timestamp).toISOString());\n    message.root !== undefined && (obj.root = message.root ? commitment_1.MerkleRoot.toJSON(message.root) : undefined);\n    message.nextValidatorsHash !== undefined && (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined ? message.nextValidatorsHash : new Uint8Array()));\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseConsensusState();\n    message.timestamp = object.timestamp !== undefined && object.timestamp !== null ? timestamp_1.Timestamp.fromPartial(object.timestamp) : undefined;\n    message.root = object.root !== undefined && object.root !== null ? commitment_1.MerkleRoot.fromPartial(object.root) : undefined;\n    message.nextValidatorsHash = (_a = object.nextValidatorsHash) !== null && _a !== void 0 ? _a : new Uint8Array();\n    return message;\n  }\n};\nfunction createBaseMisbehaviour() {\n  return {\n    clientId: \"\",\n    header1: undefined,\n    header2: undefined\n  };\n}\nexports.Misbehaviour = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.clientId !== \"\") {\n      writer.uint32(10).string(message.clientId);\n    }\n    if (message.header1 !== undefined) {\n      exports.Header.encode(message.header1, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.header2 !== undefined) {\n      exports.Header.encode(message.header2, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMisbehaviour();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n        case 2:\n          message.header1 = exports.Header.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.header2 = exports.Header.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      clientId: isSet(object.clientId) ? String(object.clientId) : \"\",\n      header1: isSet(object.header1) ? exports.Header.fromJSON(object.header1) : undefined,\n      header2: isSet(object.header2) ? exports.Header.fromJSON(object.header2) : undefined\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.clientId !== undefined && (obj.clientId = message.clientId);\n    message.header1 !== undefined && (obj.header1 = message.header1 ? exports.Header.toJSON(message.header1) : undefined);\n    message.header2 !== undefined && (obj.header2 = message.header2 ? exports.Header.toJSON(message.header2) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseMisbehaviour();\n    message.clientId = (_a = object.clientId) !== null && _a !== void 0 ? _a : \"\";\n    message.header1 = object.header1 !== undefined && object.header1 !== null ? exports.Header.fromPartial(object.header1) : undefined;\n    message.header2 = object.header2 !== undefined && object.header2 !== null ? exports.Header.fromPartial(object.header2) : undefined;\n    return message;\n  }\n};\nfunction createBaseHeader() {\n  return {\n    signedHeader: undefined,\n    validatorSet: undefined,\n    trustedHeight: undefined,\n    trustedValidators: undefined\n  };\n}\nexports.Header = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.signedHeader !== undefined) {\n      types_1.SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.validatorSet !== undefined) {\n      validator_1.ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.trustedHeight !== undefined) {\n      client_1.Height.encode(message.trustedHeight, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.trustedValidators !== undefined) {\n      validator_1.ValidatorSet.encode(message.trustedValidators, writer.uint32(34).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseHeader();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.signedHeader = types_1.SignedHeader.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.validatorSet = validator_1.ValidatorSet.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.trustedHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.trustedValidators = validator_1.ValidatorSet.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      signedHeader: isSet(object.signedHeader) ? types_1.SignedHeader.fromJSON(object.signedHeader) : undefined,\n      validatorSet: isSet(object.validatorSet) ? validator_1.ValidatorSet.fromJSON(object.validatorSet) : undefined,\n      trustedHeight: isSet(object.trustedHeight) ? client_1.Height.fromJSON(object.trustedHeight) : undefined,\n      trustedValidators: isSet(object.trustedValidators) ? validator_1.ValidatorSet.fromJSON(object.trustedValidators) : undefined\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.signedHeader !== undefined && (obj.signedHeader = message.signedHeader ? types_1.SignedHeader.toJSON(message.signedHeader) : undefined);\n    message.validatorSet !== undefined && (obj.validatorSet = message.validatorSet ? validator_1.ValidatorSet.toJSON(message.validatorSet) : undefined);\n    message.trustedHeight !== undefined && (obj.trustedHeight = message.trustedHeight ? client_1.Height.toJSON(message.trustedHeight) : undefined);\n    message.trustedValidators !== undefined && (obj.trustedValidators = message.trustedValidators ? validator_1.ValidatorSet.toJSON(message.trustedValidators) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseHeader();\n    message.signedHeader = object.signedHeader !== undefined && object.signedHeader !== null ? types_1.SignedHeader.fromPartial(object.signedHeader) : undefined;\n    message.validatorSet = object.validatorSet !== undefined && object.validatorSet !== null ? validator_1.ValidatorSet.fromPartial(object.validatorSet) : undefined;\n    message.trustedHeight = object.trustedHeight !== undefined && object.trustedHeight !== null ? client_1.Height.fromPartial(object.trustedHeight) : undefined;\n    message.trustedValidators = object.trustedValidators !== undefined && object.trustedValidators !== null ? validator_1.ValidatorSet.fromPartial(object.trustedValidators) : undefined;\n    return message;\n  }\n};\nfunction createBaseFraction() {\n  return {\n    numerator: long_1.default.UZERO,\n    denominator: long_1.default.UZERO\n  };\n}\nexports.Fraction = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (!message.numerator.isZero()) {\n      writer.uint32(8).uint64(message.numerator);\n    }\n    if (!message.denominator.isZero()) {\n      writer.uint32(16).uint64(message.denominator);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseFraction();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.numerator = reader.uint64();\n          break;\n        case 2:\n          message.denominator = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      numerator: isSet(object.numerator) ? long_1.default.fromValue(object.numerator) : long_1.default.UZERO,\n      denominator: isSet(object.denominator) ? long_1.default.fromValue(object.denominator) : long_1.default.UZERO\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.numerator !== undefined && (obj.numerator = (message.numerator || long_1.default.UZERO).toString());\n    message.denominator !== undefined && (obj.denominator = (message.denominator || long_1.default.UZERO).toString());\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseFraction();\n    message.numerator = object.numerator !== undefined && object.numerator !== null ? long_1.default.fromValue(object.numerator) : long_1.default.UZERO;\n    message.denominator = object.denominator !== undefined && object.denominator !== null ? long_1.default.fromValue(object.denominator) : long_1.default.UZERO;\n    return message;\n  }\n};\nvar globalThis = function () {\n  if (typeof globalThis !== \"undefined\") {\n    return globalThis;\n  }\n  if (typeof self !== \"undefined\") {\n    return self;\n  }\n  if (typeof window !== \"undefined\") {\n    return window;\n  }\n  if (typeof global !== \"undefined\") {\n    return global;\n  }\n  throw \"Unable to locate global object\";\n}();\nfunction bytesFromBase64(b64) {\n  if (globalThis.Buffer) {\n    return Uint8Array.from(globalThis.Buffer.from(b64, \"base64\"));\n  } else {\n    var bin = globalThis.atob(b64);\n    var arr = new Uint8Array(bin.length);\n    for (var i = 0; i < bin.length; ++i) {\n      arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n  }\n}\nfunction base64FromBytes(arr) {\n  if (globalThis.Buffer) {\n    return globalThis.Buffer.from(arr).toString(\"base64\");\n  } else {\n    var bin = [];\n    arr.forEach(function (byte) {\n      bin.push(String.fromCharCode(byte));\n    });\n    return globalThis.btoa(bin.join(\"\"));\n  }\n}\nfunction toTimestamp(date) {\n  var seconds = numberToLong(date.getTime() / 1000);\n  var nanos = date.getTime() % 1000 * 1000000;\n  return {\n    seconds: seconds,\n    nanos: nanos\n  };\n}\nfunction fromTimestamp(t) {\n  var millis = t.seconds.toNumber() * 1000;\n  millis += t.nanos / 1000000;\n  return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n  if (o instanceof Date) {\n    return toTimestamp(o);\n  } else if (typeof o === \"string\") {\n    return toTimestamp(new Date(o));\n  } else {\n    return timestamp_1.Timestamp.fromJSON(o);\n  }\n}\nfunction numberToLong(number) {\n  return long_1.default.fromNumber(number);\n}\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}\nfunction isSet(value) {\n  return value !== null && value !== undefined;\n}","map":null,"metadata":{},"sourceType":"script"}