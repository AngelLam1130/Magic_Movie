{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cosmWasmTypes = exports.createWasmAminoConverters = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nconst encoding_1 = require(\"@cosmjs/encoding\");\nconst long_1 = __importDefault(require(\"long\"));\nfunction createWasmAminoConverters() {\n  return {\n    \"/cosmwasm.wasm.v1.MsgStoreCode\": {\n      aminoType: \"wasm/MsgStoreCode\",\n      toAmino: ({\n        sender,\n        wasmByteCode\n      }) => ({\n        sender: sender,\n        wasm_byte_code: (0, encoding_1.toBase64)(wasmByteCode)\n      }),\n      fromAmino: ({\n        sender,\n        wasm_byte_code\n      }) => ({\n        sender: sender,\n        wasmByteCode: (0, encoding_1.fromBase64)(wasm_byte_code),\n        instantiatePermission: undefined\n      })\n    },\n    \"/cosmwasm.wasm.v1.MsgInstantiateContract\": {\n      aminoType: \"wasm/MsgInstantiateContract\",\n      toAmino: ({\n        sender,\n        codeId,\n        label,\n        msg,\n        funds,\n        admin\n      }) => ({\n        sender: sender,\n        code_id: codeId.toString(),\n        label: label,\n        msg: JSON.parse((0, encoding_1.fromUtf8)(msg)),\n        funds: funds,\n        admin: admin || undefined\n      }),\n      fromAmino: ({\n        sender,\n        code_id,\n        label,\n        msg,\n        funds,\n        admin\n      }) => ({\n        sender: sender,\n        codeId: long_1.default.fromString(code_id),\n        label: label,\n        msg: (0, encoding_1.toUtf8)(JSON.stringify(msg)),\n        funds: [...funds],\n        admin: admin !== null && admin !== void 0 ? admin : \"\"\n      })\n    },\n    \"/cosmwasm.wasm.v1.MsgUpdateAdmin\": {\n      aminoType: \"wasm/MsgUpdateAdmin\",\n      toAmino: ({\n        sender,\n        newAdmin,\n        contract\n      }) => ({\n        sender: sender,\n        new_admin: newAdmin,\n        contract: contract\n      }),\n      fromAmino: ({\n        sender,\n        new_admin,\n        contract\n      }) => ({\n        sender: sender,\n        newAdmin: new_admin,\n        contract: contract\n      })\n    },\n    \"/cosmwasm.wasm.v1.MsgClearAdmin\": {\n      aminoType: \"wasm/MsgClearAdmin\",\n      toAmino: ({\n        sender,\n        contract\n      }) => ({\n        sender: sender,\n        contract: contract\n      }),\n      fromAmino: ({\n        sender,\n        contract\n      }) => ({\n        sender: sender,\n        contract: contract\n      })\n    },\n    \"/cosmwasm.wasm.v1.MsgExecuteContract\": {\n      aminoType: \"wasm/MsgExecuteContract\",\n      toAmino: ({\n        sender,\n        contract,\n        msg,\n        funds\n      }) => ({\n        sender: sender,\n        contract: contract,\n        msg: JSON.parse((0, encoding_1.fromUtf8)(msg)),\n        funds: funds\n      }),\n      fromAmino: ({\n        sender,\n        contract,\n        msg,\n        funds\n      }) => ({\n        sender: sender,\n        contract: contract,\n        msg: (0, encoding_1.toUtf8)(JSON.stringify(msg)),\n        funds: [...funds]\n      })\n    },\n    \"/cosmwasm.wasm.v1.MsgMigrateContract\": {\n      aminoType: \"wasm/MsgMigrateContract\",\n      toAmino: ({\n        sender,\n        contract,\n        codeId,\n        msg\n      }) => ({\n        sender: sender,\n        contract: contract,\n        code_id: codeId.toString(),\n        msg: JSON.parse((0, encoding_1.fromUtf8)(msg))\n      }),\n      fromAmino: ({\n        sender,\n        contract,\n        code_id,\n        msg\n      }) => ({\n        sender: sender,\n        contract: contract,\n        codeId: long_1.default.fromString(code_id),\n        msg: (0, encoding_1.toUtf8)(JSON.stringify(msg))\n      })\n    }\n  };\n}\nexports.createWasmAminoConverters = createWasmAminoConverters;\n/** @deprecated use `createWasmAminoConverters()` */\nexports.cosmWasmTypes = createWasmAminoConverters();","map":{"version":3,"names":["encoding_1","require","long_1","__importDefault","createWasmAminoConverters","aminoType","toAmino","sender","wasmByteCode","wasm_byte_code","toBase64","fromAmino","fromBase64","instantiatePermission","undefined","codeId","label","msg","funds","admin","code_id","toString","JSON","parse","fromUtf8","default","fromString","toUtf8","stringify","newAdmin","contract","new_admin","exports","cosmWasmTypes"],"sources":["../../../src/modules/wasm/aminomessages.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script"}