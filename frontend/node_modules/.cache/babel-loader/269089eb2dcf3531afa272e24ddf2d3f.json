{"ast":null,"code":"\"use strict\";\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgIBCSend = exports.MsgIBCCloseChannel = void 0;\nvar _helpers = require(\"../../../helpers\");\nvar _m0 = _interopRequireWildcard(require(\"protobufjs/minimal\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj[\"default\"] = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction createBaseMsgIBCSend() {\n  return {\n    channel: \"\",\n    timeoutHeight: _helpers.Long.UZERO,\n    timeoutTimestamp: _helpers.Long.UZERO,\n    data: new Uint8Array()\n  };\n}\nvar MsgIBCSend = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.channel !== \"\") {\n      writer.uint32(18).string(message.channel);\n    }\n    if (!message.timeoutHeight.isZero()) {\n      writer.uint32(32).uint64(message.timeoutHeight);\n    }\n    if (!message.timeoutTimestamp.isZero()) {\n      writer.uint32(40).uint64(message.timeoutTimestamp);\n    }\n    if (message.data.length !== 0) {\n      writer.uint32(50).bytes(message.data);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgIBCSend();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 2:\n          message.channel = reader.string();\n          break;\n        case 4:\n          message.timeoutHeight = reader.uint64();\n          break;\n        case 5:\n          message.timeoutTimestamp = reader.uint64();\n          break;\n        case 6:\n          message.data = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$channel, _object$data;\n    var message = createBaseMsgIBCSend();\n    message.channel = (_object$channel = object.channel) !== null && _object$channel !== void 0 ? _object$channel : \"\";\n    message.timeoutHeight = object.timeoutHeight !== undefined && object.timeoutHeight !== null ? _helpers.Long.fromValue(object.timeoutHeight) : _helpers.Long.UZERO;\n    message.timeoutTimestamp = object.timeoutTimestamp !== undefined && object.timeoutTimestamp !== null ? _helpers.Long.fromValue(object.timeoutTimestamp) : _helpers.Long.UZERO;\n    message.data = (_object$data = object.data) !== null && _object$data !== void 0 ? _object$data : new Uint8Array();\n    return message;\n  }\n};\nexports.MsgIBCSend = MsgIBCSend;\nfunction createBaseMsgIBCCloseChannel() {\n  return {\n    channel: \"\"\n  };\n}\nvar MsgIBCCloseChannel = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.channel !== \"\") {\n      writer.uint32(18).string(message.channel);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgIBCCloseChannel();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 2:\n          message.channel = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$channel2;\n    var message = createBaseMsgIBCCloseChannel();\n    message.channel = (_object$channel2 = object.channel) !== null && _object$channel2 !== void 0 ? _object$channel2 : \"\";\n    return message;\n  }\n};\nexports.MsgIBCCloseChannel = MsgIBCCloseChannel;","map":null,"metadata":{},"sourceType":"script"}