{"ast":null,"code":"\"use strict\";\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ScalarTypeSDKType = exports.ScalarType = exports.ScalarDescriptor = exports.InterfaceDescriptor = void 0;\nexports.scalarTypeFromJSON = scalarTypeFromJSON;\nexports.scalarTypeToJSON = scalarTypeToJSON;\nvar _m0 = _interopRequireWildcard(require(\"protobufjs/minimal\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj[\"default\"] = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nvar ScalarType;\nexports.ScalarType = ScalarType;\n(function (ScalarType) {\n  ScalarType[ScalarType[\"SCALAR_TYPE_UNSPECIFIED\"] = 0] = \"SCALAR_TYPE_UNSPECIFIED\";\n  ScalarType[ScalarType[\"SCALAR_TYPE_STRING\"] = 1] = \"SCALAR_TYPE_STRING\";\n  ScalarType[ScalarType[\"SCALAR_TYPE_BYTES\"] = 2] = \"SCALAR_TYPE_BYTES\";\n  ScalarType[ScalarType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ScalarType || (exports.ScalarType = ScalarType = {}));\nvar ScalarTypeSDKType = ScalarType;\nexports.ScalarTypeSDKType = ScalarTypeSDKType;\nfunction scalarTypeFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"SCALAR_TYPE_UNSPECIFIED\":\n      return ScalarType.SCALAR_TYPE_UNSPECIFIED;\n    case 1:\n    case \"SCALAR_TYPE_STRING\":\n      return ScalarType.SCALAR_TYPE_STRING;\n    case 2:\n    case \"SCALAR_TYPE_BYTES\":\n      return ScalarType.SCALAR_TYPE_BYTES;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return ScalarType.UNRECOGNIZED;\n  }\n}\nfunction scalarTypeToJSON(object) {\n  switch (object) {\n    case ScalarType.SCALAR_TYPE_UNSPECIFIED:\n      return \"SCALAR_TYPE_UNSPECIFIED\";\n    case ScalarType.SCALAR_TYPE_STRING:\n      return \"SCALAR_TYPE_STRING\";\n    case ScalarType.SCALAR_TYPE_BYTES:\n      return \"SCALAR_TYPE_BYTES\";\n    case ScalarType.UNRECOGNIZED:\n    default:\n      return \"UNRECOGNIZED\";\n  }\n}\n/**\n * InterfaceDescriptor describes an interface type to be used with\n * accepts_interface and implements_interface and declared by declare_interface.\n */\n\nfunction createBaseInterfaceDescriptor() {\n  return {\n    name: \"\",\n    description: \"\"\n  };\n}\nvar InterfaceDescriptor = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.name !== \"\") {\n      writer.uint32(10).string(message.name);\n    }\n    if (message.description !== \"\") {\n      writer.uint32(18).string(message.description);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseInterfaceDescriptor();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.name = reader.string();\n          break;\n        case 2:\n          message.description = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$name, _object$description;\n    var message = createBaseInterfaceDescriptor();\n    message.name = (_object$name = object.name) !== null && _object$name !== void 0 ? _object$name : \"\";\n    message.description = (_object$description = object.description) !== null && _object$description !== void 0 ? _object$description : \"\";\n    return message;\n  }\n};\nexports.InterfaceDescriptor = InterfaceDescriptor;\nfunction createBaseScalarDescriptor() {\n  return {\n    name: \"\",\n    description: \"\",\n    fieldType: []\n  };\n}\nvar ScalarDescriptor = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.name !== \"\") {\n      writer.uint32(10).string(message.name);\n    }\n    if (message.description !== \"\") {\n      writer.uint32(18).string(message.description);\n    }\n    writer.uint32(26).fork();\n    var _iterator = _createForOfIteratorHelper(message.fieldType),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        writer.int32(v);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    writer.ldelim();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseScalarDescriptor();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.name = reader.string();\n          break;\n        case 2:\n          message.description = reader.string();\n          break;\n        case 3:\n          if ((tag & 7) === 2) {\n            var end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.fieldType.push(reader.int32());\n            }\n          } else {\n            message.fieldType.push(reader.int32());\n          }\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$name2, _object$description2, _object$fieldType;\n    var message = createBaseScalarDescriptor();\n    message.name = (_object$name2 = object.name) !== null && _object$name2 !== void 0 ? _object$name2 : \"\";\n    message.description = (_object$description2 = object.description) !== null && _object$description2 !== void 0 ? _object$description2 : \"\";\n    message.fieldType = ((_object$fieldType = object.fieldType) === null || _object$fieldType === void 0 ? void 0 : _object$fieldType.map(function (e) {\n      return e;\n    })) || [];\n    return message;\n  }\n};\nexports.ScalarDescriptor = ScalarDescriptor;","map":null,"metadata":{},"sourceType":"script"}