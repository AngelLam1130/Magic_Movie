{"ast":null,"code":"\"use strict\";\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VotePenaltyCounter = exports.PriceSnapshotItem = exports.PriceSnapshot = exports.Params = exports.OracleTwap = exports.OracleExchangeRate = exports.ExchangeRateTuple = exports.Denom = exports.AggregateExchangeRateVote = void 0;\nvar _helpers = require(\"../../../helpers\");\nvar _m0 = _interopRequireWildcard(require(\"protobufjs/minimal\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj[\"default\"] = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction createBaseParams() {\n  return {\n    votePeriod: _helpers.Long.UZERO,\n    voteThreshold: \"\",\n    rewardBand: \"\",\n    whitelist: [],\n    slashFraction: \"\",\n    slashWindow: _helpers.Long.UZERO,\n    minValidPerWindow: \"\",\n    lookbackDuration: _helpers.Long.UZERO\n  };\n}\nvar Params = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (!message.votePeriod.isZero()) {\n      writer.uint32(8).uint64(message.votePeriod);\n    }\n    if (message.voteThreshold !== \"\") {\n      writer.uint32(18).string(message.voteThreshold);\n    }\n    if (message.rewardBand !== \"\") {\n      writer.uint32(26).string(message.rewardBand);\n    }\n    var _iterator = _createForOfIteratorHelper(message.whitelist),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        Denom.encode(v, writer.uint32(34).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    if (message.slashFraction !== \"\") {\n      writer.uint32(42).string(message.slashFraction);\n    }\n    if (!message.slashWindow.isZero()) {\n      writer.uint32(48).uint64(message.slashWindow);\n    }\n    if (message.minValidPerWindow !== \"\") {\n      writer.uint32(58).string(message.minValidPerWindow);\n    }\n    if (!message.lookbackDuration.isZero()) {\n      writer.uint32(72).uint64(message.lookbackDuration);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseParams();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.votePeriod = reader.uint64();\n          break;\n        case 2:\n          message.voteThreshold = reader.string();\n          break;\n        case 3:\n          message.rewardBand = reader.string();\n          break;\n        case 4:\n          message.whitelist.push(Denom.decode(reader, reader.uint32()));\n          break;\n        case 5:\n          message.slashFraction = reader.string();\n          break;\n        case 6:\n          message.slashWindow = reader.uint64();\n          break;\n        case 7:\n          message.minValidPerWindow = reader.string();\n          break;\n        case 9:\n          message.lookbackDuration = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$voteThreshold, _object$rewardBand, _object$whitelist, _object$slashFraction, _object$minValidPerWi;\n    var message = createBaseParams();\n    message.votePeriod = object.votePeriod !== undefined && object.votePeriod !== null ? _helpers.Long.fromValue(object.votePeriod) : _helpers.Long.UZERO;\n    message.voteThreshold = (_object$voteThreshold = object.voteThreshold) !== null && _object$voteThreshold !== void 0 ? _object$voteThreshold : \"\";\n    message.rewardBand = (_object$rewardBand = object.rewardBand) !== null && _object$rewardBand !== void 0 ? _object$rewardBand : \"\";\n    message.whitelist = ((_object$whitelist = object.whitelist) === null || _object$whitelist === void 0 ? void 0 : _object$whitelist.map(function (e) {\n      return Denom.fromPartial(e);\n    })) || [];\n    message.slashFraction = (_object$slashFraction = object.slashFraction) !== null && _object$slashFraction !== void 0 ? _object$slashFraction : \"\";\n    message.slashWindow = object.slashWindow !== undefined && object.slashWindow !== null ? _helpers.Long.fromValue(object.slashWindow) : _helpers.Long.UZERO;\n    message.minValidPerWindow = (_object$minValidPerWi = object.minValidPerWindow) !== null && _object$minValidPerWi !== void 0 ? _object$minValidPerWi : \"\";\n    message.lookbackDuration = object.lookbackDuration !== undefined && object.lookbackDuration !== null ? _helpers.Long.fromValue(object.lookbackDuration) : _helpers.Long.UZERO;\n    return message;\n  }\n};\nexports.Params = Params;\nfunction createBaseDenom() {\n  return {\n    name: \"\"\n  };\n}\nvar Denom = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.name !== \"\") {\n      writer.uint32(10).string(message.name);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseDenom();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.name = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$name;\n    var message = createBaseDenom();\n    message.name = (_object$name = object.name) !== null && _object$name !== void 0 ? _object$name : \"\";\n    return message;\n  }\n};\nexports.Denom = Denom;\nfunction createBaseAggregateExchangeRateVote() {\n  return {\n    exchangeRateTuples: [],\n    voter: \"\"\n  };\n}\nvar AggregateExchangeRateVote = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    var _iterator2 = _createForOfIteratorHelper(message.exchangeRateTuples),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var v = _step2.value;\n        ExchangeRateTuple.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    if (message.voter !== \"\") {\n      writer.uint32(18).string(message.voter);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseAggregateExchangeRateVote();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.exchangeRateTuples.push(ExchangeRateTuple.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.voter = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$exchangeRateT, _object$voter;\n    var message = createBaseAggregateExchangeRateVote();\n    message.exchangeRateTuples = ((_object$exchangeRateT = object.exchangeRateTuples) === null || _object$exchangeRateT === void 0 ? void 0 : _object$exchangeRateT.map(function (e) {\n      return ExchangeRateTuple.fromPartial(e);\n    })) || [];\n    message.voter = (_object$voter = object.voter) !== null && _object$voter !== void 0 ? _object$voter : \"\";\n    return message;\n  }\n};\nexports.AggregateExchangeRateVote = AggregateExchangeRateVote;\nfunction createBaseExchangeRateTuple() {\n  return {\n    denom: \"\",\n    exchangeRate: \"\"\n  };\n}\nvar ExchangeRateTuple = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.denom !== \"\") {\n      writer.uint32(10).string(message.denom);\n    }\n    if (message.exchangeRate !== \"\") {\n      writer.uint32(18).string(message.exchangeRate);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseExchangeRateTuple();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.denom = reader.string();\n          break;\n        case 2:\n          message.exchangeRate = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$denom, _object$exchangeRate;\n    var message = createBaseExchangeRateTuple();\n    message.denom = (_object$denom = object.denom) !== null && _object$denom !== void 0 ? _object$denom : \"\";\n    message.exchangeRate = (_object$exchangeRate = object.exchangeRate) !== null && _object$exchangeRate !== void 0 ? _object$exchangeRate : \"\";\n    return message;\n  }\n};\nexports.ExchangeRateTuple = ExchangeRateTuple;\nfunction createBaseOracleExchangeRate() {\n  return {\n    exchangeRate: \"\",\n    lastUpdate: \"\"\n  };\n}\nvar OracleExchangeRate = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.exchangeRate !== \"\") {\n      writer.uint32(10).string(message.exchangeRate);\n    }\n    if (message.lastUpdate !== \"\") {\n      writer.uint32(18).string(message.lastUpdate);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseOracleExchangeRate();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.exchangeRate = reader.string();\n          break;\n        case 2:\n          message.lastUpdate = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$exchangeRate2, _object$lastUpdate;\n    var message = createBaseOracleExchangeRate();\n    message.exchangeRate = (_object$exchangeRate2 = object.exchangeRate) !== null && _object$exchangeRate2 !== void 0 ? _object$exchangeRate2 : \"\";\n    message.lastUpdate = (_object$lastUpdate = object.lastUpdate) !== null && _object$lastUpdate !== void 0 ? _object$lastUpdate : \"\";\n    return message;\n  }\n};\nexports.OracleExchangeRate = OracleExchangeRate;\nfunction createBasePriceSnapshotItem() {\n  return {\n    denom: \"\",\n    oracleExchangeRate: OracleExchangeRate.fromPartial({})\n  };\n}\nvar PriceSnapshotItem = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.denom !== \"\") {\n      writer.uint32(10).string(message.denom);\n    }\n    if (message.oracleExchangeRate !== undefined) {\n      OracleExchangeRate.encode(message.oracleExchangeRate, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBasePriceSnapshotItem();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.denom = reader.string();\n          break;\n        case 2:\n          message.oracleExchangeRate = OracleExchangeRate.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$denom2;\n    var message = createBasePriceSnapshotItem();\n    message.denom = (_object$denom2 = object.denom) !== null && _object$denom2 !== void 0 ? _object$denom2 : \"\";\n    message.oracleExchangeRate = object.oracleExchangeRate !== undefined && object.oracleExchangeRate !== null ? OracleExchangeRate.fromPartial(object.oracleExchangeRate) : undefined;\n    return message;\n  }\n};\nexports.PriceSnapshotItem = PriceSnapshotItem;\nfunction createBasePriceSnapshot() {\n  return {\n    snapshotTimestamp: _helpers.Long.ZERO,\n    priceSnapshotItems: []\n  };\n}\nvar PriceSnapshot = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (!message.snapshotTimestamp.isZero()) {\n      writer.uint32(8).int64(message.snapshotTimestamp);\n    }\n    var _iterator3 = _createForOfIteratorHelper(message.priceSnapshotItems),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var v = _step3.value;\n        PriceSnapshotItem.encode(v, writer.uint32(18).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBasePriceSnapshot();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.snapshotTimestamp = reader.int64();\n          break;\n        case 2:\n          message.priceSnapshotItems.push(PriceSnapshotItem.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$priceSnapshot;\n    var message = createBasePriceSnapshot();\n    message.snapshotTimestamp = object.snapshotTimestamp !== undefined && object.snapshotTimestamp !== null ? _helpers.Long.fromValue(object.snapshotTimestamp) : _helpers.Long.ZERO;\n    message.priceSnapshotItems = ((_object$priceSnapshot = object.priceSnapshotItems) === null || _object$priceSnapshot === void 0 ? void 0 : _object$priceSnapshot.map(function (e) {\n      return PriceSnapshotItem.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nexports.PriceSnapshot = PriceSnapshot;\nfunction createBaseOracleTwap() {\n  return {\n    denom: \"\",\n    twap: \"\",\n    lookbackSeconds: _helpers.Long.ZERO\n  };\n}\nvar OracleTwap = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.denom !== \"\") {\n      writer.uint32(10).string(message.denom);\n    }\n    if (message.twap !== \"\") {\n      writer.uint32(18).string(message.twap);\n    }\n    if (!message.lookbackSeconds.isZero()) {\n      writer.uint32(24).int64(message.lookbackSeconds);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseOracleTwap();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.denom = reader.string();\n          break;\n        case 2:\n          message.twap = reader.string();\n          break;\n        case 3:\n          message.lookbackSeconds = reader.int64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$denom3, _object$twap;\n    var message = createBaseOracleTwap();\n    message.denom = (_object$denom3 = object.denom) !== null && _object$denom3 !== void 0 ? _object$denom3 : \"\";\n    message.twap = (_object$twap = object.twap) !== null && _object$twap !== void 0 ? _object$twap : \"\";\n    message.lookbackSeconds = object.lookbackSeconds !== undefined && object.lookbackSeconds !== null ? _helpers.Long.fromValue(object.lookbackSeconds) : _helpers.Long.ZERO;\n    return message;\n  }\n};\nexports.OracleTwap = OracleTwap;\nfunction createBaseVotePenaltyCounter() {\n  return {\n    missCount: _helpers.Long.UZERO,\n    abstainCount: _helpers.Long.UZERO,\n    successCount: _helpers.Long.UZERO\n  };\n}\nvar VotePenaltyCounter = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (!message.missCount.isZero()) {\n      writer.uint32(8).uint64(message.missCount);\n    }\n    if (!message.abstainCount.isZero()) {\n      writer.uint32(16).uint64(message.abstainCount);\n    }\n    if (!message.successCount.isZero()) {\n      writer.uint32(24).uint64(message.successCount);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseVotePenaltyCounter();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.missCount = reader.uint64();\n          break;\n        case 2:\n          message.abstainCount = reader.uint64();\n          break;\n        case 3:\n          message.successCount = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseVotePenaltyCounter();\n    message.missCount = object.missCount !== undefined && object.missCount !== null ? _helpers.Long.fromValue(object.missCount) : _helpers.Long.UZERO;\n    message.abstainCount = object.abstainCount !== undefined && object.abstainCount !== null ? _helpers.Long.fromValue(object.abstainCount) : _helpers.Long.UZERO;\n    message.successCount = object.successCount !== undefined && object.successCount !== null ? _helpers.Long.fromValue(object.successCount) : _helpers.Long.UZERO;\n    return message;\n  }\n};\nexports.VotePenaltyCounter = VotePenaltyCounter;","map":null,"metadata":{},"sourceType":"script"}