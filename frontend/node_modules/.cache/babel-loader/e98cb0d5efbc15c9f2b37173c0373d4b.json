{"ast":null,"code":"\"use strict\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Fee = exports.ModeInfo_Multi = exports.ModeInfo_Single = exports.ModeInfo = exports.SignerInfo = exports.AuthInfo = exports.TxBody = exports.SignDoc = exports.TxRaw = exports.Tx = exports.protobufPackage = void 0;\n/* eslint-disable */\nvar long_1 = __importDefault(require(\"long\"));\nvar minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nvar any_1 = require(\"../../../google/protobuf/any\");\nvar coin_1 = require(\"../../base/v1beta1/coin\");\nvar multisig_1 = require(\"../../crypto/multisig/v1beta1/multisig\");\nvar signing_1 = require(\"../signing/v1beta1/signing\");\nexports.protobufPackage = \"cosmos.tx.v1beta1\";\nfunction createBaseTx() {\n  return {\n    body: undefined,\n    authInfo: undefined,\n    signatures: []\n  };\n}\nexports.Tx = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.body !== undefined) {\n      exports.TxBody.encode(message.body, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.authInfo !== undefined) {\n      exports.AuthInfo.encode(message.authInfo, writer.uint32(18).fork()).ldelim();\n    }\n    var _iterator = _createForOfIteratorHelper(message.signatures),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        writer.uint32(26).bytes(v);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseTx();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.body = exports.TxBody.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.authInfo = exports.AuthInfo.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.signatures.push(reader.bytes());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      body: isSet(object.body) ? exports.TxBody.fromJSON(object.body) : undefined,\n      authInfo: isSet(object.authInfo) ? exports.AuthInfo.fromJSON(object.authInfo) : undefined,\n      signatures: Array.isArray(object === null || object === void 0 ? void 0 : object.signatures) ? object.signatures.map(function (e) {\n        return bytesFromBase64(e);\n      }) : []\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.body !== undefined && (obj.body = message.body ? exports.TxBody.toJSON(message.body) : undefined);\n    message.authInfo !== undefined && (obj.authInfo = message.authInfo ? exports.AuthInfo.toJSON(message.authInfo) : undefined);\n    if (message.signatures) {\n      obj.signatures = message.signatures.map(function (e) {\n        return base64FromBytes(e !== undefined ? e : new Uint8Array());\n      });\n    } else {\n      obj.signatures = [];\n    }\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseTx();\n    message.body = object.body !== undefined && object.body !== null ? exports.TxBody.fromPartial(object.body) : undefined;\n    message.authInfo = object.authInfo !== undefined && object.authInfo !== null ? exports.AuthInfo.fromPartial(object.authInfo) : undefined;\n    message.signatures = ((_a = object.signatures) === null || _a === void 0 ? void 0 : _a.map(function (e) {\n      return e;\n    })) || [];\n    return message;\n  }\n};\nfunction createBaseTxRaw() {\n  return {\n    bodyBytes: new Uint8Array(),\n    authInfoBytes: new Uint8Array(),\n    signatures: []\n  };\n}\nexports.TxRaw = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.bodyBytes.length !== 0) {\n      writer.uint32(10).bytes(message.bodyBytes);\n    }\n    if (message.authInfoBytes.length !== 0) {\n      writer.uint32(18).bytes(message.authInfoBytes);\n    }\n    var _iterator2 = _createForOfIteratorHelper(message.signatures),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var v = _step2.value;\n        writer.uint32(26).bytes(v);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseTxRaw();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.bodyBytes = reader.bytes();\n          break;\n        case 2:\n          message.authInfoBytes = reader.bytes();\n          break;\n        case 3:\n          message.signatures.push(reader.bytes());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      bodyBytes: isSet(object.bodyBytes) ? bytesFromBase64(object.bodyBytes) : new Uint8Array(),\n      authInfoBytes: isSet(object.authInfoBytes) ? bytesFromBase64(object.authInfoBytes) : new Uint8Array(),\n      signatures: Array.isArray(object === null || object === void 0 ? void 0 : object.signatures) ? object.signatures.map(function (e) {\n        return bytesFromBase64(e);\n      }) : []\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.bodyBytes !== undefined && (obj.bodyBytes = base64FromBytes(message.bodyBytes !== undefined ? message.bodyBytes : new Uint8Array()));\n    message.authInfoBytes !== undefined && (obj.authInfoBytes = base64FromBytes(message.authInfoBytes !== undefined ? message.authInfoBytes : new Uint8Array()));\n    if (message.signatures) {\n      obj.signatures = message.signatures.map(function (e) {\n        return base64FromBytes(e !== undefined ? e : new Uint8Array());\n      });\n    } else {\n      obj.signatures = [];\n    }\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c;\n    var message = createBaseTxRaw();\n    message.bodyBytes = (_a = object.bodyBytes) !== null && _a !== void 0 ? _a : new Uint8Array();\n    message.authInfoBytes = (_b = object.authInfoBytes) !== null && _b !== void 0 ? _b : new Uint8Array();\n    message.signatures = ((_c = object.signatures) === null || _c === void 0 ? void 0 : _c.map(function (e) {\n      return e;\n    })) || [];\n    return message;\n  }\n};\nfunction createBaseSignDoc() {\n  return {\n    bodyBytes: new Uint8Array(),\n    authInfoBytes: new Uint8Array(),\n    chainId: \"\",\n    accountNumber: long_1.default.UZERO\n  };\n}\nexports.SignDoc = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.bodyBytes.length !== 0) {\n      writer.uint32(10).bytes(message.bodyBytes);\n    }\n    if (message.authInfoBytes.length !== 0) {\n      writer.uint32(18).bytes(message.authInfoBytes);\n    }\n    if (message.chainId !== \"\") {\n      writer.uint32(26).string(message.chainId);\n    }\n    if (!message.accountNumber.isZero()) {\n      writer.uint32(32).uint64(message.accountNumber);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseSignDoc();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.bodyBytes = reader.bytes();\n          break;\n        case 2:\n          message.authInfoBytes = reader.bytes();\n          break;\n        case 3:\n          message.chainId = reader.string();\n          break;\n        case 4:\n          message.accountNumber = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      bodyBytes: isSet(object.bodyBytes) ? bytesFromBase64(object.bodyBytes) : new Uint8Array(),\n      authInfoBytes: isSet(object.authInfoBytes) ? bytesFromBase64(object.authInfoBytes) : new Uint8Array(),\n      chainId: isSet(object.chainId) ? String(object.chainId) : \"\",\n      accountNumber: isSet(object.accountNumber) ? long_1.default.fromValue(object.accountNumber) : long_1.default.UZERO\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.bodyBytes !== undefined && (obj.bodyBytes = base64FromBytes(message.bodyBytes !== undefined ? message.bodyBytes : new Uint8Array()));\n    message.authInfoBytes !== undefined && (obj.authInfoBytes = base64FromBytes(message.authInfoBytes !== undefined ? message.authInfoBytes : new Uint8Array()));\n    message.chainId !== undefined && (obj.chainId = message.chainId);\n    message.accountNumber !== undefined && (obj.accountNumber = (message.accountNumber || long_1.default.UZERO).toString());\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c;\n    var message = createBaseSignDoc();\n    message.bodyBytes = (_a = object.bodyBytes) !== null && _a !== void 0 ? _a : new Uint8Array();\n    message.authInfoBytes = (_b = object.authInfoBytes) !== null && _b !== void 0 ? _b : new Uint8Array();\n    message.chainId = (_c = object.chainId) !== null && _c !== void 0 ? _c : \"\";\n    message.accountNumber = object.accountNumber !== undefined && object.accountNumber !== null ? long_1.default.fromValue(object.accountNumber) : long_1.default.UZERO;\n    return message;\n  }\n};\nfunction createBaseTxBody() {\n  return {\n    messages: [],\n    memo: \"\",\n    timeoutHeight: long_1.default.UZERO,\n    extensionOptions: [],\n    nonCriticalExtensionOptions: []\n  };\n}\nexports.TxBody = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    var _iterator3 = _createForOfIteratorHelper(message.messages),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var v = _step3.value;\n        any_1.Any.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    if (message.memo !== \"\") {\n      writer.uint32(18).string(message.memo);\n    }\n    if (!message.timeoutHeight.isZero()) {\n      writer.uint32(24).uint64(message.timeoutHeight);\n    }\n    var _iterator4 = _createForOfIteratorHelper(message.extensionOptions),\n      _step4;\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var _v = _step4.value;\n        any_1.Any.encode(_v, writer.uint32(8186).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n    var _iterator5 = _createForOfIteratorHelper(message.nonCriticalExtensionOptions),\n      _step5;\n    try {\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        var _v2 = _step5.value;\n        any_1.Any.encode(_v2, writer.uint32(16378).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseTxBody();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.messages.push(any_1.Any.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.memo = reader.string();\n          break;\n        case 3:\n          message.timeoutHeight = reader.uint64();\n          break;\n        case 1023:\n          message.extensionOptions.push(any_1.Any.decode(reader, reader.uint32()));\n          break;\n        case 2047:\n          message.nonCriticalExtensionOptions.push(any_1.Any.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      messages: Array.isArray(object === null || object === void 0 ? void 0 : object.messages) ? object.messages.map(function (e) {\n        return any_1.Any.fromJSON(e);\n      }) : [],\n      memo: isSet(object.memo) ? String(object.memo) : \"\",\n      timeoutHeight: isSet(object.timeoutHeight) ? long_1.default.fromValue(object.timeoutHeight) : long_1.default.UZERO,\n      extensionOptions: Array.isArray(object === null || object === void 0 ? void 0 : object.extensionOptions) ? object.extensionOptions.map(function (e) {\n        return any_1.Any.fromJSON(e);\n      }) : [],\n      nonCriticalExtensionOptions: Array.isArray(object === null || object === void 0 ? void 0 : object.nonCriticalExtensionOptions) ? object.nonCriticalExtensionOptions.map(function (e) {\n        return any_1.Any.fromJSON(e);\n      }) : []\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    if (message.messages) {\n      obj.messages = message.messages.map(function (e) {\n        return e ? any_1.Any.toJSON(e) : undefined;\n      });\n    } else {\n      obj.messages = [];\n    }\n    message.memo !== undefined && (obj.memo = message.memo);\n    message.timeoutHeight !== undefined && (obj.timeoutHeight = (message.timeoutHeight || long_1.default.UZERO).toString());\n    if (message.extensionOptions) {\n      obj.extensionOptions = message.extensionOptions.map(function (e) {\n        return e ? any_1.Any.toJSON(e) : undefined;\n      });\n    } else {\n      obj.extensionOptions = [];\n    }\n    if (message.nonCriticalExtensionOptions) {\n      obj.nonCriticalExtensionOptions = message.nonCriticalExtensionOptions.map(function (e) {\n        return e ? any_1.Any.toJSON(e) : undefined;\n      });\n    } else {\n      obj.nonCriticalExtensionOptions = [];\n    }\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c, _d;\n    var message = createBaseTxBody();\n    message.messages = ((_a = object.messages) === null || _a === void 0 ? void 0 : _a.map(function (e) {\n      return any_1.Any.fromPartial(e);\n    })) || [];\n    message.memo = (_b = object.memo) !== null && _b !== void 0 ? _b : \"\";\n    message.timeoutHeight = object.timeoutHeight !== undefined && object.timeoutHeight !== null ? long_1.default.fromValue(object.timeoutHeight) : long_1.default.UZERO;\n    message.extensionOptions = ((_c = object.extensionOptions) === null || _c === void 0 ? void 0 : _c.map(function (e) {\n      return any_1.Any.fromPartial(e);\n    })) || [];\n    message.nonCriticalExtensionOptions = ((_d = object.nonCriticalExtensionOptions) === null || _d === void 0 ? void 0 : _d.map(function (e) {\n      return any_1.Any.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nfunction createBaseAuthInfo() {\n  return {\n    signerInfos: [],\n    fee: undefined\n  };\n}\nexports.AuthInfo = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    var _iterator6 = _createForOfIteratorHelper(message.signerInfos),\n      _step6;\n    try {\n      for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n        var v = _step6.value;\n        exports.SignerInfo.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator6.e(err);\n    } finally {\n      _iterator6.f();\n    }\n    if (message.fee !== undefined) {\n      exports.Fee.encode(message.fee, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseAuthInfo();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.signerInfos.push(exports.SignerInfo.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.fee = exports.Fee.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      signerInfos: Array.isArray(object === null || object === void 0 ? void 0 : object.signerInfos) ? object.signerInfos.map(function (e) {\n        return exports.SignerInfo.fromJSON(e);\n      }) : [],\n      fee: isSet(object.fee) ? exports.Fee.fromJSON(object.fee) : undefined\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    if (message.signerInfos) {\n      obj.signerInfos = message.signerInfos.map(function (e) {\n        return e ? exports.SignerInfo.toJSON(e) : undefined;\n      });\n    } else {\n      obj.signerInfos = [];\n    }\n    message.fee !== undefined && (obj.fee = message.fee ? exports.Fee.toJSON(message.fee) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseAuthInfo();\n    message.signerInfos = ((_a = object.signerInfos) === null || _a === void 0 ? void 0 : _a.map(function (e) {\n      return exports.SignerInfo.fromPartial(e);\n    })) || [];\n    message.fee = object.fee !== undefined && object.fee !== null ? exports.Fee.fromPartial(object.fee) : undefined;\n    return message;\n  }\n};\nfunction createBaseSignerInfo() {\n  return {\n    publicKey: undefined,\n    modeInfo: undefined,\n    sequence: long_1.default.UZERO\n  };\n}\nexports.SignerInfo = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.publicKey !== undefined) {\n      any_1.Any.encode(message.publicKey, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.modeInfo !== undefined) {\n      exports.ModeInfo.encode(message.modeInfo, writer.uint32(18).fork()).ldelim();\n    }\n    if (!message.sequence.isZero()) {\n      writer.uint32(24).uint64(message.sequence);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseSignerInfo();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.publicKey = any_1.Any.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.modeInfo = exports.ModeInfo.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.sequence = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      publicKey: isSet(object.publicKey) ? any_1.Any.fromJSON(object.publicKey) : undefined,\n      modeInfo: isSet(object.modeInfo) ? exports.ModeInfo.fromJSON(object.modeInfo) : undefined,\n      sequence: isSet(object.sequence) ? long_1.default.fromValue(object.sequence) : long_1.default.UZERO\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.publicKey !== undefined && (obj.publicKey = message.publicKey ? any_1.Any.toJSON(message.publicKey) : undefined);\n    message.modeInfo !== undefined && (obj.modeInfo = message.modeInfo ? exports.ModeInfo.toJSON(message.modeInfo) : undefined);\n    message.sequence !== undefined && (obj.sequence = (message.sequence || long_1.default.UZERO).toString());\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseSignerInfo();\n    message.publicKey = object.publicKey !== undefined && object.publicKey !== null ? any_1.Any.fromPartial(object.publicKey) : undefined;\n    message.modeInfo = object.modeInfo !== undefined && object.modeInfo !== null ? exports.ModeInfo.fromPartial(object.modeInfo) : undefined;\n    message.sequence = object.sequence !== undefined && object.sequence !== null ? long_1.default.fromValue(object.sequence) : long_1.default.UZERO;\n    return message;\n  }\n};\nfunction createBaseModeInfo() {\n  return {\n    single: undefined,\n    multi: undefined\n  };\n}\nexports.ModeInfo = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.single !== undefined) {\n      exports.ModeInfo_Single.encode(message.single, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.multi !== undefined) {\n      exports.ModeInfo_Multi.encode(message.multi, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseModeInfo();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.single = exports.ModeInfo_Single.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.multi = exports.ModeInfo_Multi.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      single: isSet(object.single) ? exports.ModeInfo_Single.fromJSON(object.single) : undefined,\n      multi: isSet(object.multi) ? exports.ModeInfo_Multi.fromJSON(object.multi) : undefined\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.single !== undefined && (obj.single = message.single ? exports.ModeInfo_Single.toJSON(message.single) : undefined);\n    message.multi !== undefined && (obj.multi = message.multi ? exports.ModeInfo_Multi.toJSON(message.multi) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseModeInfo();\n    message.single = object.single !== undefined && object.single !== null ? exports.ModeInfo_Single.fromPartial(object.single) : undefined;\n    message.multi = object.multi !== undefined && object.multi !== null ? exports.ModeInfo_Multi.fromPartial(object.multi) : undefined;\n    return message;\n  }\n};\nfunction createBaseModeInfo_Single() {\n  return {\n    mode: 0\n  };\n}\nexports.ModeInfo_Single = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.mode !== 0) {\n      writer.uint32(8).int32(message.mode);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseModeInfo_Single();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.mode = reader.int32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      mode: isSet(object.mode) ? (0, signing_1.signModeFromJSON)(object.mode) : 0\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.mode !== undefined && (obj.mode = (0, signing_1.signModeToJSON)(message.mode));\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseModeInfo_Single();\n    message.mode = (_a = object.mode) !== null && _a !== void 0 ? _a : 0;\n    return message;\n  }\n};\nfunction createBaseModeInfo_Multi() {\n  return {\n    bitarray: undefined,\n    modeInfos: []\n  };\n}\nexports.ModeInfo_Multi = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.bitarray !== undefined) {\n      multisig_1.CompactBitArray.encode(message.bitarray, writer.uint32(10).fork()).ldelim();\n    }\n    var _iterator7 = _createForOfIteratorHelper(message.modeInfos),\n      _step7;\n    try {\n      for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n        var v = _step7.value;\n        exports.ModeInfo.encode(v, writer.uint32(18).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator7.e(err);\n    } finally {\n      _iterator7.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseModeInfo_Multi();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.bitarray = multisig_1.CompactBitArray.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.modeInfos.push(exports.ModeInfo.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      bitarray: isSet(object.bitarray) ? multisig_1.CompactBitArray.fromJSON(object.bitarray) : undefined,\n      modeInfos: Array.isArray(object === null || object === void 0 ? void 0 : object.modeInfos) ? object.modeInfos.map(function (e) {\n        return exports.ModeInfo.fromJSON(e);\n      }) : []\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.bitarray !== undefined && (obj.bitarray = message.bitarray ? multisig_1.CompactBitArray.toJSON(message.bitarray) : undefined);\n    if (message.modeInfos) {\n      obj.modeInfos = message.modeInfos.map(function (e) {\n        return e ? exports.ModeInfo.toJSON(e) : undefined;\n      });\n    } else {\n      obj.modeInfos = [];\n    }\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseModeInfo_Multi();\n    message.bitarray = object.bitarray !== undefined && object.bitarray !== null ? multisig_1.CompactBitArray.fromPartial(object.bitarray) : undefined;\n    message.modeInfos = ((_a = object.modeInfos) === null || _a === void 0 ? void 0 : _a.map(function (e) {\n      return exports.ModeInfo.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nfunction createBaseFee() {\n  return {\n    amount: [],\n    gasLimit: long_1.default.UZERO,\n    payer: \"\",\n    granter: \"\"\n  };\n}\nexports.Fee = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    var _iterator8 = _createForOfIteratorHelper(message.amount),\n      _step8;\n    try {\n      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n        var v = _step8.value;\n        coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator8.e(err);\n    } finally {\n      _iterator8.f();\n    }\n    if (!message.gasLimit.isZero()) {\n      writer.uint32(16).uint64(message.gasLimit);\n    }\n    if (message.payer !== \"\") {\n      writer.uint32(26).string(message.payer);\n    }\n    if (message.granter !== \"\") {\n      writer.uint32(34).string(message.granter);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseFee();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.gasLimit = reader.uint64();\n          break;\n        case 3:\n          message.payer = reader.string();\n          break;\n        case 4:\n          message.granter = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      amount: Array.isArray(object === null || object === void 0 ? void 0 : object.amount) ? object.amount.map(function (e) {\n        return coin_1.Coin.fromJSON(e);\n      }) : [],\n      gasLimit: isSet(object.gasLimit) ? long_1.default.fromValue(object.gasLimit) : long_1.default.UZERO,\n      payer: isSet(object.payer) ? String(object.payer) : \"\",\n      granter: isSet(object.granter) ? String(object.granter) : \"\"\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    if (message.amount) {\n      obj.amount = message.amount.map(function (e) {\n        return e ? coin_1.Coin.toJSON(e) : undefined;\n      });\n    } else {\n      obj.amount = [];\n    }\n    message.gasLimit !== undefined && (obj.gasLimit = (message.gasLimit || long_1.default.UZERO).toString());\n    message.payer !== undefined && (obj.payer = message.payer);\n    message.granter !== undefined && (obj.granter = message.granter);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c;\n    var message = createBaseFee();\n    message.amount = ((_a = object.amount) === null || _a === void 0 ? void 0 : _a.map(function (e) {\n      return coin_1.Coin.fromPartial(e);\n    })) || [];\n    message.gasLimit = object.gasLimit !== undefined && object.gasLimit !== null ? long_1.default.fromValue(object.gasLimit) : long_1.default.UZERO;\n    message.payer = (_b = object.payer) !== null && _b !== void 0 ? _b : \"\";\n    message.granter = (_c = object.granter) !== null && _c !== void 0 ? _c : \"\";\n    return message;\n  }\n};\nvar globalThis = function () {\n  if (typeof globalThis !== \"undefined\") {\n    return globalThis;\n  }\n  if (typeof self !== \"undefined\") {\n    return self;\n  }\n  if (typeof window !== \"undefined\") {\n    return window;\n  }\n  if (typeof global !== \"undefined\") {\n    return global;\n  }\n  throw \"Unable to locate global object\";\n}();\nfunction bytesFromBase64(b64) {\n  if (globalThis.Buffer) {\n    return Uint8Array.from(globalThis.Buffer.from(b64, \"base64\"));\n  } else {\n    var bin = globalThis.atob(b64);\n    var arr = new Uint8Array(bin.length);\n    for (var i = 0; i < bin.length; ++i) {\n      arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n  }\n}\nfunction base64FromBytes(arr) {\n  if (globalThis.Buffer) {\n    return globalThis.Buffer.from(arr).toString(\"base64\");\n  } else {\n    var bin = [];\n    arr.forEach(function (byte) {\n      bin.push(String.fromCharCode(byte));\n    });\n    return globalThis.btoa(bin.join(\"\"));\n  }\n}\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}\nfunction isSet(value) {\n  return value !== null && value !== undefined;\n}","map":null,"metadata":{},"sourceType":"script"}