{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.QueryClientImpl = exports.QueryConnectionConsensusStateResponse = exports.QueryConnectionConsensusStateRequest = exports.QueryConnectionClientStateResponse = exports.QueryConnectionClientStateRequest = exports.QueryClientConnectionsResponse = exports.QueryClientConnectionsRequest = exports.QueryConnectionsResponse = exports.QueryConnectionsRequest = exports.QueryConnectionResponse = exports.QueryConnectionRequest = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nconst pagination_1 = require(\"../../../../cosmos/base/query/v1beta1/pagination\");\nconst any_1 = require(\"../../../../google/protobuf/any\");\nconst client_1 = require(\"../../client/v1/client\");\nconst connection_1 = require(\"./connection\");\nexports.protobufPackage = \"ibc.core.connection.v1\";\nfunction createBaseQueryConnectionRequest() {\n  return {\n    connectionId: \"\"\n  };\n}\nexports.QueryConnectionRequest = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.connectionId !== \"\") {\n      writer.uint32(10).string(message.connectionId);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryConnectionRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connectionId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      connectionId: isSet(object.connectionId) ? String(object.connectionId) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.connectionId !== undefined && (obj.connectionId = message.connectionId);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = createBaseQueryConnectionRequest();\n    message.connectionId = (_a = object.connectionId) !== null && _a !== void 0 ? _a : \"\";\n    return message;\n  }\n};\nfunction createBaseQueryConnectionResponse() {\n  return {\n    connection: undefined,\n    proof: new Uint8Array(),\n    proofHeight: undefined\n  };\n}\nexports.QueryConnectionResponse = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.connection !== undefined) {\n      connection_1.ConnectionEnd.encode(message.connection, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(18).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryConnectionResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connection = connection_1.ConnectionEnd.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.proof = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      connection: isSet(object.connection) ? connection_1.ConnectionEnd.fromJSON(object.connection) : undefined,\n      proof: isSet(object.proof) ? bytesFromBase64(object.proof) : new Uint8Array(),\n      proofHeight: isSet(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : undefined\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.connection !== undefined && (obj.connection = message.connection ? connection_1.ConnectionEnd.toJSON(message.connection) : undefined);\n    message.proof !== undefined && (obj.proof = base64FromBytes(message.proof !== undefined ? message.proof : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = createBaseQueryConnectionResponse();\n    message.connection = object.connection !== undefined && object.connection !== null ? connection_1.ConnectionEnd.fromPartial(object.connection) : undefined;\n    message.proof = (_a = object.proof) !== null && _a !== void 0 ? _a : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : undefined;\n    return message;\n  }\n};\nfunction createBaseQueryConnectionsRequest() {\n  return {\n    pagination: undefined\n  };\n}\nexports.QueryConnectionsRequest = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.pagination !== undefined) {\n      pagination_1.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryConnectionsRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      pagination: isSet(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : undefined\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.pagination !== undefined && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseQueryConnectionsRequest();\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : undefined;\n    return message;\n  }\n};\nfunction createBaseQueryConnectionsResponse() {\n  return {\n    connections: [],\n    pagination: undefined,\n    height: undefined\n  };\n}\nexports.QueryConnectionsResponse = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    for (const v of message.connections) {\n      connection_1.IdentifiedConnection.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.pagination !== undefined) {\n      pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.height !== undefined) {\n      client_1.Height.encode(message.height, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryConnectionsResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connections.push(connection_1.IdentifiedConnection.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.height = client_1.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      connections: Array.isArray(object === null || object === void 0 ? void 0 : object.connections) ? object.connections.map(e => connection_1.IdentifiedConnection.fromJSON(e)) : [],\n      pagination: isSet(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : undefined,\n      height: isSet(object.height) ? client_1.Height.fromJSON(object.height) : undefined\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.connections) {\n      obj.connections = message.connections.map(e => e ? connection_1.IdentifiedConnection.toJSON(e) : undefined);\n    } else {\n      obj.connections = [];\n    }\n    message.pagination !== undefined && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n    message.height !== undefined && (obj.height = message.height ? client_1.Height.toJSON(message.height) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = createBaseQueryConnectionsResponse();\n    message.connections = ((_a = object.connections) === null || _a === void 0 ? void 0 : _a.map(e => connection_1.IdentifiedConnection.fromPartial(e))) || [];\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : undefined;\n    message.height = object.height !== undefined && object.height !== null ? client_1.Height.fromPartial(object.height) : undefined;\n    return message;\n  }\n};\nfunction createBaseQueryClientConnectionsRequest() {\n  return {\n    clientId: \"\"\n  };\n}\nexports.QueryClientConnectionsRequest = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.clientId !== \"\") {\n      writer.uint32(10).string(message.clientId);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryClientConnectionsRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      clientId: isSet(object.clientId) ? String(object.clientId) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.clientId !== undefined && (obj.clientId = message.clientId);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = createBaseQueryClientConnectionsRequest();\n    message.clientId = (_a = object.clientId) !== null && _a !== void 0 ? _a : \"\";\n    return message;\n  }\n};\nfunction createBaseQueryClientConnectionsResponse() {\n  return {\n    connectionPaths: [],\n    proof: new Uint8Array(),\n    proofHeight: undefined\n  };\n}\nexports.QueryClientConnectionsResponse = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    for (const v of message.connectionPaths) {\n      writer.uint32(10).string(v);\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(18).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryClientConnectionsResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connectionPaths.push(reader.string());\n          break;\n        case 2:\n          message.proof = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      connectionPaths: Array.isArray(object === null || object === void 0 ? void 0 : object.connectionPaths) ? object.connectionPaths.map(e => String(e)) : [],\n      proof: isSet(object.proof) ? bytesFromBase64(object.proof) : new Uint8Array(),\n      proofHeight: isSet(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : undefined\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.connectionPaths) {\n      obj.connectionPaths = message.connectionPaths.map(e => e);\n    } else {\n      obj.connectionPaths = [];\n    }\n    message.proof !== undefined && (obj.proof = base64FromBytes(message.proof !== undefined ? message.proof : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b;\n    const message = createBaseQueryClientConnectionsResponse();\n    message.connectionPaths = ((_a = object.connectionPaths) === null || _a === void 0 ? void 0 : _a.map(e => e)) || [];\n    message.proof = (_b = object.proof) !== null && _b !== void 0 ? _b : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : undefined;\n    return message;\n  }\n};\nfunction createBaseQueryConnectionClientStateRequest() {\n  return {\n    connectionId: \"\"\n  };\n}\nexports.QueryConnectionClientStateRequest = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.connectionId !== \"\") {\n      writer.uint32(10).string(message.connectionId);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryConnectionClientStateRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connectionId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      connectionId: isSet(object.connectionId) ? String(object.connectionId) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.connectionId !== undefined && (obj.connectionId = message.connectionId);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = createBaseQueryConnectionClientStateRequest();\n    message.connectionId = (_a = object.connectionId) !== null && _a !== void 0 ? _a : \"\";\n    return message;\n  }\n};\nfunction createBaseQueryConnectionClientStateResponse() {\n  return {\n    identifiedClientState: undefined,\n    proof: new Uint8Array(),\n    proofHeight: undefined\n  };\n}\nexports.QueryConnectionClientStateResponse = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.identifiedClientState !== undefined) {\n      client_1.IdentifiedClientState.encode(message.identifiedClientState, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(18).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryConnectionClientStateResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.identifiedClientState = client_1.IdentifiedClientState.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.proof = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      identifiedClientState: isSet(object.identifiedClientState) ? client_1.IdentifiedClientState.fromJSON(object.identifiedClientState) : undefined,\n      proof: isSet(object.proof) ? bytesFromBase64(object.proof) : new Uint8Array(),\n      proofHeight: isSet(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : undefined\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.identifiedClientState !== undefined && (obj.identifiedClientState = message.identifiedClientState ? client_1.IdentifiedClientState.toJSON(message.identifiedClientState) : undefined);\n    message.proof !== undefined && (obj.proof = base64FromBytes(message.proof !== undefined ? message.proof : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = createBaseQueryConnectionClientStateResponse();\n    message.identifiedClientState = object.identifiedClientState !== undefined && object.identifiedClientState !== null ? client_1.IdentifiedClientState.fromPartial(object.identifiedClientState) : undefined;\n    message.proof = (_a = object.proof) !== null && _a !== void 0 ? _a : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : undefined;\n    return message;\n  }\n};\nfunction createBaseQueryConnectionConsensusStateRequest() {\n  return {\n    connectionId: \"\",\n    revisionNumber: long_1.default.UZERO,\n    revisionHeight: long_1.default.UZERO\n  };\n}\nexports.QueryConnectionConsensusStateRequest = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.connectionId !== \"\") {\n      writer.uint32(10).string(message.connectionId);\n    }\n    if (!message.revisionNumber.isZero()) {\n      writer.uint32(16).uint64(message.revisionNumber);\n    }\n    if (!message.revisionHeight.isZero()) {\n      writer.uint32(24).uint64(message.revisionHeight);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryConnectionConsensusStateRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connectionId = reader.string();\n          break;\n        case 2:\n          message.revisionNumber = reader.uint64();\n          break;\n        case 3:\n          message.revisionHeight = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      connectionId: isSet(object.connectionId) ? String(object.connectionId) : \"\",\n      revisionNumber: isSet(object.revisionNumber) ? long_1.default.fromValue(object.revisionNumber) : long_1.default.UZERO,\n      revisionHeight: isSet(object.revisionHeight) ? long_1.default.fromValue(object.revisionHeight) : long_1.default.UZERO\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.connectionId !== undefined && (obj.connectionId = message.connectionId);\n    message.revisionNumber !== undefined && (obj.revisionNumber = (message.revisionNumber || long_1.default.UZERO).toString());\n    message.revisionHeight !== undefined && (obj.revisionHeight = (message.revisionHeight || long_1.default.UZERO).toString());\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = createBaseQueryConnectionConsensusStateRequest();\n    message.connectionId = (_a = object.connectionId) !== null && _a !== void 0 ? _a : \"\";\n    message.revisionNumber = object.revisionNumber !== undefined && object.revisionNumber !== null ? long_1.default.fromValue(object.revisionNumber) : long_1.default.UZERO;\n    message.revisionHeight = object.revisionHeight !== undefined && object.revisionHeight !== null ? long_1.default.fromValue(object.revisionHeight) : long_1.default.UZERO;\n    return message;\n  }\n};\nfunction createBaseQueryConnectionConsensusStateResponse() {\n  return {\n    consensusState: undefined,\n    clientId: \"\",\n    proof: new Uint8Array(),\n    proofHeight: undefined\n  };\n}\nexports.QueryConnectionConsensusStateResponse = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.consensusState !== undefined) {\n      any_1.Any.encode(message.consensusState, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.clientId !== \"\") {\n      writer.uint32(18).string(message.clientId);\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(26).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryConnectionConsensusStateResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.consensusState = any_1.Any.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.clientId = reader.string();\n          break;\n        case 3:\n          message.proof = reader.bytes();\n          break;\n        case 4:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      consensusState: isSet(object.consensusState) ? any_1.Any.fromJSON(object.consensusState) : undefined,\n      clientId: isSet(object.clientId) ? String(object.clientId) : \"\",\n      proof: isSet(object.proof) ? bytesFromBase64(object.proof) : new Uint8Array(),\n      proofHeight: isSet(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : undefined\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.consensusState !== undefined && (obj.consensusState = message.consensusState ? any_1.Any.toJSON(message.consensusState) : undefined);\n    message.clientId !== undefined && (obj.clientId = message.clientId);\n    message.proof !== undefined && (obj.proof = base64FromBytes(message.proof !== undefined ? message.proof : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b;\n    const message = createBaseQueryConnectionConsensusStateResponse();\n    message.consensusState = object.consensusState !== undefined && object.consensusState !== null ? any_1.Any.fromPartial(object.consensusState) : undefined;\n    message.clientId = (_a = object.clientId) !== null && _a !== void 0 ? _a : \"\";\n    message.proof = (_b = object.proof) !== null && _b !== void 0 ? _b : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : undefined;\n    return message;\n  }\n};\nclass QueryClientImpl {\n  constructor(rpc) {\n    this.rpc = rpc;\n    this.Connection = this.Connection.bind(this);\n    this.Connections = this.Connections.bind(this);\n    this.ClientConnections = this.ClientConnections.bind(this);\n    this.ConnectionClientState = this.ConnectionClientState.bind(this);\n    this.ConnectionConsensusState = this.ConnectionConsensusState.bind(this);\n  }\n  Connection(request) {\n    const data = exports.QueryConnectionRequest.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.connection.v1.Query\", \"Connection\", data);\n    return promise.then(data => exports.QueryConnectionResponse.decode(new minimal_1.default.Reader(data)));\n  }\n  Connections(request) {\n    const data = exports.QueryConnectionsRequest.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.connection.v1.Query\", \"Connections\", data);\n    return promise.then(data => exports.QueryConnectionsResponse.decode(new minimal_1.default.Reader(data)));\n  }\n  ClientConnections(request) {\n    const data = exports.QueryClientConnectionsRequest.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.connection.v1.Query\", \"ClientConnections\", data);\n    return promise.then(data => exports.QueryClientConnectionsResponse.decode(new minimal_1.default.Reader(data)));\n  }\n  ConnectionClientState(request) {\n    const data = exports.QueryConnectionClientStateRequest.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.connection.v1.Query\", \"ConnectionClientState\", data);\n    return promise.then(data => exports.QueryConnectionClientStateResponse.decode(new minimal_1.default.Reader(data)));\n  }\n  ConnectionConsensusState(request) {\n    const data = exports.QueryConnectionConsensusStateRequest.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.connection.v1.Query\", \"ConnectionConsensusState\", data);\n    return promise.then(data => exports.QueryConnectionConsensusStateResponse.decode(new minimal_1.default.Reader(data)));\n  }\n}\nexports.QueryClientImpl = QueryClientImpl;\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") {\n    return globalThis;\n  }\n  if (typeof self !== \"undefined\") {\n    return self;\n  }\n  if (typeof window !== \"undefined\") {\n    return window;\n  }\n  if (typeof global !== \"undefined\") {\n    return global;\n  }\n  throw \"Unable to locate global object\";\n})();\nfunction bytesFromBase64(b64) {\n  if (globalThis.Buffer) {\n    return Uint8Array.from(globalThis.Buffer.from(b64, \"base64\"));\n  } else {\n    const bin = globalThis.atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n      arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n  }\n}\nfunction base64FromBytes(arr) {\n  if (globalThis.Buffer) {\n    return globalThis.Buffer.from(arr).toString(\"base64\");\n  } else {\n    const bin = [];\n    arr.forEach(byte => {\n      bin.push(String.fromCharCode(byte));\n    });\n    return globalThis.btoa(bin.join(\"\"));\n  }\n}\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}\nfunction isSet(value) {\n  return value !== null && value !== undefined;\n}","map":{"version":3,"names":["long_1","__importDefault","require","minimal_1","pagination_1","any_1","client_1","connection_1","exports","protobufPackage","createBaseQueryConnectionRequest","connectionId","QueryConnectionRequest","encode","message","writer","default","Writer","create","uint32","string","decode","input","length","reader","Reader","end","undefined","len","pos","tag","skipType","fromJSON","object","isSet","String","toJSON","obj","fromPartial","_a","createBaseQueryConnectionResponse","connection","proof","Uint8Array","proofHeight","QueryConnectionResponse","ConnectionEnd","fork","ldelim","bytes","Height","bytesFromBase64","base64FromBytes","createBaseQueryConnectionsRequest","pagination","QueryConnectionsRequest","PageRequest","createBaseQueryConnectionsResponse","connections","height","QueryConnectionsResponse","v","IdentifiedConnection","PageResponse","push","Array","isArray","map","e","createBaseQueryClientConnectionsRequest","clientId","QueryClientConnectionsRequest","createBaseQueryClientConnectionsResponse","connectionPaths","QueryClientConnectionsResponse","_b","createBaseQueryConnectionClientStateRequest","QueryConnectionClientStateRequest","createBaseQueryConnectionClientStateResponse","identifiedClientState","QueryConnectionClientStateResponse","IdentifiedClientState","createBaseQueryConnectionConsensusStateRequest","revisionNumber","UZERO","revisionHeight","QueryConnectionConsensusStateRequest","isZero","uint64","fromValue","toString","createBaseQueryConnectionConsensusStateResponse","consensusState","QueryConnectionConsensusStateResponse","Any","QueryClientImpl","constructor","rpc","Connection","bind","Connections","ClientConnections","ConnectionClientState","ConnectionConsensusState","request","data","finish","promise","then","globalThis","self","window","global","b64","Buffer","from","bin","atob","arr","i","charCodeAt","forEach","byte","fromCharCode","btoa","join","util","Long","configure","value"],"sources":["../../../../../src/ibc/core/connection/v1/query.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script"}