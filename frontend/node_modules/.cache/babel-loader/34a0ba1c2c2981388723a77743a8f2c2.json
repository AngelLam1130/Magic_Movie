{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LCDQueryClient = void 0;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _helpers = require(\"../../../../helpers\");\nvar LCDQueryClient = /*#__PURE__*/function () {\n  function LCDQueryClient(_ref) {\n    var requestClient = _ref.requestClient;\n    (0, _classCallCheck2[\"default\"])(this, LCDQueryClient);\n    (0, _defineProperty2[\"default\"])(this, \"req\", void 0);\n    this.req = requestClient;\n    this.connection = this.connection.bind(this);\n    this.connections = this.connections.bind(this);\n    this.clientConnections = this.clientConnections.bind(this);\n    this.connectionClientState = this.connectionClientState.bind(this);\n    this.connectionConsensusState = this.connectionConsensusState.bind(this);\n  }\n  /* Connection queries an IBC connection end. */\n  (0, _createClass2[\"default\"])(LCDQueryClient, [{\n    key: \"connection\",\n    value: function () {\n      var _connection = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(params) {\n        var endpoint;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              endpoint = \"ibc/core/connection/v1/connections/\".concat(params.connectionId);\n              _context.next = 3;\n              return this.req.get(endpoint);\n            case 3:\n              return _context.abrupt(\"return\", _context.sent);\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function connection(_x) {\n        return _connection.apply(this, arguments);\n      }\n      return connection;\n    }() /* Connections queries all the IBC connections of a chain. */\n  }, {\n    key: \"connections\",\n    value: function () {\n      var _connections = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        var params,\n          options,\n          endpoint,\n          _args2 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              params = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {\n                pagination: undefined\n              };\n              options = {\n                params: {}\n              };\n              if (typeof (params === null || params === void 0 ? void 0 : params.pagination) !== \"undefined\") {\n                (0, _helpers.setPaginationParams)(options, params.pagination);\n              }\n              endpoint = \"ibc/core/connection/v1/connections\";\n              _context2.next = 6;\n              return this.req.get(endpoint, options);\n            case 6:\n              return _context2.abrupt(\"return\", _context2.sent);\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function connections() {\n        return _connections.apply(this, arguments);\n      }\n      return connections;\n    }()\n    /* ClientConnections queries the connection paths associated with a client\n     state. */\n  }, {\n    key: \"clientConnections\",\n    value: function () {\n      var _clientConnections = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(params) {\n        var endpoint;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              endpoint = \"ibc/core/connection/v1/client_connections/\".concat(params.clientId);\n              _context3.next = 3;\n              return this.req.get(endpoint);\n            case 3:\n              return _context3.abrupt(\"return\", _context3.sent);\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function clientConnections(_x2) {\n        return _clientConnections.apply(this, arguments);\n      }\n      return clientConnections;\n    }()\n    /* ConnectionClientState queries the client state associated with the\n     connection. */\n  }, {\n    key: \"connectionClientState\",\n    value: function () {\n      var _connectionClientState = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(params) {\n        var endpoint;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              endpoint = \"ibc/core/connection/v1/connections/\".concat(params.connectionId, \"/client_state\");\n              _context4.next = 3;\n              return this.req.get(endpoint);\n            case 3:\n              return _context4.abrupt(\"return\", _context4.sent);\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function connectionClientState(_x3) {\n        return _connectionClientState.apply(this, arguments);\n      }\n      return connectionClientState;\n    }()\n    /* ConnectionConsensusState queries the consensus state associated with the\n     connection. */\n  }, {\n    key: \"connectionConsensusState\",\n    value: function () {\n      var _connectionConsensusState = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(params) {\n        var endpoint;\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              endpoint = \"ibc/core/connection/v1/connections/\".concat(params.connectionId, \"/consensus_state/revision/\").concat(params.revisionNumber, \"/height/\").concat(params.revisionHeight);\n              _context5.next = 3;\n              return this.req.get(endpoint);\n            case 3:\n              return _context5.abrupt(\"return\", _context5.sent);\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function connectionConsensusState(_x4) {\n        return _connectionConsensusState.apply(this, arguments);\n      }\n      return connectionConsensusState;\n    }()\n  }]);\n  return LCDQueryClient;\n}();\nexports.LCDQueryClient = LCDQueryClient;","map":null,"metadata":{},"sourceType":"script"}