{"ast":null,"code":"import _objectDestructuringEmpty from \"/Users/linanqi/Hackathon/RKA-808/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport _slicedToArray from \"/Users/linanqi/Hackathon/RKA-808/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/linanqi/Hackathon/RKA-808/frontend/src/components/UploadedMusic.js\";\nimport React, { useContext, memo, useState } from 'react';\nimport { Context } from '../hooks/useStore';\nimport './UploadedMusic.css';\nconst INVERT_AUDIO_ENDPOINT = \"http://34.86.80.211:8080/invert_audio\";\n\nconst UploadedMusic = ({}) => {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        file = _useState2[0],\n        setFile = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        pending = _useState4[0],\n        setPending = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        audioUrl = _useState6[0],\n        setAudioUrl = _useState6[1];\n\n  const _useContext = useContext(Context);\n\n  _objectDestructuringEmpty(_useContext);\n\n  function handleDownload(version) {\n    // Replace 'url' with the actual endpoint to download the processed file\n    const downloadURL = INVERT_AUDIO_ENDPOINT;\n    fetch(downloadURL).then(response => response.blob()) // Get the response as a blob\n    .then(blob => {\n      // Create a download link and trigger the download\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', \"Music_Version_\".concat(version, \".wav\"));\n      document.body.appendChild(link);\n      link.click();\n    }).catch(error => {\n      console.error('Error downloading file:', error);\n    });\n  }\n\n  function handleUploadMusicFile(e) {\n    e.preventDefault();\n\n    if (pending) {\n      return;\n    }\n\n    setPending(true);\n    const formData = new FormData();\n    formData.append('file', file);\n    console.log(\"UPLOAD FILE\"); // Replace 'uploadUrl' with the actual endpoint to handle file upload\n\n    const uploadUrl = INVERT_AUDIO_ENDPOINT;\n    fetch(uploadUrl, {\n      method: 'POST',\n      body: formData\n    }).then(response => {\n      setPending(false);\n      console.log(\"Inverted file!\");\n      console.log(response);\n      fetchAndPlayAudio(response);\n    }).catch(error => {\n      setPending(false);\n      console.error('Error uploading file:', error);\n    });\n  }\n\n  function handleMusicFile(event) {\n    setFile(event.target.files[0]); // Handle the selected file, e.g., upload it to the server or process it\n\n    console.log(event.target.files[0]);\n  }\n\n  function fetchAudio() {\n    // Replace 'url' with the actual endpoint to download the processed file\n    const downloadURL = \"url/version/1\"; // Replace '1' with the appropriate version\n\n    fetch(downloadURL).then(response => response.blob()).then(blob => {\n      const audioBlob = new Blob([blob], {\n        type: 'audio/wav'\n      }); // Replace with the appropriate audio type\n\n      setAudioUrl(URL.createObjectURL(audioBlob));\n    }).catch(error => {\n      console.error('Error fetching audio file:', error);\n    });\n  }\n\n  function fetchAndPlayAudio(response) {\n    response.blob().then(blob => {\n      const audioBlob = new Blob([blob], {\n        type: 'audio/mpeg'\n      }); // Replace with the appropriate audio type\n\n      setAudioUrl(URL.createObjectURL(audioBlob));\n    }).catch(error => {\n      console.error('Error fetching audio file:', error);\n    });\n  }\n\n  return React.createElement(\"nav\", {\n    className: \"UploadedMusicBar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleUploadMusicFile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form_container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"file\",\n    name: \"file\",\n    className: \"form_element\",\n    onChange: handleMusicFile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"form_element\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, pending ? \"Doing neural magic...\" : \"Generate from Uploaded Music\"))), React.createElement(\"div\", {\n    className: \"optionChoice\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Music Version 1\"), React.createElement(\"audio\", {\n    controls: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"source\", {\n    src: audioUrl,\n    type: \"audio/wav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), \" \"), React.createElement(\"button\", {\n    className: \"form_element\",\n    onClick: () => handleDownload(1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Download\")), React.createElement(\"div\", {\n    className: \"optionChoice\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Music Version 2\"), React.createElement(\"audio\", {\n    controls: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"source\", {\n    src: audioUrl,\n    type: \"audio/wav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), \" \"), React.createElement(\"button\", {\n    className: \"form_element\",\n    onClick: () => handleDownload(2),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Download\")), React.createElement(\"div\", {\n    className: \"optionChoice\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Music Version 3\"), React.createElement(\"audio\", {\n    controls: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"source\", {\n    src: audioUrl,\n    type: \"audio/wav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), \" \"), React.createElement(\"button\", {\n    className: \"form_element\",\n    onClick: () => handleDownload(3),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Download\")));\n};\n\nexport default memo(UploadedMusic);","map":{"version":3,"sources":["/Users/linanqi/Hackathon/RKA-808/frontend/src/components/UploadedMusic.js"],"names":["React","useContext","memo","useState","Context","INVERT_AUDIO_ENDPOINT","UploadedMusic","file","setFile","pending","setPending","audioUrl","setAudioUrl","handleDownload","version","downloadURL","fetch","then","response","blob","url","window","URL","createObjectURL","link","document","createElement","href","setAttribute","body","appendChild","click","catch","error","console","handleUploadMusicFile","e","preventDefault","formData","FormData","append","log","uploadUrl","method","fetchAndPlayAudio","handleMusicFile","event","target","files","fetchAudio","audioBlob","Blob","type"],"mappings":"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","sourcesContent":["import React, { useContext, memo ,useState} from 'react'\nimport { Context } from '../hooks/useStore'\nimport './UploadedMusic.css'\n\nconst INVERT_AUDIO_ENDPOINT = \"http://34.86.80.211:8080/invert_audio\"\n\nconst UploadedMusic = ({}) => {\n    const[file,setFile] = useState();\n    const[pending, setPending] = useState(false);\n    const [audioUrl, setAudioUrl] = useState(null);\n    const {  } = useContext(Context)\n\n    function handleDownload(version) {\n        // Replace 'url' with the actual endpoint to download the processed file\n        const downloadURL = INVERT_AUDIO_ENDPOINT;\n\n        fetch(downloadURL)\n        .then((response) => response.blob()) // Get the response as a blob\n        .then((blob) => {\n            // Create a download link and trigger the download\n            const url = window.URL.createObjectURL(blob);\n            const link = document.createElement('a');\n            link.href = url;\n            link.setAttribute('download', `Music_Version_${version}.wav`);\n            document.body.appendChild(link);\n            link.click();\n        })\n        .catch((error) => {\n            console.error('Error downloading file:', error);\n        });\n    }\n\n    function handleUploadMusicFile(e) {\n        e.preventDefault();\n        if (pending) {\n            return;\n        }\n        setPending(true);\n        const formData = new FormData();\n        formData.append('file', file);\n\n        console.log(\"UPLOAD FILE\");\n\n        // Replace 'uploadUrl' with the actual endpoint to handle file upload\n        const uploadUrl = INVERT_AUDIO_ENDPOINT;\n\n        fetch(uploadUrl, {\n            method: 'POST',\n            body: formData,\n        })\n            .then((response) => {\n                setPending(false);\n                console.log(\"Inverted file!\");\n                console.log(response)\n                fetchAndPlayAudio(response);\n            })\n            .catch((error) => {\n                setPending(false);\n                console.error('Error uploading file:', error);\n            });\n    }\n\n    function handleMusicFile(event) {\n        setFile(event.target.files[0]);\n        // Handle the selected file, e.g., upload it to the server or process it\n        console.log(event.target.files[0]);\n    }\n\n    function fetchAudio() {\n        // Replace 'url' with the actual endpoint to download the processed file\n        const downloadURL = `url/version/1`; // Replace '1' with the appropriate version\n    \n        fetch(downloadURL)\n          .then((response) => response.blob())\n          .then((blob) => {\n            const audioBlob = new Blob([blob], { type: 'audio/wav' }); // Replace with the appropriate audio type\n            setAudioUrl(URL.createObjectURL(audioBlob));\n          })\n          .catch((error) => {\n            console.error('Error fetching audio file:', error);\n          });\n    }\n\n    function fetchAndPlayAudio(response) {\n        response.blob().then((blob) => {\n          const audioBlob = new Blob([blob], { type: 'audio/mpeg' }); // Replace with the appropriate audio type\n          setAudioUrl(URL.createObjectURL(audioBlob));\n        }).catch((error) => {\n          console.error('Error fetching audio file:', error);\n        });\n    }\n\n\n\n    return (\n        <nav className=\"UploadedMusicBar\">\n            <form onSubmit={handleUploadMusicFile}>\n                <div className=\"form_container\">\n                    <input type=\"file\" name=\"file\" className=\"form_element\" onChange={handleMusicFile} />\n                    <button className=\"form_element\" type=\"submit\">{\n                        pending ? \"Doing neural magic...\" : \"Generate from Uploaded Music\"\n                    }</button>\n                </div>\n            </form>\n            <div className=\"optionChoice\">\n                <h3>Music Version 1</h3>\n                <audio controls>\n                    <source src={audioUrl} type=\"audio/wav\" /> {/* 替换为实际的音频类型 */}\n                </audio>\n                <button className=\"form_element\" onClick={() => handleDownload(1)}>Download</button>\n            </div>\n            <div className=\"optionChoice\">\n                <h3>Music Version 2</h3>\n                <audio controls>\n                    <source src={audioUrl} type=\"audio/wav\" /> {/* 替换为实际的音频类型 */}\n                </audio>\n                <button className=\"form_element\" onClick={() => handleDownload(2)}>Download</button>\n            </div>\n            <div className=\"optionChoice\">\n                <h3>Music Version 3</h3>\n                <audio controls>\n                    <source src={audioUrl} type=\"audio/wav\" /> {/* 替换为实际的音频类型 */}\n                </audio>\n                <button className=\"form_element\" onClick={() => handleDownload(3)}>Download</button>\n            </div>\n        </nav>\n    )\n}\n\nexport default memo(UploadedMusic)\n"]},"metadata":{},"sourceType":"module"}