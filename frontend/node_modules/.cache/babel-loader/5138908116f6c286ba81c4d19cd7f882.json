{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgClientImpl = exports.MsgConnectionOpenConfirmResponse = exports.MsgConnectionOpenConfirm = exports.MsgConnectionOpenAckResponse = exports.MsgConnectionOpenAck = exports.MsgConnectionOpenTryResponse = exports.MsgConnectionOpenTry = exports.MsgConnectionOpenInitResponse = exports.MsgConnectionOpenInit = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nconst any_1 = require(\"../../../../google/protobuf/any\");\nconst client_1 = require(\"../../client/v1/client\");\nconst connection_1 = require(\"./connection\");\nexports.protobufPackage = \"ibc.core.connection.v1\";\nfunction createBaseMsgConnectionOpenInit() {\n  return {\n    clientId: \"\",\n    counterparty: undefined,\n    version: undefined,\n    delayPeriod: long_1.default.UZERO,\n    signer: \"\"\n  };\n}\nexports.MsgConnectionOpenInit = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.clientId !== \"\") {\n      writer.uint32(10).string(message.clientId);\n    }\n    if (message.counterparty !== undefined) {\n      connection_1.Counterparty.encode(message.counterparty, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.version !== undefined) {\n      connection_1.Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n    }\n    if (!message.delayPeriod.isZero()) {\n      writer.uint32(32).uint64(message.delayPeriod);\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(42).string(message.signer);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgConnectionOpenInit();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n        case 2:\n          message.counterparty = connection_1.Counterparty.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.version = connection_1.Version.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.delayPeriod = reader.uint64();\n          break;\n        case 5:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      clientId: isSet(object.clientId) ? String(object.clientId) : \"\",\n      counterparty: isSet(object.counterparty) ? connection_1.Counterparty.fromJSON(object.counterparty) : undefined,\n      version: isSet(object.version) ? connection_1.Version.fromJSON(object.version) : undefined,\n      delayPeriod: isSet(object.delayPeriod) ? long_1.default.fromValue(object.delayPeriod) : long_1.default.UZERO,\n      signer: isSet(object.signer) ? String(object.signer) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.clientId !== undefined && (obj.clientId = message.clientId);\n    message.counterparty !== undefined && (obj.counterparty = message.counterparty ? connection_1.Counterparty.toJSON(message.counterparty) : undefined);\n    message.version !== undefined && (obj.version = message.version ? connection_1.Version.toJSON(message.version) : undefined);\n    message.delayPeriod !== undefined && (obj.delayPeriod = (message.delayPeriod || long_1.default.UZERO).toString());\n    message.signer !== undefined && (obj.signer = message.signer);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b;\n    const message = createBaseMsgConnectionOpenInit();\n    message.clientId = (_a = object.clientId) !== null && _a !== void 0 ? _a : \"\";\n    message.counterparty = object.counterparty !== undefined && object.counterparty !== null ? connection_1.Counterparty.fromPartial(object.counterparty) : undefined;\n    message.version = object.version !== undefined && object.version !== null ? connection_1.Version.fromPartial(object.version) : undefined;\n    message.delayPeriod = object.delayPeriod !== undefined && object.delayPeriod !== null ? long_1.default.fromValue(object.delayPeriod) : long_1.default.UZERO;\n    message.signer = (_b = object.signer) !== null && _b !== void 0 ? _b : \"\";\n    return message;\n  }\n};\nfunction createBaseMsgConnectionOpenInitResponse() {\n  return {};\n}\nexports.MsgConnectionOpenInitResponse = {\n  encode(_, writer = minimal_1.default.Writer.create()) {\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgConnectionOpenInitResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    return {};\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = createBaseMsgConnectionOpenInitResponse();\n    return message;\n  }\n};\nfunction createBaseMsgConnectionOpenTry() {\n  return {\n    clientId: \"\",\n    previousConnectionId: \"\",\n    clientState: undefined,\n    counterparty: undefined,\n    delayPeriod: long_1.default.UZERO,\n    counterpartyVersions: [],\n    proofHeight: undefined,\n    proofInit: new Uint8Array(),\n    proofClient: new Uint8Array(),\n    proofConsensus: new Uint8Array(),\n    consensusHeight: undefined,\n    signer: \"\"\n  };\n}\nexports.MsgConnectionOpenTry = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.clientId !== \"\") {\n      writer.uint32(10).string(message.clientId);\n    }\n    if (message.previousConnectionId !== \"\") {\n      writer.uint32(18).string(message.previousConnectionId);\n    }\n    if (message.clientState !== undefined) {\n      any_1.Any.encode(message.clientState, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.counterparty !== undefined) {\n      connection_1.Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n    }\n    if (!message.delayPeriod.isZero()) {\n      writer.uint32(40).uint64(message.delayPeriod);\n    }\n    for (const v of message.counterpartyVersions) {\n      connection_1.Version.encode(v, writer.uint32(50).fork()).ldelim();\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(58).fork()).ldelim();\n    }\n    if (message.proofInit.length !== 0) {\n      writer.uint32(66).bytes(message.proofInit);\n    }\n    if (message.proofClient.length !== 0) {\n      writer.uint32(74).bytes(message.proofClient);\n    }\n    if (message.proofConsensus.length !== 0) {\n      writer.uint32(82).bytes(message.proofConsensus);\n    }\n    if (message.consensusHeight !== undefined) {\n      client_1.Height.encode(message.consensusHeight, writer.uint32(90).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(98).string(message.signer);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgConnectionOpenTry();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n        case 2:\n          message.previousConnectionId = reader.string();\n          break;\n        case 3:\n          message.clientState = any_1.Any.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.counterparty = connection_1.Counterparty.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.delayPeriod = reader.uint64();\n          break;\n        case 6:\n          message.counterpartyVersions.push(connection_1.Version.decode(reader, reader.uint32()));\n          break;\n        case 7:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        case 8:\n          message.proofInit = reader.bytes();\n          break;\n        case 9:\n          message.proofClient = reader.bytes();\n          break;\n        case 10:\n          message.proofConsensus = reader.bytes();\n          break;\n        case 11:\n          message.consensusHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        case 12:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      clientId: isSet(object.clientId) ? String(object.clientId) : \"\",\n      previousConnectionId: isSet(object.previousConnectionId) ? String(object.previousConnectionId) : \"\",\n      clientState: isSet(object.clientState) ? any_1.Any.fromJSON(object.clientState) : undefined,\n      counterparty: isSet(object.counterparty) ? connection_1.Counterparty.fromJSON(object.counterparty) : undefined,\n      delayPeriod: isSet(object.delayPeriod) ? long_1.default.fromValue(object.delayPeriod) : long_1.default.UZERO,\n      counterpartyVersions: Array.isArray(object === null || object === void 0 ? void 0 : object.counterpartyVersions) ? object.counterpartyVersions.map(e => connection_1.Version.fromJSON(e)) : [],\n      proofHeight: isSet(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : undefined,\n      proofInit: isSet(object.proofInit) ? bytesFromBase64(object.proofInit) : new Uint8Array(),\n      proofClient: isSet(object.proofClient) ? bytesFromBase64(object.proofClient) : new Uint8Array(),\n      proofConsensus: isSet(object.proofConsensus) ? bytesFromBase64(object.proofConsensus) : new Uint8Array(),\n      consensusHeight: isSet(object.consensusHeight) ? client_1.Height.fromJSON(object.consensusHeight) : undefined,\n      signer: isSet(object.signer) ? String(object.signer) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.clientId !== undefined && (obj.clientId = message.clientId);\n    message.previousConnectionId !== undefined && (obj.previousConnectionId = message.previousConnectionId);\n    message.clientState !== undefined && (obj.clientState = message.clientState ? any_1.Any.toJSON(message.clientState) : undefined);\n    message.counterparty !== undefined && (obj.counterparty = message.counterparty ? connection_1.Counterparty.toJSON(message.counterparty) : undefined);\n    message.delayPeriod !== undefined && (obj.delayPeriod = (message.delayPeriod || long_1.default.UZERO).toString());\n    if (message.counterpartyVersions) {\n      obj.counterpartyVersions = message.counterpartyVersions.map(e => e ? connection_1.Version.toJSON(e) : undefined);\n    } else {\n      obj.counterpartyVersions = [];\n    }\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    message.proofInit !== undefined && (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n    message.proofClient !== undefined && (obj.proofClient = base64FromBytes(message.proofClient !== undefined ? message.proofClient : new Uint8Array()));\n    message.proofConsensus !== undefined && (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined ? message.proofConsensus : new Uint8Array()));\n    message.consensusHeight !== undefined && (obj.consensusHeight = message.consensusHeight ? client_1.Height.toJSON(message.consensusHeight) : undefined);\n    message.signer !== undefined && (obj.signer = message.signer);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b, _c, _d, _e, _f, _g;\n    const message = createBaseMsgConnectionOpenTry();\n    message.clientId = (_a = object.clientId) !== null && _a !== void 0 ? _a : \"\";\n    message.previousConnectionId = (_b = object.previousConnectionId) !== null && _b !== void 0 ? _b : \"\";\n    message.clientState = object.clientState !== undefined && object.clientState !== null ? any_1.Any.fromPartial(object.clientState) : undefined;\n    message.counterparty = object.counterparty !== undefined && object.counterparty !== null ? connection_1.Counterparty.fromPartial(object.counterparty) : undefined;\n    message.delayPeriod = object.delayPeriod !== undefined && object.delayPeriod !== null ? long_1.default.fromValue(object.delayPeriod) : long_1.default.UZERO;\n    message.counterpartyVersions = ((_c = object.counterpartyVersions) === null || _c === void 0 ? void 0 : _c.map(e => connection_1.Version.fromPartial(e))) || [];\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : undefined;\n    message.proofInit = (_d = object.proofInit) !== null && _d !== void 0 ? _d : new Uint8Array();\n    message.proofClient = (_e = object.proofClient) !== null && _e !== void 0 ? _e : new Uint8Array();\n    message.proofConsensus = (_f = object.proofConsensus) !== null && _f !== void 0 ? _f : new Uint8Array();\n    message.consensusHeight = object.consensusHeight !== undefined && object.consensusHeight !== null ? client_1.Height.fromPartial(object.consensusHeight) : undefined;\n    message.signer = (_g = object.signer) !== null && _g !== void 0 ? _g : \"\";\n    return message;\n  }\n};\nfunction createBaseMsgConnectionOpenTryResponse() {\n  return {};\n}\nexports.MsgConnectionOpenTryResponse = {\n  encode(_, writer = minimal_1.default.Writer.create()) {\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgConnectionOpenTryResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    return {};\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = createBaseMsgConnectionOpenTryResponse();\n    return message;\n  }\n};\nfunction createBaseMsgConnectionOpenAck() {\n  return {\n    connectionId: \"\",\n    counterpartyConnectionId: \"\",\n    version: undefined,\n    clientState: undefined,\n    proofHeight: undefined,\n    proofTry: new Uint8Array(),\n    proofClient: new Uint8Array(),\n    proofConsensus: new Uint8Array(),\n    consensusHeight: undefined,\n    signer: \"\"\n  };\n}\nexports.MsgConnectionOpenAck = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.connectionId !== \"\") {\n      writer.uint32(10).string(message.connectionId);\n    }\n    if (message.counterpartyConnectionId !== \"\") {\n      writer.uint32(18).string(message.counterpartyConnectionId);\n    }\n    if (message.version !== undefined) {\n      connection_1.Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.clientState !== undefined) {\n      any_1.Any.encode(message.clientState, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(42).fork()).ldelim();\n    }\n    if (message.proofTry.length !== 0) {\n      writer.uint32(50).bytes(message.proofTry);\n    }\n    if (message.proofClient.length !== 0) {\n      writer.uint32(58).bytes(message.proofClient);\n    }\n    if (message.proofConsensus.length !== 0) {\n      writer.uint32(66).bytes(message.proofConsensus);\n    }\n    if (message.consensusHeight !== undefined) {\n      client_1.Height.encode(message.consensusHeight, writer.uint32(74).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(82).string(message.signer);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgConnectionOpenAck();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connectionId = reader.string();\n          break;\n        case 2:\n          message.counterpartyConnectionId = reader.string();\n          break;\n        case 3:\n          message.version = connection_1.Version.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.clientState = any_1.Any.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        case 6:\n          message.proofTry = reader.bytes();\n          break;\n        case 7:\n          message.proofClient = reader.bytes();\n          break;\n        case 8:\n          message.proofConsensus = reader.bytes();\n          break;\n        case 9:\n          message.consensusHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        case 10:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      connectionId: isSet(object.connectionId) ? String(object.connectionId) : \"\",\n      counterpartyConnectionId: isSet(object.counterpartyConnectionId) ? String(object.counterpartyConnectionId) : \"\",\n      version: isSet(object.version) ? connection_1.Version.fromJSON(object.version) : undefined,\n      clientState: isSet(object.clientState) ? any_1.Any.fromJSON(object.clientState) : undefined,\n      proofHeight: isSet(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : undefined,\n      proofTry: isSet(object.proofTry) ? bytesFromBase64(object.proofTry) : new Uint8Array(),\n      proofClient: isSet(object.proofClient) ? bytesFromBase64(object.proofClient) : new Uint8Array(),\n      proofConsensus: isSet(object.proofConsensus) ? bytesFromBase64(object.proofConsensus) : new Uint8Array(),\n      consensusHeight: isSet(object.consensusHeight) ? client_1.Height.fromJSON(object.consensusHeight) : undefined,\n      signer: isSet(object.signer) ? String(object.signer) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.connectionId !== undefined && (obj.connectionId = message.connectionId);\n    message.counterpartyConnectionId !== undefined && (obj.counterpartyConnectionId = message.counterpartyConnectionId);\n    message.version !== undefined && (obj.version = message.version ? connection_1.Version.toJSON(message.version) : undefined);\n    message.clientState !== undefined && (obj.clientState = message.clientState ? any_1.Any.toJSON(message.clientState) : undefined);\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    message.proofTry !== undefined && (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n    message.proofClient !== undefined && (obj.proofClient = base64FromBytes(message.proofClient !== undefined ? message.proofClient : new Uint8Array()));\n    message.proofConsensus !== undefined && (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined ? message.proofConsensus : new Uint8Array()));\n    message.consensusHeight !== undefined && (obj.consensusHeight = message.consensusHeight ? client_1.Height.toJSON(message.consensusHeight) : undefined);\n    message.signer !== undefined && (obj.signer = message.signer);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b, _c, _d, _e, _f;\n    const message = createBaseMsgConnectionOpenAck();\n    message.connectionId = (_a = object.connectionId) !== null && _a !== void 0 ? _a : \"\";\n    message.counterpartyConnectionId = (_b = object.counterpartyConnectionId) !== null && _b !== void 0 ? _b : \"\";\n    message.version = object.version !== undefined && object.version !== null ? connection_1.Version.fromPartial(object.version) : undefined;\n    message.clientState = object.clientState !== undefined && object.clientState !== null ? any_1.Any.fromPartial(object.clientState) : undefined;\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : undefined;\n    message.proofTry = (_c = object.proofTry) !== null && _c !== void 0 ? _c : new Uint8Array();\n    message.proofClient = (_d = object.proofClient) !== null && _d !== void 0 ? _d : new Uint8Array();\n    message.proofConsensus = (_e = object.proofConsensus) !== null && _e !== void 0 ? _e : new Uint8Array();\n    message.consensusHeight = object.consensusHeight !== undefined && object.consensusHeight !== null ? client_1.Height.fromPartial(object.consensusHeight) : undefined;\n    message.signer = (_f = object.signer) !== null && _f !== void 0 ? _f : \"\";\n    return message;\n  }\n};\nfunction createBaseMsgConnectionOpenAckResponse() {\n  return {};\n}\nexports.MsgConnectionOpenAckResponse = {\n  encode(_, writer = minimal_1.default.Writer.create()) {\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgConnectionOpenAckResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    return {};\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = createBaseMsgConnectionOpenAckResponse();\n    return message;\n  }\n};\nfunction createBaseMsgConnectionOpenConfirm() {\n  return {\n    connectionId: \"\",\n    proofAck: new Uint8Array(),\n    proofHeight: undefined,\n    signer: \"\"\n  };\n}\nexports.MsgConnectionOpenConfirm = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.connectionId !== \"\") {\n      writer.uint32(10).string(message.connectionId);\n    }\n    if (message.proofAck.length !== 0) {\n      writer.uint32(18).bytes(message.proofAck);\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(34).string(message.signer);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgConnectionOpenConfirm();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connectionId = reader.string();\n          break;\n        case 2:\n          message.proofAck = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      connectionId: isSet(object.connectionId) ? String(object.connectionId) : \"\",\n      proofAck: isSet(object.proofAck) ? bytesFromBase64(object.proofAck) : new Uint8Array(),\n      proofHeight: isSet(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : undefined,\n      signer: isSet(object.signer) ? String(object.signer) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.connectionId !== undefined && (obj.connectionId = message.connectionId);\n    message.proofAck !== undefined && (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    message.signer !== undefined && (obj.signer = message.signer);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b, _c;\n    const message = createBaseMsgConnectionOpenConfirm();\n    message.connectionId = (_a = object.connectionId) !== null && _a !== void 0 ? _a : \"\";\n    message.proofAck = (_b = object.proofAck) !== null && _b !== void 0 ? _b : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : undefined;\n    message.signer = (_c = object.signer) !== null && _c !== void 0 ? _c : \"\";\n    return message;\n  }\n};\nfunction createBaseMsgConnectionOpenConfirmResponse() {\n  return {};\n}\nexports.MsgConnectionOpenConfirmResponse = {\n  encode(_, writer = minimal_1.default.Writer.create()) {\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgConnectionOpenConfirmResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    return {};\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = createBaseMsgConnectionOpenConfirmResponse();\n    return message;\n  }\n};\nclass MsgClientImpl {\n  constructor(rpc) {\n    this.rpc = rpc;\n    this.ConnectionOpenInit = this.ConnectionOpenInit.bind(this);\n    this.ConnectionOpenTry = this.ConnectionOpenTry.bind(this);\n    this.ConnectionOpenAck = this.ConnectionOpenAck.bind(this);\n    this.ConnectionOpenConfirm = this.ConnectionOpenConfirm.bind(this);\n  }\n  ConnectionOpenInit(request) {\n    const data = exports.MsgConnectionOpenInit.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenInit\", data);\n    return promise.then(data => exports.MsgConnectionOpenInitResponse.decode(new minimal_1.default.Reader(data)));\n  }\n  ConnectionOpenTry(request) {\n    const data = exports.MsgConnectionOpenTry.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenTry\", data);\n    return promise.then(data => exports.MsgConnectionOpenTryResponse.decode(new minimal_1.default.Reader(data)));\n  }\n  ConnectionOpenAck(request) {\n    const data = exports.MsgConnectionOpenAck.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenAck\", data);\n    return promise.then(data => exports.MsgConnectionOpenAckResponse.decode(new minimal_1.default.Reader(data)));\n  }\n  ConnectionOpenConfirm(request) {\n    const data = exports.MsgConnectionOpenConfirm.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenConfirm\", data);\n    return promise.then(data => exports.MsgConnectionOpenConfirmResponse.decode(new minimal_1.default.Reader(data)));\n  }\n}\nexports.MsgClientImpl = MsgClientImpl;\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") {\n    return globalThis;\n  }\n  if (typeof self !== \"undefined\") {\n    return self;\n  }\n  if (typeof window !== \"undefined\") {\n    return window;\n  }\n  if (typeof global !== \"undefined\") {\n    return global;\n  }\n  throw \"Unable to locate global object\";\n})();\nfunction bytesFromBase64(b64) {\n  if (globalThis.Buffer) {\n    return Uint8Array.from(globalThis.Buffer.from(b64, \"base64\"));\n  } else {\n    const bin = globalThis.atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n      arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n  }\n}\nfunction base64FromBytes(arr) {\n  if (globalThis.Buffer) {\n    return globalThis.Buffer.from(arr).toString(\"base64\");\n  } else {\n    const bin = [];\n    arr.forEach(byte => {\n      bin.push(String.fromCharCode(byte));\n    });\n    return globalThis.btoa(bin.join(\"\"));\n  }\n}\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}\nfunction isSet(value) {\n  return value !== null && value !== undefined;\n}","map":{"version":3,"names":["long_1","__importDefault","require","minimal_1","any_1","client_1","connection_1","exports","protobufPackage","createBaseMsgConnectionOpenInit","clientId","counterparty","undefined","version","delayPeriod","default","UZERO","signer","MsgConnectionOpenInit","encode","message","writer","Writer","create","uint32","string","Counterparty","fork","ldelim","Version","isZero","uint64","decode","input","length","reader","Reader","end","len","pos","tag","skipType","fromJSON","object","isSet","String","fromValue","toJSON","obj","toString","fromPartial","_a","_b","createBaseMsgConnectionOpenInitResponse","MsgConnectionOpenInitResponse","_","createBaseMsgConnectionOpenTry","previousConnectionId","clientState","counterpartyVersions","proofHeight","proofInit","Uint8Array","proofClient","proofConsensus","consensusHeight","MsgConnectionOpenTry","Any","v","Height","bytes","push","Array","isArray","map","e","bytesFromBase64","base64FromBytes","_c","_d","_e","_f","_g","createBaseMsgConnectionOpenTryResponse","MsgConnectionOpenTryResponse","createBaseMsgConnectionOpenAck","connectionId","counterpartyConnectionId","proofTry","MsgConnectionOpenAck","createBaseMsgConnectionOpenAckResponse","MsgConnectionOpenAckResponse","createBaseMsgConnectionOpenConfirm","proofAck","MsgConnectionOpenConfirm","createBaseMsgConnectionOpenConfirmResponse","MsgConnectionOpenConfirmResponse","MsgClientImpl","constructor","rpc","ConnectionOpenInit","bind","ConnectionOpenTry","ConnectionOpenAck","ConnectionOpenConfirm","request","data","finish","promise","then","globalThis","self","window","global","b64","Buffer","from","bin","atob","arr","i","charCodeAt","forEach","byte","fromCharCode","btoa","join","util","Long","configure","value"],"sources":["../../../../../src/ibc/core/connection/v1/tx.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script"}