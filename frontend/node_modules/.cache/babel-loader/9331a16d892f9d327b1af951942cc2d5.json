{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.registry = exports.load = exports.MessageComposer = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _tx = require(\"./tx\");\n//@ts-nocheck\n\nvar registry = [[\"/ibc.core.connection.v1.MsgConnectionOpenInit\", _tx.MsgConnectionOpenInit], [\"/ibc.core.connection.v1.MsgConnectionOpenTry\", _tx.MsgConnectionOpenTry], [\"/ibc.core.connection.v1.MsgConnectionOpenAck\", _tx.MsgConnectionOpenAck], [\"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", _tx.MsgConnectionOpenConfirm]];\nexports.registry = registry;\nvar load = function load(protoRegistry) {\n  registry.forEach(function (_ref) {\n    var _ref2 = (0, _slicedToArray2[\"default\"])(_ref, 2),\n      typeUrl = _ref2[0],\n      mod = _ref2[1];\n    protoRegistry.register(typeUrl, mod);\n  });\n};\nexports.load = load;\nvar MessageComposer = {\n  encoded: {\n    connectionOpenInit: function connectionOpenInit(value) {\n      return {\n        typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenInit\",\n        value: _tx.MsgConnectionOpenInit.encode(value).finish()\n      };\n    },\n    connectionOpenTry: function connectionOpenTry(value) {\n      return {\n        typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenTry\",\n        value: _tx.MsgConnectionOpenTry.encode(value).finish()\n      };\n    },\n    connectionOpenAck: function connectionOpenAck(value) {\n      return {\n        typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenAck\",\n        value: _tx.MsgConnectionOpenAck.encode(value).finish()\n      };\n    },\n    connectionOpenConfirm: function connectionOpenConfirm(value) {\n      return {\n        typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenConfirm\",\n        value: _tx.MsgConnectionOpenConfirm.encode(value).finish()\n      };\n    }\n  },\n  withTypeUrl: {\n    connectionOpenInit: function connectionOpenInit(value) {\n      return {\n        typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenInit\",\n        value: value\n      };\n    },\n    connectionOpenTry: function connectionOpenTry(value) {\n      return {\n        typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenTry\",\n        value: value\n      };\n    },\n    connectionOpenAck: function connectionOpenAck(value) {\n      return {\n        typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenAck\",\n        value: value\n      };\n    },\n    connectionOpenConfirm: function connectionOpenConfirm(value) {\n      return {\n        typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenConfirm\",\n        value: value\n      };\n    }\n  },\n  fromPartial: {\n    connectionOpenInit: function connectionOpenInit(value) {\n      return {\n        typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenInit\",\n        value: _tx.MsgConnectionOpenInit.fromPartial(value)\n      };\n    },\n    connectionOpenTry: function connectionOpenTry(value) {\n      return {\n        typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenTry\",\n        value: _tx.MsgConnectionOpenTry.fromPartial(value)\n      };\n    },\n    connectionOpenAck: function connectionOpenAck(value) {\n      return {\n        typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenAck\",\n        value: _tx.MsgConnectionOpenAck.fromPartial(value)\n      };\n    },\n    connectionOpenConfirm: function connectionOpenConfirm(value) {\n      return {\n        typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenConfirm\",\n        value: _tx.MsgConnectionOpenConfirm.fromPartial(value)\n      };\n    }\n  }\n};\nexports.MessageComposer = MessageComposer;","map":null,"metadata":{},"sourceType":"script"}