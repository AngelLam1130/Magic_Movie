{"ast":null,"code":"\"use strict\";\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ProtocolVersion = exports.PeerInfo = exports.PeerAddressInfo = exports.NodeInfoOther = exports.NodeInfo = void 0;\nvar _timestamp = require(\"../../google/protobuf/timestamp\");\nvar _helpers = require(\"../../helpers\");\nvar _m0 = _interopRequireWildcard(require(\"protobufjs/minimal\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj[\"default\"] = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction createBaseProtocolVersion() {\n  return {\n    p2p: _helpers.Long.UZERO,\n    block: _helpers.Long.UZERO,\n    app: _helpers.Long.UZERO\n  };\n}\nvar ProtocolVersion = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (!message.p2p.isZero()) {\n      writer.uint32(8).uint64(message.p2p);\n    }\n    if (!message.block.isZero()) {\n      writer.uint32(16).uint64(message.block);\n    }\n    if (!message.app.isZero()) {\n      writer.uint32(24).uint64(message.app);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseProtocolVersion();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.p2p = reader.uint64();\n          break;\n        case 2:\n          message.block = reader.uint64();\n          break;\n        case 3:\n          message.app = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseProtocolVersion();\n    message.p2p = object.p2p !== undefined && object.p2p !== null ? _helpers.Long.fromValue(object.p2p) : _helpers.Long.UZERO;\n    message.block = object.block !== undefined && object.block !== null ? _helpers.Long.fromValue(object.block) : _helpers.Long.UZERO;\n    message.app = object.app !== undefined && object.app !== null ? _helpers.Long.fromValue(object.app) : _helpers.Long.UZERO;\n    return message;\n  }\n};\nexports.ProtocolVersion = ProtocolVersion;\nfunction createBaseNodeInfo() {\n  return {\n    protocolVersion: ProtocolVersion.fromPartial({}),\n    nodeId: \"\",\n    listenAddr: \"\",\n    network: \"\",\n    version: \"\",\n    channels: new Uint8Array(),\n    moniker: \"\",\n    other: NodeInfoOther.fromPartial({})\n  };\n}\nvar NodeInfo = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.protocolVersion !== undefined) {\n      ProtocolVersion.encode(message.protocolVersion, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.nodeId !== \"\") {\n      writer.uint32(18).string(message.nodeId);\n    }\n    if (message.listenAddr !== \"\") {\n      writer.uint32(26).string(message.listenAddr);\n    }\n    if (message.network !== \"\") {\n      writer.uint32(34).string(message.network);\n    }\n    if (message.version !== \"\") {\n      writer.uint32(42).string(message.version);\n    }\n    if (message.channels.length !== 0) {\n      writer.uint32(50).bytes(message.channels);\n    }\n    if (message.moniker !== \"\") {\n      writer.uint32(58).string(message.moniker);\n    }\n    if (message.other !== undefined) {\n      NodeInfoOther.encode(message.other, writer.uint32(66).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseNodeInfo();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.protocolVersion = ProtocolVersion.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.nodeId = reader.string();\n          break;\n        case 3:\n          message.listenAddr = reader.string();\n          break;\n        case 4:\n          message.network = reader.string();\n          break;\n        case 5:\n          message.version = reader.string();\n          break;\n        case 6:\n          message.channels = reader.bytes();\n          break;\n        case 7:\n          message.moniker = reader.string();\n          break;\n        case 8:\n          message.other = NodeInfoOther.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$nodeId, _object$listenAddr, _object$network, _object$version, _object$channels, _object$moniker;\n    var message = createBaseNodeInfo();\n    message.protocolVersion = object.protocolVersion !== undefined && object.protocolVersion !== null ? ProtocolVersion.fromPartial(object.protocolVersion) : undefined;\n    message.nodeId = (_object$nodeId = object.nodeId) !== null && _object$nodeId !== void 0 ? _object$nodeId : \"\";\n    message.listenAddr = (_object$listenAddr = object.listenAddr) !== null && _object$listenAddr !== void 0 ? _object$listenAddr : \"\";\n    message.network = (_object$network = object.network) !== null && _object$network !== void 0 ? _object$network : \"\";\n    message.version = (_object$version = object.version) !== null && _object$version !== void 0 ? _object$version : \"\";\n    message.channels = (_object$channels = object.channels) !== null && _object$channels !== void 0 ? _object$channels : new Uint8Array();\n    message.moniker = (_object$moniker = object.moniker) !== null && _object$moniker !== void 0 ? _object$moniker : \"\";\n    message.other = object.other !== undefined && object.other !== null ? NodeInfoOther.fromPartial(object.other) : undefined;\n    return message;\n  }\n};\nexports.NodeInfo = NodeInfo;\nfunction createBaseNodeInfoOther() {\n  return {\n    txIndex: \"\",\n    rpcAddress: \"\"\n  };\n}\nvar NodeInfoOther = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.txIndex !== \"\") {\n      writer.uint32(10).string(message.txIndex);\n    }\n    if (message.rpcAddress !== \"\") {\n      writer.uint32(18).string(message.rpcAddress);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseNodeInfoOther();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.txIndex = reader.string();\n          break;\n        case 2:\n          message.rpcAddress = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$txIndex, _object$rpcAddress;\n    var message = createBaseNodeInfoOther();\n    message.txIndex = (_object$txIndex = object.txIndex) !== null && _object$txIndex !== void 0 ? _object$txIndex : \"\";\n    message.rpcAddress = (_object$rpcAddress = object.rpcAddress) !== null && _object$rpcAddress !== void 0 ? _object$rpcAddress : \"\";\n    return message;\n  }\n};\nexports.NodeInfoOther = NodeInfoOther;\nfunction createBasePeerInfo() {\n  return {\n    id: \"\",\n    addressInfo: [],\n    lastConnected: undefined\n  };\n}\nvar PeerInfo = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.id !== \"\") {\n      writer.uint32(10).string(message.id);\n    }\n    var _iterator = _createForOfIteratorHelper(message.addressInfo),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        PeerAddressInfo.encode(v, writer.uint32(18).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    if (message.lastConnected !== undefined) {\n      _timestamp.Timestamp.encode((0, _helpers.toTimestamp)(message.lastConnected), writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBasePeerInfo();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.id = reader.string();\n          break;\n        case 2:\n          message.addressInfo.push(PeerAddressInfo.decode(reader, reader.uint32()));\n          break;\n        case 3:\n          message.lastConnected = (0, _helpers.fromTimestamp)(_timestamp.Timestamp.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$id, _object$addressInfo, _object$lastConnected;\n    var message = createBasePeerInfo();\n    message.id = (_object$id = object.id) !== null && _object$id !== void 0 ? _object$id : \"\";\n    message.addressInfo = ((_object$addressInfo = object.addressInfo) === null || _object$addressInfo === void 0 ? void 0 : _object$addressInfo.map(function (e) {\n      return PeerAddressInfo.fromPartial(e);\n    })) || [];\n    message.lastConnected = (_object$lastConnected = object.lastConnected) !== null && _object$lastConnected !== void 0 ? _object$lastConnected : undefined;\n    return message;\n  }\n};\nexports.PeerInfo = PeerInfo;\nfunction createBasePeerAddressInfo() {\n  return {\n    address: \"\",\n    lastDialSuccess: undefined,\n    lastDialFailure: undefined,\n    dialFailures: 0\n  };\n}\nvar PeerAddressInfo = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.address !== \"\") {\n      writer.uint32(10).string(message.address);\n    }\n    if (message.lastDialSuccess !== undefined) {\n      _timestamp.Timestamp.encode((0, _helpers.toTimestamp)(message.lastDialSuccess), writer.uint32(18).fork()).ldelim();\n    }\n    if (message.lastDialFailure !== undefined) {\n      _timestamp.Timestamp.encode((0, _helpers.toTimestamp)(message.lastDialFailure), writer.uint32(26).fork()).ldelim();\n    }\n    if (message.dialFailures !== 0) {\n      writer.uint32(32).uint32(message.dialFailures);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBasePeerAddressInfo();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.address = reader.string();\n          break;\n        case 2:\n          message.lastDialSuccess = (0, _helpers.fromTimestamp)(_timestamp.Timestamp.decode(reader, reader.uint32()));\n          break;\n        case 3:\n          message.lastDialFailure = (0, _helpers.fromTimestamp)(_timestamp.Timestamp.decode(reader, reader.uint32()));\n          break;\n        case 4:\n          message.dialFailures = reader.uint32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$address, _object$lastDialSucce, _object$lastDialFailu, _object$dialFailures;\n    var message = createBasePeerAddressInfo();\n    message.address = (_object$address = object.address) !== null && _object$address !== void 0 ? _object$address : \"\";\n    message.lastDialSuccess = (_object$lastDialSucce = object.lastDialSuccess) !== null && _object$lastDialSucce !== void 0 ? _object$lastDialSucce : undefined;\n    message.lastDialFailure = (_object$lastDialFailu = object.lastDialFailure) !== null && _object$lastDialFailu !== void 0 ? _object$lastDialFailu : undefined;\n    message.dialFailures = (_object$dialFailures = object.dialFailures) !== null && _object$dialFailures !== void 0 ? _object$dialFailures : 0;\n    return message;\n  }\n};\nexports.PeerAddressInfo = PeerAddressInfo;","map":null,"metadata":{},"sourceType":"script"}