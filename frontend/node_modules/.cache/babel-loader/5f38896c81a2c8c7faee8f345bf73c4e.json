{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.registry = exports.load = exports.MessageComposer = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _tx = require(\"./tx\");\n//@ts-nocheck\n\nvar registry = [[\"/cosmos.staking.v1beta1.MsgCreateValidator\", _tx.MsgCreateValidator], [\"/cosmos.staking.v1beta1.MsgEditValidator\", _tx.MsgEditValidator], [\"/cosmos.staking.v1beta1.MsgDelegate\", _tx.MsgDelegate], [\"/cosmos.staking.v1beta1.MsgBeginRedelegate\", _tx.MsgBeginRedelegate], [\"/cosmos.staking.v1beta1.MsgUndelegate\", _tx.MsgUndelegate]];\nexports.registry = registry;\nvar load = function load(protoRegistry) {\n  registry.forEach(function (_ref) {\n    var _ref2 = (0, _slicedToArray2[\"default\"])(_ref, 2),\n      typeUrl = _ref2[0],\n      mod = _ref2[1];\n    protoRegistry.register(typeUrl, mod);\n  });\n};\nexports.load = load;\nvar MessageComposer = {\n  encoded: {\n    createValidator: function createValidator(value) {\n      return {\n        typeUrl: \"/cosmos.staking.v1beta1.MsgCreateValidator\",\n        value: _tx.MsgCreateValidator.encode(value).finish()\n      };\n    },\n    editValidator: function editValidator(value) {\n      return {\n        typeUrl: \"/cosmos.staking.v1beta1.MsgEditValidator\",\n        value: _tx.MsgEditValidator.encode(value).finish()\n      };\n    },\n    delegate: function delegate(value) {\n      return {\n        typeUrl: \"/cosmos.staking.v1beta1.MsgDelegate\",\n        value: _tx.MsgDelegate.encode(value).finish()\n      };\n    },\n    beginRedelegate: function beginRedelegate(value) {\n      return {\n        typeUrl: \"/cosmos.staking.v1beta1.MsgBeginRedelegate\",\n        value: _tx.MsgBeginRedelegate.encode(value).finish()\n      };\n    },\n    undelegate: function undelegate(value) {\n      return {\n        typeUrl: \"/cosmos.staking.v1beta1.MsgUndelegate\",\n        value: _tx.MsgUndelegate.encode(value).finish()\n      };\n    }\n  },\n  withTypeUrl: {\n    createValidator: function createValidator(value) {\n      return {\n        typeUrl: \"/cosmos.staking.v1beta1.MsgCreateValidator\",\n        value: value\n      };\n    },\n    editValidator: function editValidator(value) {\n      return {\n        typeUrl: \"/cosmos.staking.v1beta1.MsgEditValidator\",\n        value: value\n      };\n    },\n    delegate: function delegate(value) {\n      return {\n        typeUrl: \"/cosmos.staking.v1beta1.MsgDelegate\",\n        value: value\n      };\n    },\n    beginRedelegate: function beginRedelegate(value) {\n      return {\n        typeUrl: \"/cosmos.staking.v1beta1.MsgBeginRedelegate\",\n        value: value\n      };\n    },\n    undelegate: function undelegate(value) {\n      return {\n        typeUrl: \"/cosmos.staking.v1beta1.MsgUndelegate\",\n        value: value\n      };\n    }\n  },\n  fromPartial: {\n    createValidator: function createValidator(value) {\n      return {\n        typeUrl: \"/cosmos.staking.v1beta1.MsgCreateValidator\",\n        value: _tx.MsgCreateValidator.fromPartial(value)\n      };\n    },\n    editValidator: function editValidator(value) {\n      return {\n        typeUrl: \"/cosmos.staking.v1beta1.MsgEditValidator\",\n        value: _tx.MsgEditValidator.fromPartial(value)\n      };\n    },\n    delegate: function delegate(value) {\n      return {\n        typeUrl: \"/cosmos.staking.v1beta1.MsgDelegate\",\n        value: _tx.MsgDelegate.fromPartial(value)\n      };\n    },\n    beginRedelegate: function beginRedelegate(value) {\n      return {\n        typeUrl: \"/cosmos.staking.v1beta1.MsgBeginRedelegate\",\n        value: _tx.MsgBeginRedelegate.fromPartial(value)\n      };\n    },\n    undelegate: function undelegate(value) {\n      return {\n        typeUrl: \"/cosmos.staking.v1beta1.MsgUndelegate\",\n        value: _tx.MsgUndelegate.fromPartial(value)\n      };\n    }\n  }\n};\nexports.MessageComposer = MessageComposer;","map":null,"metadata":{},"sourceType":"script"}