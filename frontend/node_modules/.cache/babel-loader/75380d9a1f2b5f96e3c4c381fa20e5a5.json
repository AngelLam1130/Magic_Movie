{"ast":null,"code":"\"use strict\";\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TxResponse = exports.TxMsgData = exports.StringEvent = exports.SimulationResponse = exports.SearchTxsResult = exports.Result = exports.MsgData = exports.GasInfo = exports.Attribute = exports.ABCIMessageLog = void 0;\nvar _any = require(\"../../../../google/protobuf/any\");\nvar _types = require(\"../../../../tendermint/abci/types\");\nvar _helpers = require(\"../../../../helpers\");\nvar _m0 = _interopRequireWildcard(require(\"protobufjs/minimal\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj[\"default\"] = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction createBaseTxResponse() {\n  return {\n    height: _helpers.Long.ZERO,\n    txhash: \"\",\n    codespace: \"\",\n    code: 0,\n    data: \"\",\n    rawLog: \"\",\n    logs: [],\n    info: \"\",\n    gasWanted: _helpers.Long.ZERO,\n    gasUsed: _helpers.Long.ZERO,\n    tx: undefined,\n    timestamp: \"\",\n    events: []\n  };\n}\nvar TxResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (!message.height.isZero()) {\n      writer.uint32(8).int64(message.height);\n    }\n    if (message.txhash !== \"\") {\n      writer.uint32(18).string(message.txhash);\n    }\n    if (message.codespace !== \"\") {\n      writer.uint32(26).string(message.codespace);\n    }\n    if (message.code !== 0) {\n      writer.uint32(32).uint32(message.code);\n    }\n    if (message.data !== \"\") {\n      writer.uint32(42).string(message.data);\n    }\n    if (message.rawLog !== \"\") {\n      writer.uint32(50).string(message.rawLog);\n    }\n    var _iterator = _createForOfIteratorHelper(message.logs),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        ABCIMessageLog.encode(v, writer.uint32(58).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    if (message.info !== \"\") {\n      writer.uint32(66).string(message.info);\n    }\n    if (!message.gasWanted.isZero()) {\n      writer.uint32(72).int64(message.gasWanted);\n    }\n    if (!message.gasUsed.isZero()) {\n      writer.uint32(80).int64(message.gasUsed);\n    }\n    if (message.tx !== undefined) {\n      _any.Any.encode(message.tx, writer.uint32(90).fork()).ldelim();\n    }\n    if (message.timestamp !== \"\") {\n      writer.uint32(98).string(message.timestamp);\n    }\n    var _iterator2 = _createForOfIteratorHelper(message.events),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _v = _step2.value;\n        _types.Event.encode(_v, writer.uint32(106).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseTxResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.height = reader.int64();\n          break;\n        case 2:\n          message.txhash = reader.string();\n          break;\n        case 3:\n          message.codespace = reader.string();\n          break;\n        case 4:\n          message.code = reader.uint32();\n          break;\n        case 5:\n          message.data = reader.string();\n          break;\n        case 6:\n          message.rawLog = reader.string();\n          break;\n        case 7:\n          message.logs.push(ABCIMessageLog.decode(reader, reader.uint32()));\n          break;\n        case 8:\n          message.info = reader.string();\n          break;\n        case 9:\n          message.gasWanted = reader.int64();\n          break;\n        case 10:\n          message.gasUsed = reader.int64();\n          break;\n        case 11:\n          message.tx = _any.Any.decode(reader, reader.uint32());\n          break;\n        case 12:\n          message.timestamp = reader.string();\n          break;\n        case 13:\n          message.events.push(_types.Event.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$txhash, _object$codespace, _object$code, _object$data, _object$rawLog, _object$logs, _object$info, _object$timestamp, _object$events;\n    var message = createBaseTxResponse();\n    message.height = object.height !== undefined && object.height !== null ? _helpers.Long.fromValue(object.height) : _helpers.Long.ZERO;\n    message.txhash = (_object$txhash = object.txhash) !== null && _object$txhash !== void 0 ? _object$txhash : \"\";\n    message.codespace = (_object$codespace = object.codespace) !== null && _object$codespace !== void 0 ? _object$codespace : \"\";\n    message.code = (_object$code = object.code) !== null && _object$code !== void 0 ? _object$code : 0;\n    message.data = (_object$data = object.data) !== null && _object$data !== void 0 ? _object$data : \"\";\n    message.rawLog = (_object$rawLog = object.rawLog) !== null && _object$rawLog !== void 0 ? _object$rawLog : \"\";\n    message.logs = ((_object$logs = object.logs) === null || _object$logs === void 0 ? void 0 : _object$logs.map(function (e) {\n      return ABCIMessageLog.fromPartial(e);\n    })) || [];\n    message.info = (_object$info = object.info) !== null && _object$info !== void 0 ? _object$info : \"\";\n    message.gasWanted = object.gasWanted !== undefined && object.gasWanted !== null ? _helpers.Long.fromValue(object.gasWanted) : _helpers.Long.ZERO;\n    message.gasUsed = object.gasUsed !== undefined && object.gasUsed !== null ? _helpers.Long.fromValue(object.gasUsed) : _helpers.Long.ZERO;\n    message.tx = object.tx !== undefined && object.tx !== null ? _any.Any.fromPartial(object.tx) : undefined;\n    message.timestamp = (_object$timestamp = object.timestamp) !== null && _object$timestamp !== void 0 ? _object$timestamp : \"\";\n    message.events = ((_object$events = object.events) === null || _object$events === void 0 ? void 0 : _object$events.map(function (e) {\n      return _types.Event.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nexports.TxResponse = TxResponse;\nfunction createBaseABCIMessageLog() {\n  return {\n    msgIndex: 0,\n    log: \"\",\n    events: []\n  };\n}\nvar ABCIMessageLog = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.msgIndex !== 0) {\n      writer.uint32(8).uint32(message.msgIndex);\n    }\n    if (message.log !== \"\") {\n      writer.uint32(18).string(message.log);\n    }\n    var _iterator3 = _createForOfIteratorHelper(message.events),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var v = _step3.value;\n        StringEvent.encode(v, writer.uint32(26).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseABCIMessageLog();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.msgIndex = reader.uint32();\n          break;\n        case 2:\n          message.log = reader.string();\n          break;\n        case 3:\n          message.events.push(StringEvent.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$msgIndex, _object$log, _object$events2;\n    var message = createBaseABCIMessageLog();\n    message.msgIndex = (_object$msgIndex = object.msgIndex) !== null && _object$msgIndex !== void 0 ? _object$msgIndex : 0;\n    message.log = (_object$log = object.log) !== null && _object$log !== void 0 ? _object$log : \"\";\n    message.events = ((_object$events2 = object.events) === null || _object$events2 === void 0 ? void 0 : _object$events2.map(function (e) {\n      return StringEvent.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nexports.ABCIMessageLog = ABCIMessageLog;\nfunction createBaseStringEvent() {\n  return {\n    type: \"\",\n    attributes: []\n  };\n}\nvar StringEvent = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.type !== \"\") {\n      writer.uint32(10).string(message.type);\n    }\n    var _iterator4 = _createForOfIteratorHelper(message.attributes),\n      _step4;\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var v = _step4.value;\n        Attribute.encode(v, writer.uint32(18).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseStringEvent();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.type = reader.string();\n          break;\n        case 2:\n          message.attributes.push(Attribute.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$type, _object$attributes;\n    var message = createBaseStringEvent();\n    message.type = (_object$type = object.type) !== null && _object$type !== void 0 ? _object$type : \"\";\n    message.attributes = ((_object$attributes = object.attributes) === null || _object$attributes === void 0 ? void 0 : _object$attributes.map(function (e) {\n      return Attribute.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nexports.StringEvent = StringEvent;\nfunction createBaseAttribute() {\n  return {\n    key: \"\",\n    value: \"\"\n  };\n}\nvar Attribute = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.key !== \"\") {\n      writer.uint32(10).string(message.key);\n    }\n    if (message.value !== \"\") {\n      writer.uint32(18).string(message.value);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseAttribute();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.string();\n          break;\n        case 2:\n          message.value = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$key, _object$value;\n    var message = createBaseAttribute();\n    message.key = (_object$key = object.key) !== null && _object$key !== void 0 ? _object$key : \"\";\n    message.value = (_object$value = object.value) !== null && _object$value !== void 0 ? _object$value : \"\";\n    return message;\n  }\n};\nexports.Attribute = Attribute;\nfunction createBaseGasInfo() {\n  return {\n    gasWanted: _helpers.Long.UZERO,\n    gasUsed: _helpers.Long.UZERO\n  };\n}\nvar GasInfo = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (!message.gasWanted.isZero()) {\n      writer.uint32(8).uint64(message.gasWanted);\n    }\n    if (!message.gasUsed.isZero()) {\n      writer.uint32(16).uint64(message.gasUsed);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseGasInfo();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.gasWanted = reader.uint64();\n          break;\n        case 2:\n          message.gasUsed = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseGasInfo();\n    message.gasWanted = object.gasWanted !== undefined && object.gasWanted !== null ? _helpers.Long.fromValue(object.gasWanted) : _helpers.Long.UZERO;\n    message.gasUsed = object.gasUsed !== undefined && object.gasUsed !== null ? _helpers.Long.fromValue(object.gasUsed) : _helpers.Long.UZERO;\n    return message;\n  }\n};\nexports.GasInfo = GasInfo;\nfunction createBaseResult() {\n  return {\n    data: new Uint8Array(),\n    log: \"\",\n    events: [],\n    msgResponses: []\n  };\n}\nvar Result = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.data.length !== 0) {\n      writer.uint32(10).bytes(message.data);\n    }\n    if (message.log !== \"\") {\n      writer.uint32(18).string(message.log);\n    }\n    var _iterator5 = _createForOfIteratorHelper(message.events),\n      _step5;\n    try {\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        var v = _step5.value;\n        _types.Event.encode(v, writer.uint32(26).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n    var _iterator6 = _createForOfIteratorHelper(message.msgResponses),\n      _step6;\n    try {\n      for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n        var _v2 = _step6.value;\n        _any.Any.encode(_v2, writer.uint32(34).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator6.e(err);\n    } finally {\n      _iterator6.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseResult();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.data = reader.bytes();\n          break;\n        case 2:\n          message.log = reader.string();\n          break;\n        case 3:\n          message.events.push(_types.Event.decode(reader, reader.uint32()));\n          break;\n        case 4:\n          message.msgResponses.push(_any.Any.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$data2, _object$log2, _object$events3, _object$msgResponses;\n    var message = createBaseResult();\n    message.data = (_object$data2 = object.data) !== null && _object$data2 !== void 0 ? _object$data2 : new Uint8Array();\n    message.log = (_object$log2 = object.log) !== null && _object$log2 !== void 0 ? _object$log2 : \"\";\n    message.events = ((_object$events3 = object.events) === null || _object$events3 === void 0 ? void 0 : _object$events3.map(function (e) {\n      return _types.Event.fromPartial(e);\n    })) || [];\n    message.msgResponses = ((_object$msgResponses = object.msgResponses) === null || _object$msgResponses === void 0 ? void 0 : _object$msgResponses.map(function (e) {\n      return _any.Any.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nexports.Result = Result;\nfunction createBaseSimulationResponse() {\n  return {\n    gasInfo: GasInfo.fromPartial({}),\n    result: Result.fromPartial({})\n  };\n}\nvar SimulationResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.gasInfo !== undefined) {\n      GasInfo.encode(message.gasInfo, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.result !== undefined) {\n      Result.encode(message.result, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseSimulationResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.gasInfo = GasInfo.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.result = Result.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseSimulationResponse();\n    message.gasInfo = object.gasInfo !== undefined && object.gasInfo !== null ? GasInfo.fromPartial(object.gasInfo) : undefined;\n    message.result = object.result !== undefined && object.result !== null ? Result.fromPartial(object.result) : undefined;\n    return message;\n  }\n};\nexports.SimulationResponse = SimulationResponse;\nfunction createBaseMsgData() {\n  return {\n    msgType: \"\",\n    data: new Uint8Array()\n  };\n}\nvar MsgData = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.msgType !== \"\") {\n      writer.uint32(10).string(message.msgType);\n    }\n    if (message.data.length !== 0) {\n      writer.uint32(18).bytes(message.data);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgData();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.msgType = reader.string();\n          break;\n        case 2:\n          message.data = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$msgType, _object$data3;\n    var message = createBaseMsgData();\n    message.msgType = (_object$msgType = object.msgType) !== null && _object$msgType !== void 0 ? _object$msgType : \"\";\n    message.data = (_object$data3 = object.data) !== null && _object$data3 !== void 0 ? _object$data3 : new Uint8Array();\n    return message;\n  }\n};\nexports.MsgData = MsgData;\nfunction createBaseTxMsgData() {\n  return {\n    data: [],\n    msgResponses: []\n  };\n}\nvar TxMsgData = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    var _iterator7 = _createForOfIteratorHelper(message.data),\n      _step7;\n    try {\n      for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n        var v = _step7.value;\n        MsgData.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator7.e(err);\n    } finally {\n      _iterator7.f();\n    }\n    var _iterator8 = _createForOfIteratorHelper(message.msgResponses),\n      _step8;\n    try {\n      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n        var _v3 = _step8.value;\n        _any.Any.encode(_v3, writer.uint32(18).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator8.e(err);\n    } finally {\n      _iterator8.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseTxMsgData();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.data.push(MsgData.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.msgResponses.push(_any.Any.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$data4, _object$msgResponses2;\n    var message = createBaseTxMsgData();\n    message.data = ((_object$data4 = object.data) === null || _object$data4 === void 0 ? void 0 : _object$data4.map(function (e) {\n      return MsgData.fromPartial(e);\n    })) || [];\n    message.msgResponses = ((_object$msgResponses2 = object.msgResponses) === null || _object$msgResponses2 === void 0 ? void 0 : _object$msgResponses2.map(function (e) {\n      return _any.Any.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nexports.TxMsgData = TxMsgData;\nfunction createBaseSearchTxsResult() {\n  return {\n    totalCount: _helpers.Long.UZERO,\n    count: _helpers.Long.UZERO,\n    pageNumber: _helpers.Long.UZERO,\n    pageTotal: _helpers.Long.UZERO,\n    limit: _helpers.Long.UZERO,\n    txs: []\n  };\n}\nvar SearchTxsResult = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (!message.totalCount.isZero()) {\n      writer.uint32(8).uint64(message.totalCount);\n    }\n    if (!message.count.isZero()) {\n      writer.uint32(16).uint64(message.count);\n    }\n    if (!message.pageNumber.isZero()) {\n      writer.uint32(24).uint64(message.pageNumber);\n    }\n    if (!message.pageTotal.isZero()) {\n      writer.uint32(32).uint64(message.pageTotal);\n    }\n    if (!message.limit.isZero()) {\n      writer.uint32(40).uint64(message.limit);\n    }\n    var _iterator9 = _createForOfIteratorHelper(message.txs),\n      _step9;\n    try {\n      for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n        var v = _step9.value;\n        TxResponse.encode(v, writer.uint32(50).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator9.e(err);\n    } finally {\n      _iterator9.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseSearchTxsResult();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.totalCount = reader.uint64();\n          break;\n        case 2:\n          message.count = reader.uint64();\n          break;\n        case 3:\n          message.pageNumber = reader.uint64();\n          break;\n        case 4:\n          message.pageTotal = reader.uint64();\n          break;\n        case 5:\n          message.limit = reader.uint64();\n          break;\n        case 6:\n          message.txs.push(TxResponse.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$txs;\n    var message = createBaseSearchTxsResult();\n    message.totalCount = object.totalCount !== undefined && object.totalCount !== null ? _helpers.Long.fromValue(object.totalCount) : _helpers.Long.UZERO;\n    message.count = object.count !== undefined && object.count !== null ? _helpers.Long.fromValue(object.count) : _helpers.Long.UZERO;\n    message.pageNumber = object.pageNumber !== undefined && object.pageNumber !== null ? _helpers.Long.fromValue(object.pageNumber) : _helpers.Long.UZERO;\n    message.pageTotal = object.pageTotal !== undefined && object.pageTotal !== null ? _helpers.Long.fromValue(object.pageTotal) : _helpers.Long.UZERO;\n    message.limit = object.limit !== undefined && object.limit !== null ? _helpers.Long.fromValue(object.limit) : _helpers.Long.UZERO;\n    message.txs = ((_object$txs = object.txs) === null || _object$txs === void 0 ? void 0 : _object$txs.map(function (e) {\n      return TxResponse.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nexports.SearchTxsResult = SearchTxsResult;","map":null,"metadata":{},"sourceType":"script"}