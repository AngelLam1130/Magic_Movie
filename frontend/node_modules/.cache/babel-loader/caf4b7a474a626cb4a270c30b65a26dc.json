{"ast":null,"code":"\"use strict\";\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TxDescriptor = exports.SigningModeDescriptor = exports.QueryServicesDescriptor = exports.QueryServiceDescriptor = exports.QueryMethodDescriptor = exports.MsgDescriptor = exports.InterfaceImplementerDescriptor = exports.InterfaceDescriptor = exports.InterfaceAcceptingMessageDescriptor = exports.GetTxDescriptorResponse = exports.GetTxDescriptorRequest = exports.GetQueryServicesDescriptorResponse = exports.GetQueryServicesDescriptorRequest = exports.GetConfigurationDescriptorResponse = exports.GetConfigurationDescriptorRequest = exports.GetCodecDescriptorResponse = exports.GetCodecDescriptorRequest = exports.GetChainDescriptorResponse = exports.GetChainDescriptorRequest = exports.GetAuthnDescriptorResponse = exports.GetAuthnDescriptorRequest = exports.ConfigurationDescriptor = exports.CodecDescriptor = exports.ChainDescriptor = exports.AuthnDescriptor = exports.AppDescriptor = void 0;\nvar _m0 = _interopRequireWildcard(require(\"protobufjs/minimal\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj[\"default\"] = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction createBaseAppDescriptor() {\n  return {\n    authn: AuthnDescriptor.fromPartial({}),\n    chain: ChainDescriptor.fromPartial({}),\n    codec: CodecDescriptor.fromPartial({}),\n    configuration: ConfigurationDescriptor.fromPartial({}),\n    queryServices: QueryServicesDescriptor.fromPartial({}),\n    tx: TxDescriptor.fromPartial({})\n  };\n}\nvar AppDescriptor = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.authn !== undefined) {\n      AuthnDescriptor.encode(message.authn, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.chain !== undefined) {\n      ChainDescriptor.encode(message.chain, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.codec !== undefined) {\n      CodecDescriptor.encode(message.codec, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.configuration !== undefined) {\n      ConfigurationDescriptor.encode(message.configuration, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.queryServices !== undefined) {\n      QueryServicesDescriptor.encode(message.queryServices, writer.uint32(42).fork()).ldelim();\n    }\n    if (message.tx !== undefined) {\n      TxDescriptor.encode(message.tx, writer.uint32(50).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseAppDescriptor();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.authn = AuthnDescriptor.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.chain = ChainDescriptor.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.codec = CodecDescriptor.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.configuration = ConfigurationDescriptor.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.queryServices = QueryServicesDescriptor.decode(reader, reader.uint32());\n          break;\n        case 6:\n          message.tx = TxDescriptor.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseAppDescriptor();\n    message.authn = object.authn !== undefined && object.authn !== null ? AuthnDescriptor.fromPartial(object.authn) : undefined;\n    message.chain = object.chain !== undefined && object.chain !== null ? ChainDescriptor.fromPartial(object.chain) : undefined;\n    message.codec = object.codec !== undefined && object.codec !== null ? CodecDescriptor.fromPartial(object.codec) : undefined;\n    message.configuration = object.configuration !== undefined && object.configuration !== null ? ConfigurationDescriptor.fromPartial(object.configuration) : undefined;\n    message.queryServices = object.queryServices !== undefined && object.queryServices !== null ? QueryServicesDescriptor.fromPartial(object.queryServices) : undefined;\n    message.tx = object.tx !== undefined && object.tx !== null ? TxDescriptor.fromPartial(object.tx) : undefined;\n    return message;\n  }\n};\nexports.AppDescriptor = AppDescriptor;\nfunction createBaseTxDescriptor() {\n  return {\n    fullname: \"\",\n    msgs: []\n  };\n}\nvar TxDescriptor = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.fullname !== \"\") {\n      writer.uint32(10).string(message.fullname);\n    }\n    var _iterator = _createForOfIteratorHelper(message.msgs),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        MsgDescriptor.encode(v, writer.uint32(18).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseTxDescriptor();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.fullname = reader.string();\n          break;\n        case 2:\n          message.msgs.push(MsgDescriptor.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$fullname, _object$msgs;\n    var message = createBaseTxDescriptor();\n    message.fullname = (_object$fullname = object.fullname) !== null && _object$fullname !== void 0 ? _object$fullname : \"\";\n    message.msgs = ((_object$msgs = object.msgs) === null || _object$msgs === void 0 ? void 0 : _object$msgs.map(function (e) {\n      return MsgDescriptor.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nexports.TxDescriptor = TxDescriptor;\nfunction createBaseAuthnDescriptor() {\n  return {\n    signModes: []\n  };\n}\nvar AuthnDescriptor = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    var _iterator2 = _createForOfIteratorHelper(message.signModes),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var v = _step2.value;\n        SigningModeDescriptor.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseAuthnDescriptor();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.signModes.push(SigningModeDescriptor.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$signModes;\n    var message = createBaseAuthnDescriptor();\n    message.signModes = ((_object$signModes = object.signModes) === null || _object$signModes === void 0 ? void 0 : _object$signModes.map(function (e) {\n      return SigningModeDescriptor.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nexports.AuthnDescriptor = AuthnDescriptor;\nfunction createBaseSigningModeDescriptor() {\n  return {\n    name: \"\",\n    number: 0,\n    authnInfoProviderMethodFullname: \"\"\n  };\n}\nvar SigningModeDescriptor = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.name !== \"\") {\n      writer.uint32(10).string(message.name);\n    }\n    if (message.number !== 0) {\n      writer.uint32(16).int32(message.number);\n    }\n    if (message.authnInfoProviderMethodFullname !== \"\") {\n      writer.uint32(26).string(message.authnInfoProviderMethodFullname);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseSigningModeDescriptor();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.name = reader.string();\n          break;\n        case 2:\n          message.number = reader.int32();\n          break;\n        case 3:\n          message.authnInfoProviderMethodFullname = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$name, _object$number, _object$authnInfoProv;\n    var message = createBaseSigningModeDescriptor();\n    message.name = (_object$name = object.name) !== null && _object$name !== void 0 ? _object$name : \"\";\n    message.number = (_object$number = object.number) !== null && _object$number !== void 0 ? _object$number : 0;\n    message.authnInfoProviderMethodFullname = (_object$authnInfoProv = object.authnInfoProviderMethodFullname) !== null && _object$authnInfoProv !== void 0 ? _object$authnInfoProv : \"\";\n    return message;\n  }\n};\nexports.SigningModeDescriptor = SigningModeDescriptor;\nfunction createBaseChainDescriptor() {\n  return {\n    id: \"\"\n  };\n}\nvar ChainDescriptor = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.id !== \"\") {\n      writer.uint32(10).string(message.id);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseChainDescriptor();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.id = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$id;\n    var message = createBaseChainDescriptor();\n    message.id = (_object$id = object.id) !== null && _object$id !== void 0 ? _object$id : \"\";\n    return message;\n  }\n};\nexports.ChainDescriptor = ChainDescriptor;\nfunction createBaseCodecDescriptor() {\n  return {\n    interfaces: []\n  };\n}\nvar CodecDescriptor = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    var _iterator3 = _createForOfIteratorHelper(message.interfaces),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var v = _step3.value;\n        InterfaceDescriptor.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseCodecDescriptor();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.interfaces.push(InterfaceDescriptor.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$interfaces;\n    var message = createBaseCodecDescriptor();\n    message.interfaces = ((_object$interfaces = object.interfaces) === null || _object$interfaces === void 0 ? void 0 : _object$interfaces.map(function (e) {\n      return InterfaceDescriptor.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nexports.CodecDescriptor = CodecDescriptor;\nfunction createBaseInterfaceDescriptor() {\n  return {\n    fullname: \"\",\n    interfaceAcceptingMessages: [],\n    interfaceImplementers: []\n  };\n}\nvar InterfaceDescriptor = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.fullname !== \"\") {\n      writer.uint32(10).string(message.fullname);\n    }\n    var _iterator4 = _createForOfIteratorHelper(message.interfaceAcceptingMessages),\n      _step4;\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var v = _step4.value;\n        InterfaceAcceptingMessageDescriptor.encode(v, writer.uint32(18).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n    var _iterator5 = _createForOfIteratorHelper(message.interfaceImplementers),\n      _step5;\n    try {\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        var _v = _step5.value;\n        InterfaceImplementerDescriptor.encode(_v, writer.uint32(26).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseInterfaceDescriptor();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.fullname = reader.string();\n          break;\n        case 2:\n          message.interfaceAcceptingMessages.push(InterfaceAcceptingMessageDescriptor.decode(reader, reader.uint32()));\n          break;\n        case 3:\n          message.interfaceImplementers.push(InterfaceImplementerDescriptor.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$fullname2, _object$interfaceAcce, _object$interfaceImpl;\n    var message = createBaseInterfaceDescriptor();\n    message.fullname = (_object$fullname2 = object.fullname) !== null && _object$fullname2 !== void 0 ? _object$fullname2 : \"\";\n    message.interfaceAcceptingMessages = ((_object$interfaceAcce = object.interfaceAcceptingMessages) === null || _object$interfaceAcce === void 0 ? void 0 : _object$interfaceAcce.map(function (e) {\n      return InterfaceAcceptingMessageDescriptor.fromPartial(e);\n    })) || [];\n    message.interfaceImplementers = ((_object$interfaceImpl = object.interfaceImplementers) === null || _object$interfaceImpl === void 0 ? void 0 : _object$interfaceImpl.map(function (e) {\n      return InterfaceImplementerDescriptor.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nexports.InterfaceDescriptor = InterfaceDescriptor;\nfunction createBaseInterfaceImplementerDescriptor() {\n  return {\n    fullname: \"\",\n    typeUrl: \"\"\n  };\n}\nvar InterfaceImplementerDescriptor = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.fullname !== \"\") {\n      writer.uint32(10).string(message.fullname);\n    }\n    if (message.typeUrl !== \"\") {\n      writer.uint32(18).string(message.typeUrl);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseInterfaceImplementerDescriptor();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.fullname = reader.string();\n          break;\n        case 2:\n          message.typeUrl = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$fullname3, _object$typeUrl;\n    var message = createBaseInterfaceImplementerDescriptor();\n    message.fullname = (_object$fullname3 = object.fullname) !== null && _object$fullname3 !== void 0 ? _object$fullname3 : \"\";\n    message.typeUrl = (_object$typeUrl = object.typeUrl) !== null && _object$typeUrl !== void 0 ? _object$typeUrl : \"\";\n    return message;\n  }\n};\nexports.InterfaceImplementerDescriptor = InterfaceImplementerDescriptor;\nfunction createBaseInterfaceAcceptingMessageDescriptor() {\n  return {\n    fullname: \"\",\n    fieldDescriptorNames: []\n  };\n}\nvar InterfaceAcceptingMessageDescriptor = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.fullname !== \"\") {\n      writer.uint32(10).string(message.fullname);\n    }\n    var _iterator6 = _createForOfIteratorHelper(message.fieldDescriptorNames),\n      _step6;\n    try {\n      for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n        var v = _step6.value;\n        writer.uint32(18).string(v);\n      }\n    } catch (err) {\n      _iterator6.e(err);\n    } finally {\n      _iterator6.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseInterfaceAcceptingMessageDescriptor();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.fullname = reader.string();\n          break;\n        case 2:\n          message.fieldDescriptorNames.push(reader.string());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$fullname4, _object$fieldDescript;\n    var message = createBaseInterfaceAcceptingMessageDescriptor();\n    message.fullname = (_object$fullname4 = object.fullname) !== null && _object$fullname4 !== void 0 ? _object$fullname4 : \"\";\n    message.fieldDescriptorNames = ((_object$fieldDescript = object.fieldDescriptorNames) === null || _object$fieldDescript === void 0 ? void 0 : _object$fieldDescript.map(function (e) {\n      return e;\n    })) || [];\n    return message;\n  }\n};\nexports.InterfaceAcceptingMessageDescriptor = InterfaceAcceptingMessageDescriptor;\nfunction createBaseConfigurationDescriptor() {\n  return {\n    bech32AccountAddressPrefix: \"\"\n  };\n}\nvar ConfigurationDescriptor = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.bech32AccountAddressPrefix !== \"\") {\n      writer.uint32(10).string(message.bech32AccountAddressPrefix);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseConfigurationDescriptor();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.bech32AccountAddressPrefix = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$bech32Account;\n    var message = createBaseConfigurationDescriptor();\n    message.bech32AccountAddressPrefix = (_object$bech32Account = object.bech32AccountAddressPrefix) !== null && _object$bech32Account !== void 0 ? _object$bech32Account : \"\";\n    return message;\n  }\n};\nexports.ConfigurationDescriptor = ConfigurationDescriptor;\nfunction createBaseMsgDescriptor() {\n  return {\n    msgTypeUrl: \"\"\n  };\n}\nvar MsgDescriptor = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.msgTypeUrl !== \"\") {\n      writer.uint32(10).string(message.msgTypeUrl);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgDescriptor();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.msgTypeUrl = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$msgTypeUrl;\n    var message = createBaseMsgDescriptor();\n    message.msgTypeUrl = (_object$msgTypeUrl = object.msgTypeUrl) !== null && _object$msgTypeUrl !== void 0 ? _object$msgTypeUrl : \"\";\n    return message;\n  }\n};\nexports.MsgDescriptor = MsgDescriptor;\nfunction createBaseGetAuthnDescriptorRequest() {\n  return {};\n}\nvar GetAuthnDescriptorRequest = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseGetAuthnDescriptorRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseGetAuthnDescriptorRequest();\n    return message;\n  }\n};\nexports.GetAuthnDescriptorRequest = GetAuthnDescriptorRequest;\nfunction createBaseGetAuthnDescriptorResponse() {\n  return {\n    authn: AuthnDescriptor.fromPartial({})\n  };\n}\nvar GetAuthnDescriptorResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.authn !== undefined) {\n      AuthnDescriptor.encode(message.authn, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseGetAuthnDescriptorResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.authn = AuthnDescriptor.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseGetAuthnDescriptorResponse();\n    message.authn = object.authn !== undefined && object.authn !== null ? AuthnDescriptor.fromPartial(object.authn) : undefined;\n    return message;\n  }\n};\nexports.GetAuthnDescriptorResponse = GetAuthnDescriptorResponse;\nfunction createBaseGetChainDescriptorRequest() {\n  return {};\n}\nvar GetChainDescriptorRequest = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseGetChainDescriptorRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseGetChainDescriptorRequest();\n    return message;\n  }\n};\nexports.GetChainDescriptorRequest = GetChainDescriptorRequest;\nfunction createBaseGetChainDescriptorResponse() {\n  return {\n    chain: ChainDescriptor.fromPartial({})\n  };\n}\nvar GetChainDescriptorResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.chain !== undefined) {\n      ChainDescriptor.encode(message.chain, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseGetChainDescriptorResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.chain = ChainDescriptor.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseGetChainDescriptorResponse();\n    message.chain = object.chain !== undefined && object.chain !== null ? ChainDescriptor.fromPartial(object.chain) : undefined;\n    return message;\n  }\n};\nexports.GetChainDescriptorResponse = GetChainDescriptorResponse;\nfunction createBaseGetCodecDescriptorRequest() {\n  return {};\n}\nvar GetCodecDescriptorRequest = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseGetCodecDescriptorRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseGetCodecDescriptorRequest();\n    return message;\n  }\n};\nexports.GetCodecDescriptorRequest = GetCodecDescriptorRequest;\nfunction createBaseGetCodecDescriptorResponse() {\n  return {\n    codec: CodecDescriptor.fromPartial({})\n  };\n}\nvar GetCodecDescriptorResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.codec !== undefined) {\n      CodecDescriptor.encode(message.codec, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseGetCodecDescriptorResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.codec = CodecDescriptor.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseGetCodecDescriptorResponse();\n    message.codec = object.codec !== undefined && object.codec !== null ? CodecDescriptor.fromPartial(object.codec) : undefined;\n    return message;\n  }\n};\nexports.GetCodecDescriptorResponse = GetCodecDescriptorResponse;\nfunction createBaseGetConfigurationDescriptorRequest() {\n  return {};\n}\nvar GetConfigurationDescriptorRequest = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseGetConfigurationDescriptorRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseGetConfigurationDescriptorRequest();\n    return message;\n  }\n};\nexports.GetConfigurationDescriptorRequest = GetConfigurationDescriptorRequest;\nfunction createBaseGetConfigurationDescriptorResponse() {\n  return {\n    config: ConfigurationDescriptor.fromPartial({})\n  };\n}\nvar GetConfigurationDescriptorResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.config !== undefined) {\n      ConfigurationDescriptor.encode(message.config, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseGetConfigurationDescriptorResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.config = ConfigurationDescriptor.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseGetConfigurationDescriptorResponse();\n    message.config = object.config !== undefined && object.config !== null ? ConfigurationDescriptor.fromPartial(object.config) : undefined;\n    return message;\n  }\n};\nexports.GetConfigurationDescriptorResponse = GetConfigurationDescriptorResponse;\nfunction createBaseGetQueryServicesDescriptorRequest() {\n  return {};\n}\nvar GetQueryServicesDescriptorRequest = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseGetQueryServicesDescriptorRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseGetQueryServicesDescriptorRequest();\n    return message;\n  }\n};\nexports.GetQueryServicesDescriptorRequest = GetQueryServicesDescriptorRequest;\nfunction createBaseGetQueryServicesDescriptorResponse() {\n  return {\n    queries: QueryServicesDescriptor.fromPartial({})\n  };\n}\nvar GetQueryServicesDescriptorResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.queries !== undefined) {\n      QueryServicesDescriptor.encode(message.queries, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseGetQueryServicesDescriptorResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.queries = QueryServicesDescriptor.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseGetQueryServicesDescriptorResponse();\n    message.queries = object.queries !== undefined && object.queries !== null ? QueryServicesDescriptor.fromPartial(object.queries) : undefined;\n    return message;\n  }\n};\nexports.GetQueryServicesDescriptorResponse = GetQueryServicesDescriptorResponse;\nfunction createBaseGetTxDescriptorRequest() {\n  return {};\n}\nvar GetTxDescriptorRequest = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseGetTxDescriptorRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseGetTxDescriptorRequest();\n    return message;\n  }\n};\nexports.GetTxDescriptorRequest = GetTxDescriptorRequest;\nfunction createBaseGetTxDescriptorResponse() {\n  return {\n    tx: TxDescriptor.fromPartial({})\n  };\n}\nvar GetTxDescriptorResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.tx !== undefined) {\n      TxDescriptor.encode(message.tx, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseGetTxDescriptorResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.tx = TxDescriptor.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseGetTxDescriptorResponse();\n    message.tx = object.tx !== undefined && object.tx !== null ? TxDescriptor.fromPartial(object.tx) : undefined;\n    return message;\n  }\n};\nexports.GetTxDescriptorResponse = GetTxDescriptorResponse;\nfunction createBaseQueryServicesDescriptor() {\n  return {\n    queryServices: []\n  };\n}\nvar QueryServicesDescriptor = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    var _iterator7 = _createForOfIteratorHelper(message.queryServices),\n      _step7;\n    try {\n      for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n        var v = _step7.value;\n        QueryServiceDescriptor.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator7.e(err);\n    } finally {\n      _iterator7.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryServicesDescriptor();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.queryServices.push(QueryServiceDescriptor.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$queryServices;\n    var message = createBaseQueryServicesDescriptor();\n    message.queryServices = ((_object$queryServices = object.queryServices) === null || _object$queryServices === void 0 ? void 0 : _object$queryServices.map(function (e) {\n      return QueryServiceDescriptor.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nexports.QueryServicesDescriptor = QueryServicesDescriptor;\nfunction createBaseQueryServiceDescriptor() {\n  return {\n    fullname: \"\",\n    isModule: false,\n    methods: []\n  };\n}\nvar QueryServiceDescriptor = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.fullname !== \"\") {\n      writer.uint32(10).string(message.fullname);\n    }\n    if (message.isModule === true) {\n      writer.uint32(16).bool(message.isModule);\n    }\n    var _iterator8 = _createForOfIteratorHelper(message.methods),\n      _step8;\n    try {\n      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n        var v = _step8.value;\n        QueryMethodDescriptor.encode(v, writer.uint32(26).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator8.e(err);\n    } finally {\n      _iterator8.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryServiceDescriptor();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.fullname = reader.string();\n          break;\n        case 2:\n          message.isModule = reader.bool();\n          break;\n        case 3:\n          message.methods.push(QueryMethodDescriptor.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$fullname5, _object$isModule, _object$methods;\n    var message = createBaseQueryServiceDescriptor();\n    message.fullname = (_object$fullname5 = object.fullname) !== null && _object$fullname5 !== void 0 ? _object$fullname5 : \"\";\n    message.isModule = (_object$isModule = object.isModule) !== null && _object$isModule !== void 0 ? _object$isModule : false;\n    message.methods = ((_object$methods = object.methods) === null || _object$methods === void 0 ? void 0 : _object$methods.map(function (e) {\n      return QueryMethodDescriptor.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nexports.QueryServiceDescriptor = QueryServiceDescriptor;\nfunction createBaseQueryMethodDescriptor() {\n  return {\n    name: \"\",\n    fullQueryPath: \"\"\n  };\n}\nvar QueryMethodDescriptor = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.name !== \"\") {\n      writer.uint32(10).string(message.name);\n    }\n    if (message.fullQueryPath !== \"\") {\n      writer.uint32(18).string(message.fullQueryPath);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryMethodDescriptor();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.name = reader.string();\n          break;\n        case 2:\n          message.fullQueryPath = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$name2, _object$fullQueryPath;\n    var message = createBaseQueryMethodDescriptor();\n    message.name = (_object$name2 = object.name) !== null && _object$name2 !== void 0 ? _object$name2 : \"\";\n    message.fullQueryPath = (_object$fullQueryPath = object.fullQueryPath) !== null && _object$fullQueryPath !== void 0 ? _object$fullQueryPath : \"\";\n    return message;\n  }\n};\nexports.QueryMethodDescriptor = QueryMethodDescriptor;","map":null,"metadata":{},"sourceType":"script"}