{"ast":null,"code":"import _slicedToArray from \"/Users/linanqi/Hackathon/RKA-808/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/linanqi/Hackathon/RKA-808/frontend/src/components/Toolbar.js\";\nimport React, { useContext, memo, useRef, useState } from 'react';\nimport { sequenceList } from '../constants/config';\nimport { Context } from '../hooks/useStore';\nimport './Toolbar.css';\n\nconst ToolBar = ({\n  setStartTime,\n  setPastLapse,\n  setBPM,\n  isSequencePlaying,\n  startTime,\n  BPM\n}) => {\n  const fileInputRef = useRef(null);\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        file = _useState2[0],\n        setFile = _useState2[1];\n\n  const _useContext = useContext(Context),\n        selectedSequenceID = _useContext.sequence.id,\n        selectSequence = _useContext.selectSequence;\n\n  function togglePlayback() {\n    if (isSequencePlaying) {\n      setPastLapse(l => l + performance.now() - startTime);\n      setStartTime(null);\n    } else {\n      setStartTime(performance.now());\n    }\n  }\n\n  function stopPlayback() {\n    setPastLapse(0);\n    setStartTime(null);\n  }\n\n  function updateBPM(e) {\n    setBPM(e.target.value);\n  }\n\n  function handleUpload() {\n    fileInputRef.current.click();\n  }\n\n  function handleFile(event) {\n    setFile(event.target.files[0]); // Handle the selected file, e.g., upload it to the server or process it\n\n    console.log(event.target.files[0]);\n  }\n\n  function handleGenerate(e) {// setBPM(e.target.value)\n    // need to be changed\n  }\n\n  return React.createElement(\"div\", {\n    className: \"toolbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleUpload,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"file\",\n    name: \"file\",\n    onChange: handleFile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"upload\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Upload\")), React.createElement(\"button\", {\n    className: \"generate\",\n    onClick: handleGenerate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Generate\"), React.createElement(\"button\", {\n    className: \"form_element button_stop\",\n    onClick: stopPlayback,\n    \"aria-label\": \"Stop\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    width: \"14\",\n    height: \"14\",\n    viewBox: \"0 0 14 14\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"rect\", {\n    className: \"button_icon_path\",\n    x: \"2\",\n    y: \"2\",\n    width: \"10\",\n    height: \"10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }))), React.createElement(\"button\", {\n    className: \"form_element button_play_pause\",\n    onClick: togglePlayback,\n    \"aria-label\": \"Play / Pause\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    width: \"14\",\n    height: \"14\",\n    viewBox: \"8 8 20 20\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, isSequencePlaying && React.createElement(\"path\", {\n    className: \"button_icon_path\",\n    id: \"pause-icon\",\n    \"data-state\": \"playing\",\n    d: \"M11,10 L17,10 17,26 11,26 M20,10 L26,10 26,26 20,26\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), !isSequencePlaying && React.createElement(\"path\", {\n    className: \"button_icon_path\",\n    id: \"play-icon\",\n    \"data-state\": \"paused\",\n    d: \"M11,10 L18,13.74 18,22.28 11,26 M18,13.74 L26,18 26,18 18,22.28\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }))), React.createElement(\"input\", {\n    className: \"form_element input_bpm\",\n    id: \"bpm\",\n    type: \"text\",\n    value: BPM,\n    onChange: updateBPM,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"label_bpm\",\n    htmlFor: \"bpm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"BPM\"), React.createElement(\"select\", {\n    className: \"form_element select_sequence\",\n    value: selectedSequenceID,\n    onChange: e => selectSequence(+e.target.value),\n    \"aria-label\": \"Select sequence\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, sequenceList.map(seq => {\n    return React.createElement(\"option\", {\n      key: seq.id,\n      value: seq.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, seq.title);\n  })));\n};\n\nexport default memo(ToolBar);","map":{"version":3,"sources":["/Users/linanqi/Hackathon/RKA-808/frontend/src/components/Toolbar.js"],"names":["React","useContext","memo","useRef","useState","sequenceList","Context","ToolBar","setStartTime","setPastLapse","setBPM","isSequencePlaying","startTime","BPM","fileInputRef","file","setFile","selectedSequenceID","sequence","id","selectSequence","togglePlayback","l","performance","now","stopPlayback","updateBPM","e","target","value","handleUpload","current","click","handleFile","event","files","console","log","handleGenerate","map","seq","title"],"mappings":"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","sourcesContent":["import React, { useContext, memo, useRef, useState } from 'react'\nimport { sequenceList } from '../constants/config'\nimport { Context } from '../hooks/useStore'\nimport './Toolbar.css'\n\nconst ToolBar = ({\n    setStartTime,\n    setPastLapse,\n    setBPM,\n    isSequencePlaying,\n    startTime,\n    BPM\n}) => {\n    const fileInputRef = useRef(null);\n    const[file,setFile] = useState()\n    const { sequence: { id: selectedSequenceID }, selectSequence } = useContext(Context)\n\n    function togglePlayback() {\n        if (isSequencePlaying) {\n            setPastLapse(l => l + performance.now() - startTime)\n            setStartTime(null)\n        } else {\n            setStartTime(performance.now())\n        }\n    }\n\n    function stopPlayback() {\n        setPastLapse(0)\n        setStartTime(null)\n    }\n\n    function updateBPM(e) {\n        setBPM(e.target.value)\n    }\n\n    function handleUpload() {\n        fileInputRef.current.click();\n    }\n\n    function handleFile(event) {\n        setFile(event.target.files[0]);\n        // Handle the selected file, e.g., upload it to the server or process it\n        console.log(event.target.files[0]);\n      }\n\n    function handleGenerate(e) {\n        // setBPM(e.target.value)\n        // need to be changed\n    }\n\n    return (\n        <div className=\"toolbar\">\n            <form onSubmit={handleUpload}>\n                <input type=\"file\" name=\"file\" onChange={handleFile} />\n                <button className=\"upload\">Upload</button>\n            </form>\n            <button className=\"generate\" onClick={handleGenerate}>Generate</button>\n            <button className=\"form_element button_stop\" onClick={stopPlayback} aria-label=\"Stop\">\n                <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\">\n                    <rect className=\"button_icon_path\" x=\"2\" y=\"2\" width=\"10\" height=\"10\" />\n                </svg>\n            </button>\n            <button className=\"form_element button_play_pause\" onClick={togglePlayback} aria-label=\"Play / Pause\">\n                <svg width=\"14\" height=\"14\" viewBox=\"8 8 20 20\">\n                    {isSequencePlaying && <path className=\"button_icon_path\" id=\"pause-icon\" data-state=\"playing\" d=\"M11,10 L17,10 17,26 11,26 M20,10 L26,10 26,26 20,26\" />}\n                    {!isSequencePlaying && <path className=\"button_icon_path\" id=\"play-icon\" data-state=\"paused\" d=\"M11,10 L18,13.74 18,22.28 11,26 M18,13.74 L26,18 26,18 18,22.28\" />}\n                </svg>\n            </button>\n            <input className=\"form_element input_bpm\" id=\"bpm\" type=\"text\" value={BPM} onChange={updateBPM} />\n            <label className=\"label_bpm\" htmlFor=\"bpm\">BPM</label>\n            <select\n                className=\"form_element select_sequence\"\n                value={selectedSequenceID}\n                onChange={e => selectSequence(+e.target.value)}\n                aria-label=\"Select sequence\"\n            >\n                {\n                    sequenceList.map(seq => {\n                        return (\n                            <option\n                                key={seq.id}\n                                value={seq.id}\n                            >\n                                {seq.title}\n                            </option>\n                        )\n                    })\n                }\n            </select>\n        </div>\n    )\n}\n\nexport default memo(ToolBar)\n"]},"metadata":{},"sourceType":"module"}