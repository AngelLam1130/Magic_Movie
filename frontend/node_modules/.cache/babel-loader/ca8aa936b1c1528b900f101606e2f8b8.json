{"ast":null,"code":"\"use strict\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HashedParams = exports.VersionParams = exports.ValidatorParams = exports.EvidenceParams = exports.BlockParams = exports.ConsensusParams = exports.protobufPackage = void 0;\n/* eslint-disable */\nvar long_1 = __importDefault(require(\"long\"));\nvar minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nvar duration_1 = require(\"../../google/protobuf/duration\");\nexports.protobufPackage = \"tendermint.types\";\nfunction createBaseConsensusParams() {\n  return {\n    block: undefined,\n    evidence: undefined,\n    validator: undefined,\n    version: undefined\n  };\n}\nexports.ConsensusParams = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.block !== undefined) {\n      exports.BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.evidence !== undefined) {\n      exports.EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.validator !== undefined) {\n      exports.ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.version !== undefined) {\n      exports.VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseConsensusParams();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.block = exports.BlockParams.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.evidence = exports.EvidenceParams.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.validator = exports.ValidatorParams.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.version = exports.VersionParams.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      block: isSet(object.block) ? exports.BlockParams.fromJSON(object.block) : undefined,\n      evidence: isSet(object.evidence) ? exports.EvidenceParams.fromJSON(object.evidence) : undefined,\n      validator: isSet(object.validator) ? exports.ValidatorParams.fromJSON(object.validator) : undefined,\n      version: isSet(object.version) ? exports.VersionParams.fromJSON(object.version) : undefined\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.block !== undefined && (obj.block = message.block ? exports.BlockParams.toJSON(message.block) : undefined);\n    message.evidence !== undefined && (obj.evidence = message.evidence ? exports.EvidenceParams.toJSON(message.evidence) : undefined);\n    message.validator !== undefined && (obj.validator = message.validator ? exports.ValidatorParams.toJSON(message.validator) : undefined);\n    message.version !== undefined && (obj.version = message.version ? exports.VersionParams.toJSON(message.version) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseConsensusParams();\n    message.block = object.block !== undefined && object.block !== null ? exports.BlockParams.fromPartial(object.block) : undefined;\n    message.evidence = object.evidence !== undefined && object.evidence !== null ? exports.EvidenceParams.fromPartial(object.evidence) : undefined;\n    message.validator = object.validator !== undefined && object.validator !== null ? exports.ValidatorParams.fromPartial(object.validator) : undefined;\n    message.version = object.version !== undefined && object.version !== null ? exports.VersionParams.fromPartial(object.version) : undefined;\n    return message;\n  }\n};\nfunction createBaseBlockParams() {\n  return {\n    maxBytes: long_1.default.ZERO,\n    maxGas: long_1.default.ZERO,\n    timeIotaMs: long_1.default.ZERO\n  };\n}\nexports.BlockParams = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (!message.maxBytes.isZero()) {\n      writer.uint32(8).int64(message.maxBytes);\n    }\n    if (!message.maxGas.isZero()) {\n      writer.uint32(16).int64(message.maxGas);\n    }\n    if (!message.timeIotaMs.isZero()) {\n      writer.uint32(24).int64(message.timeIotaMs);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseBlockParams();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.maxBytes = reader.int64();\n          break;\n        case 2:\n          message.maxGas = reader.int64();\n          break;\n        case 3:\n          message.timeIotaMs = reader.int64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      maxBytes: isSet(object.maxBytes) ? long_1.default.fromValue(object.maxBytes) : long_1.default.ZERO,\n      maxGas: isSet(object.maxGas) ? long_1.default.fromValue(object.maxGas) : long_1.default.ZERO,\n      timeIotaMs: isSet(object.timeIotaMs) ? long_1.default.fromValue(object.timeIotaMs) : long_1.default.ZERO\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.maxBytes !== undefined && (obj.maxBytes = (message.maxBytes || long_1.default.ZERO).toString());\n    message.maxGas !== undefined && (obj.maxGas = (message.maxGas || long_1.default.ZERO).toString());\n    message.timeIotaMs !== undefined && (obj.timeIotaMs = (message.timeIotaMs || long_1.default.ZERO).toString());\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseBlockParams();\n    message.maxBytes = object.maxBytes !== undefined && object.maxBytes !== null ? long_1.default.fromValue(object.maxBytes) : long_1.default.ZERO;\n    message.maxGas = object.maxGas !== undefined && object.maxGas !== null ? long_1.default.fromValue(object.maxGas) : long_1.default.ZERO;\n    message.timeIotaMs = object.timeIotaMs !== undefined && object.timeIotaMs !== null ? long_1.default.fromValue(object.timeIotaMs) : long_1.default.ZERO;\n    return message;\n  }\n};\nfunction createBaseEvidenceParams() {\n  return {\n    maxAgeNumBlocks: long_1.default.ZERO,\n    maxAgeDuration: undefined,\n    maxBytes: long_1.default.ZERO\n  };\n}\nexports.EvidenceParams = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (!message.maxAgeNumBlocks.isZero()) {\n      writer.uint32(8).int64(message.maxAgeNumBlocks);\n    }\n    if (message.maxAgeDuration !== undefined) {\n      duration_1.Duration.encode(message.maxAgeDuration, writer.uint32(18).fork()).ldelim();\n    }\n    if (!message.maxBytes.isZero()) {\n      writer.uint32(24).int64(message.maxBytes);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseEvidenceParams();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.maxAgeNumBlocks = reader.int64();\n          break;\n        case 2:\n          message.maxAgeDuration = duration_1.Duration.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.maxBytes = reader.int64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      maxAgeNumBlocks: isSet(object.maxAgeNumBlocks) ? long_1.default.fromValue(object.maxAgeNumBlocks) : long_1.default.ZERO,\n      maxAgeDuration: isSet(object.maxAgeDuration) ? duration_1.Duration.fromJSON(object.maxAgeDuration) : undefined,\n      maxBytes: isSet(object.maxBytes) ? long_1.default.fromValue(object.maxBytes) : long_1.default.ZERO\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.maxAgeNumBlocks !== undefined && (obj.maxAgeNumBlocks = (message.maxAgeNumBlocks || long_1.default.ZERO).toString());\n    message.maxAgeDuration !== undefined && (obj.maxAgeDuration = message.maxAgeDuration ? duration_1.Duration.toJSON(message.maxAgeDuration) : undefined);\n    message.maxBytes !== undefined && (obj.maxBytes = (message.maxBytes || long_1.default.ZERO).toString());\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseEvidenceParams();\n    message.maxAgeNumBlocks = object.maxAgeNumBlocks !== undefined && object.maxAgeNumBlocks !== null ? long_1.default.fromValue(object.maxAgeNumBlocks) : long_1.default.ZERO;\n    message.maxAgeDuration = object.maxAgeDuration !== undefined && object.maxAgeDuration !== null ? duration_1.Duration.fromPartial(object.maxAgeDuration) : undefined;\n    message.maxBytes = object.maxBytes !== undefined && object.maxBytes !== null ? long_1.default.fromValue(object.maxBytes) : long_1.default.ZERO;\n    return message;\n  }\n};\nfunction createBaseValidatorParams() {\n  return {\n    pubKeyTypes: []\n  };\n}\nexports.ValidatorParams = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    var _iterator = _createForOfIteratorHelper(message.pubKeyTypes),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        writer.uint32(10).string(v);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseValidatorParams();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.pubKeyTypes.push(reader.string());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      pubKeyTypes: Array.isArray(object === null || object === void 0 ? void 0 : object.pubKeyTypes) ? object.pubKeyTypes.map(function (e) {\n        return String(e);\n      }) : []\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    if (message.pubKeyTypes) {\n      obj.pubKeyTypes = message.pubKeyTypes.map(function (e) {\n        return e;\n      });\n    } else {\n      obj.pubKeyTypes = [];\n    }\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseValidatorParams();\n    message.pubKeyTypes = ((_a = object.pubKeyTypes) === null || _a === void 0 ? void 0 : _a.map(function (e) {\n      return e;\n    })) || [];\n    return message;\n  }\n};\nfunction createBaseVersionParams() {\n  return {\n    appVersion: long_1.default.UZERO\n  };\n}\nexports.VersionParams = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (!message.appVersion.isZero()) {\n      writer.uint32(8).uint64(message.appVersion);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseVersionParams();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.appVersion = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      appVersion: isSet(object.appVersion) ? long_1.default.fromValue(object.appVersion) : long_1.default.UZERO\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.appVersion !== undefined && (obj.appVersion = (message.appVersion || long_1.default.UZERO).toString());\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseVersionParams();\n    message.appVersion = object.appVersion !== undefined && object.appVersion !== null ? long_1.default.fromValue(object.appVersion) : long_1.default.UZERO;\n    return message;\n  }\n};\nfunction createBaseHashedParams() {\n  return {\n    blockMaxBytes: long_1.default.ZERO,\n    blockMaxGas: long_1.default.ZERO\n  };\n}\nexports.HashedParams = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (!message.blockMaxBytes.isZero()) {\n      writer.uint32(8).int64(message.blockMaxBytes);\n    }\n    if (!message.blockMaxGas.isZero()) {\n      writer.uint32(16).int64(message.blockMaxGas);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseHashedParams();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.blockMaxBytes = reader.int64();\n          break;\n        case 2:\n          message.blockMaxGas = reader.int64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      blockMaxBytes: isSet(object.blockMaxBytes) ? long_1.default.fromValue(object.blockMaxBytes) : long_1.default.ZERO,\n      blockMaxGas: isSet(object.blockMaxGas) ? long_1.default.fromValue(object.blockMaxGas) : long_1.default.ZERO\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.blockMaxBytes !== undefined && (obj.blockMaxBytes = (message.blockMaxBytes || long_1.default.ZERO).toString());\n    message.blockMaxGas !== undefined && (obj.blockMaxGas = (message.blockMaxGas || long_1.default.ZERO).toString());\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseHashedParams();\n    message.blockMaxBytes = object.blockMaxBytes !== undefined && object.blockMaxBytes !== null ? long_1.default.fromValue(object.blockMaxBytes) : long_1.default.ZERO;\n    message.blockMaxGas = object.blockMaxGas !== undefined && object.blockMaxGas !== null ? long_1.default.fromValue(object.blockMaxGas) : long_1.default.ZERO;\n    return message;\n  }\n};\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}\nfunction isSet(value) {\n  return value !== null && value !== undefined;\n}","map":null,"metadata":{},"sourceType":"script"}