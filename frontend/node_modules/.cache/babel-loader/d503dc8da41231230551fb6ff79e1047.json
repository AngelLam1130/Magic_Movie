{"ast":null,"code":"\"use strict\";\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LightClientAttackEvidence = exports.EvidenceList = exports.Evidence = exports.DuplicateVoteEvidence = void 0;\nvar _types = require(\"./types\");\nvar _timestamp = require(\"../../google/protobuf/timestamp\");\nvar _validator = require(\"./validator\");\nvar _helpers = require(\"../../helpers\");\nvar _m0 = _interopRequireWildcard(require(\"protobufjs/minimal\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj[\"default\"] = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction createBaseEvidence() {\n  return {\n    duplicateVoteEvidence: undefined,\n    lightClientAttackEvidence: undefined\n  };\n}\nvar Evidence = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.duplicateVoteEvidence !== undefined) {\n      DuplicateVoteEvidence.encode(message.duplicateVoteEvidence, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.lightClientAttackEvidence !== undefined) {\n      LightClientAttackEvidence.encode(message.lightClientAttackEvidence, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseEvidence();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.duplicateVoteEvidence = DuplicateVoteEvidence.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.lightClientAttackEvidence = LightClientAttackEvidence.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseEvidence();\n    message.duplicateVoteEvidence = object.duplicateVoteEvidence !== undefined && object.duplicateVoteEvidence !== null ? DuplicateVoteEvidence.fromPartial(object.duplicateVoteEvidence) : undefined;\n    message.lightClientAttackEvidence = object.lightClientAttackEvidence !== undefined && object.lightClientAttackEvidence !== null ? LightClientAttackEvidence.fromPartial(object.lightClientAttackEvidence) : undefined;\n    return message;\n  }\n};\nexports.Evidence = Evidence;\nfunction createBaseDuplicateVoteEvidence() {\n  return {\n    voteA: _types.Vote.fromPartial({}),\n    voteB: _types.Vote.fromPartial({}),\n    totalVotingPower: _helpers.Long.ZERO,\n    validatorPower: _helpers.Long.ZERO,\n    timestamp: undefined\n  };\n}\nvar DuplicateVoteEvidence = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.voteA !== undefined) {\n      _types.Vote.encode(message.voteA, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.voteB !== undefined) {\n      _types.Vote.encode(message.voteB, writer.uint32(18).fork()).ldelim();\n    }\n    if (!message.totalVotingPower.isZero()) {\n      writer.uint32(24).int64(message.totalVotingPower);\n    }\n    if (!message.validatorPower.isZero()) {\n      writer.uint32(32).int64(message.validatorPower);\n    }\n    if (message.timestamp !== undefined) {\n      _timestamp.Timestamp.encode((0, _helpers.toTimestamp)(message.timestamp), writer.uint32(42).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseDuplicateVoteEvidence();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.voteA = _types.Vote.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.voteB = _types.Vote.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.totalVotingPower = reader.int64();\n          break;\n        case 4:\n          message.validatorPower = reader.int64();\n          break;\n        case 5:\n          message.timestamp = (0, _helpers.fromTimestamp)(_timestamp.Timestamp.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$timestamp;\n    var message = createBaseDuplicateVoteEvidence();\n    message.voteA = object.voteA !== undefined && object.voteA !== null ? _types.Vote.fromPartial(object.voteA) : undefined;\n    message.voteB = object.voteB !== undefined && object.voteB !== null ? _types.Vote.fromPartial(object.voteB) : undefined;\n    message.totalVotingPower = object.totalVotingPower !== undefined && object.totalVotingPower !== null ? _helpers.Long.fromValue(object.totalVotingPower) : _helpers.Long.ZERO;\n    message.validatorPower = object.validatorPower !== undefined && object.validatorPower !== null ? _helpers.Long.fromValue(object.validatorPower) : _helpers.Long.ZERO;\n    message.timestamp = (_object$timestamp = object.timestamp) !== null && _object$timestamp !== void 0 ? _object$timestamp : undefined;\n    return message;\n  }\n};\nexports.DuplicateVoteEvidence = DuplicateVoteEvidence;\nfunction createBaseLightClientAttackEvidence() {\n  return {\n    conflictingBlock: _types.LightBlock.fromPartial({}),\n    commonHeight: _helpers.Long.ZERO,\n    byzantineValidators: [],\n    totalVotingPower: _helpers.Long.ZERO,\n    timestamp: undefined\n  };\n}\nvar LightClientAttackEvidence = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.conflictingBlock !== undefined) {\n      _types.LightBlock.encode(message.conflictingBlock, writer.uint32(10).fork()).ldelim();\n    }\n    if (!message.commonHeight.isZero()) {\n      writer.uint32(16).int64(message.commonHeight);\n    }\n    var _iterator = _createForOfIteratorHelper(message.byzantineValidators),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        _validator.Validator.encode(v, writer.uint32(26).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    if (!message.totalVotingPower.isZero()) {\n      writer.uint32(32).int64(message.totalVotingPower);\n    }\n    if (message.timestamp !== undefined) {\n      _timestamp.Timestamp.encode((0, _helpers.toTimestamp)(message.timestamp), writer.uint32(42).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseLightClientAttackEvidence();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.conflictingBlock = _types.LightBlock.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.commonHeight = reader.int64();\n          break;\n        case 3:\n          message.byzantineValidators.push(_validator.Validator.decode(reader, reader.uint32()));\n          break;\n        case 4:\n          message.totalVotingPower = reader.int64();\n          break;\n        case 5:\n          message.timestamp = (0, _helpers.fromTimestamp)(_timestamp.Timestamp.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$byzantineVali, _object$timestamp2;\n    var message = createBaseLightClientAttackEvidence();\n    message.conflictingBlock = object.conflictingBlock !== undefined && object.conflictingBlock !== null ? _types.LightBlock.fromPartial(object.conflictingBlock) : undefined;\n    message.commonHeight = object.commonHeight !== undefined && object.commonHeight !== null ? _helpers.Long.fromValue(object.commonHeight) : _helpers.Long.ZERO;\n    message.byzantineValidators = ((_object$byzantineVali = object.byzantineValidators) === null || _object$byzantineVali === void 0 ? void 0 : _object$byzantineVali.map(function (e) {\n      return _validator.Validator.fromPartial(e);\n    })) || [];\n    message.totalVotingPower = object.totalVotingPower !== undefined && object.totalVotingPower !== null ? _helpers.Long.fromValue(object.totalVotingPower) : _helpers.Long.ZERO;\n    message.timestamp = (_object$timestamp2 = object.timestamp) !== null && _object$timestamp2 !== void 0 ? _object$timestamp2 : undefined;\n    return message;\n  }\n};\nexports.LightClientAttackEvidence = LightClientAttackEvidence;\nfunction createBaseEvidenceList() {\n  return {\n    evidence: []\n  };\n}\nvar EvidenceList = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    var _iterator2 = _createForOfIteratorHelper(message.evidence),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var v = _step2.value;\n        Evidence.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseEvidenceList();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.evidence.push(Evidence.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$evidence;\n    var message = createBaseEvidenceList();\n    message.evidence = ((_object$evidence = object.evidence) === null || _object$evidence === void 0 ? void 0 : _object$evidence.map(function (e) {\n      return Evidence.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nexports.EvidenceList = EvidenceList;","map":{"version":3,"names":["_typeof","require","Object","defineProperty","exports","value","LightClientAttackEvidence","EvidenceList","Evidence","DuplicateVoteEvidence","_types","_timestamp","_validator","_helpers","_m0","_interopRequireWildcard","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","e","_e","f","TypeError","normalCompletion","didErr","err","step","next","_e2","minLen","_arrayLikeToArray","toString","slice","constructor","name","from","test","arr","len","arr2","createBaseEvidence","duplicateVoteEvidence","undefined","lightClientAttackEvidence","encode","message","writer","arguments","Writer","create","uint32","fork","ldelim","decode","input","reader","Reader","end","pos","tag","skipType","fromPartial","object","createBaseDuplicateVoteEvidence","voteA","Vote","voteB","totalVotingPower","Long","ZERO","validatorPower","timestamp","isZero","int64","Timestamp","toTimestamp","fromTimestamp","_object$timestamp","fromValue","createBaseLightClientAttackEvidence","conflictingBlock","LightBlock","commonHeight","byzantineValidators","_iterator","_step","v","Validator","push","_object$byzantineVali","_object$timestamp2","map","createBaseEvidenceList","evidence","_iterator2","_step2","_object$evidence"],"sources":["/Users/linanqi/node_modules/@sei-js/proto/main/codegen/tendermint/types/evidence.js"],"sourcesContent":["\"use strict\";\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LightClientAttackEvidence = exports.EvidenceList = exports.Evidence = exports.DuplicateVoteEvidence = void 0;\nvar _types = require(\"./types\");\nvar _timestamp = require(\"../../google/protobuf/timestamp\");\nvar _validator = require(\"./validator\");\nvar _helpers = require(\"../../helpers\");\nvar _m0 = _interopRequireWildcard(require(\"protobufjs/minimal\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction createBaseEvidence() {\n  return {\n    duplicateVoteEvidence: undefined,\n    lightClientAttackEvidence: undefined\n  };\n}\nvar Evidence = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.duplicateVoteEvidence !== undefined) {\n      DuplicateVoteEvidence.encode(message.duplicateVoteEvidence, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.lightClientAttackEvidence !== undefined) {\n      LightClientAttackEvidence.encode(message.lightClientAttackEvidence, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseEvidence();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.duplicateVoteEvidence = DuplicateVoteEvidence.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.lightClientAttackEvidence = LightClientAttackEvidence.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseEvidence();\n    message.duplicateVoteEvidence = object.duplicateVoteEvidence !== undefined && object.duplicateVoteEvidence !== null ? DuplicateVoteEvidence.fromPartial(object.duplicateVoteEvidence) : undefined;\n    message.lightClientAttackEvidence = object.lightClientAttackEvidence !== undefined && object.lightClientAttackEvidence !== null ? LightClientAttackEvidence.fromPartial(object.lightClientAttackEvidence) : undefined;\n    return message;\n  }\n};\nexports.Evidence = Evidence;\nfunction createBaseDuplicateVoteEvidence() {\n  return {\n    voteA: _types.Vote.fromPartial({}),\n    voteB: _types.Vote.fromPartial({}),\n    totalVotingPower: _helpers.Long.ZERO,\n    validatorPower: _helpers.Long.ZERO,\n    timestamp: undefined\n  };\n}\nvar DuplicateVoteEvidence = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.voteA !== undefined) {\n      _types.Vote.encode(message.voteA, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.voteB !== undefined) {\n      _types.Vote.encode(message.voteB, writer.uint32(18).fork()).ldelim();\n    }\n    if (!message.totalVotingPower.isZero()) {\n      writer.uint32(24).int64(message.totalVotingPower);\n    }\n    if (!message.validatorPower.isZero()) {\n      writer.uint32(32).int64(message.validatorPower);\n    }\n    if (message.timestamp !== undefined) {\n      _timestamp.Timestamp.encode((0, _helpers.toTimestamp)(message.timestamp), writer.uint32(42).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseDuplicateVoteEvidence();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.voteA = _types.Vote.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.voteB = _types.Vote.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.totalVotingPower = reader.int64();\n          break;\n        case 4:\n          message.validatorPower = reader.int64();\n          break;\n        case 5:\n          message.timestamp = (0, _helpers.fromTimestamp)(_timestamp.Timestamp.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$timestamp;\n    var message = createBaseDuplicateVoteEvidence();\n    message.voteA = object.voteA !== undefined && object.voteA !== null ? _types.Vote.fromPartial(object.voteA) : undefined;\n    message.voteB = object.voteB !== undefined && object.voteB !== null ? _types.Vote.fromPartial(object.voteB) : undefined;\n    message.totalVotingPower = object.totalVotingPower !== undefined && object.totalVotingPower !== null ? _helpers.Long.fromValue(object.totalVotingPower) : _helpers.Long.ZERO;\n    message.validatorPower = object.validatorPower !== undefined && object.validatorPower !== null ? _helpers.Long.fromValue(object.validatorPower) : _helpers.Long.ZERO;\n    message.timestamp = (_object$timestamp = object.timestamp) !== null && _object$timestamp !== void 0 ? _object$timestamp : undefined;\n    return message;\n  }\n};\nexports.DuplicateVoteEvidence = DuplicateVoteEvidence;\nfunction createBaseLightClientAttackEvidence() {\n  return {\n    conflictingBlock: _types.LightBlock.fromPartial({}),\n    commonHeight: _helpers.Long.ZERO,\n    byzantineValidators: [],\n    totalVotingPower: _helpers.Long.ZERO,\n    timestamp: undefined\n  };\n}\nvar LightClientAttackEvidence = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.conflictingBlock !== undefined) {\n      _types.LightBlock.encode(message.conflictingBlock, writer.uint32(10).fork()).ldelim();\n    }\n    if (!message.commonHeight.isZero()) {\n      writer.uint32(16).int64(message.commonHeight);\n    }\n    var _iterator = _createForOfIteratorHelper(message.byzantineValidators),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        _validator.Validator.encode(v, writer.uint32(26).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    if (!message.totalVotingPower.isZero()) {\n      writer.uint32(32).int64(message.totalVotingPower);\n    }\n    if (message.timestamp !== undefined) {\n      _timestamp.Timestamp.encode((0, _helpers.toTimestamp)(message.timestamp), writer.uint32(42).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseLightClientAttackEvidence();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.conflictingBlock = _types.LightBlock.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.commonHeight = reader.int64();\n          break;\n        case 3:\n          message.byzantineValidators.push(_validator.Validator.decode(reader, reader.uint32()));\n          break;\n        case 4:\n          message.totalVotingPower = reader.int64();\n          break;\n        case 5:\n          message.timestamp = (0, _helpers.fromTimestamp)(_timestamp.Timestamp.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$byzantineVali, _object$timestamp2;\n    var message = createBaseLightClientAttackEvidence();\n    message.conflictingBlock = object.conflictingBlock !== undefined && object.conflictingBlock !== null ? _types.LightBlock.fromPartial(object.conflictingBlock) : undefined;\n    message.commonHeight = object.commonHeight !== undefined && object.commonHeight !== null ? _helpers.Long.fromValue(object.commonHeight) : _helpers.Long.ZERO;\n    message.byzantineValidators = ((_object$byzantineVali = object.byzantineValidators) === null || _object$byzantineVali === void 0 ? void 0 : _object$byzantineVali.map(function (e) {\n      return _validator.Validator.fromPartial(e);\n    })) || [];\n    message.totalVotingPower = object.totalVotingPower !== undefined && object.totalVotingPower !== null ? _helpers.Long.fromValue(object.totalVotingPower) : _helpers.Long.ZERO;\n    message.timestamp = (_object$timestamp2 = object.timestamp) !== null && _object$timestamp2 !== void 0 ? _object$timestamp2 : undefined;\n    return message;\n  }\n};\nexports.LightClientAttackEvidence = LightClientAttackEvidence;\nfunction createBaseEvidenceList() {\n  return {\n    evidence: []\n  };\n}\nvar EvidenceList = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    var _iterator2 = _createForOfIteratorHelper(message.evidence),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var v = _step2.value;\n        Evidence.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseEvidenceList();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.evidence.push(Evidence.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$evidence;\n    var message = createBaseEvidenceList();\n    message.evidence = ((_object$evidence = object.evidence) === null || _object$evidence === void 0 ? void 0 : _object$evidence.map(function (e) {\n      return Evidence.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nexports.EvidenceList = EvidenceList;"],"mappings":"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"},"metadata":{},"sourceType":"script"}