{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgClientImpl = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _m0 = _interopRequireWildcard(require(\"protobufjs/minimal\"));\nvar _tx = require(\"./tx\");\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj[\"default\"] = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nvar MsgClientImpl = /*#__PURE__*/function () {\n  function MsgClientImpl(rpc) {\n    (0, _classCallCheck2[\"default\"])(this, MsgClientImpl);\n    (0, _defineProperty2[\"default\"])(this, \"rpc\", void 0);\n    this.rpc = rpc;\n    this.channelOpenInit = this.channelOpenInit.bind(this);\n    this.channelOpenTry = this.channelOpenTry.bind(this);\n    this.channelOpenAck = this.channelOpenAck.bind(this);\n    this.channelOpenConfirm = this.channelOpenConfirm.bind(this);\n    this.channelCloseInit = this.channelCloseInit.bind(this);\n    this.channelCloseConfirm = this.channelCloseConfirm.bind(this);\n    this.recvPacket = this.recvPacket.bind(this);\n    this.timeout = this.timeout.bind(this);\n    this.timeoutOnClose = this.timeoutOnClose.bind(this);\n    this.acknowledgement = this.acknowledgement.bind(this);\n  }\n  (0, _createClass2[\"default\"])(MsgClientImpl, [{\n    key: \"channelOpenInit\",\n    value: function channelOpenInit(request) {\n      var data = _tx.MsgChannelOpenInit.encode(request).finish();\n      var promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenInit\", data);\n      return promise.then(function (data) {\n        return _tx.MsgChannelOpenInitResponse.decode(new _m0.Reader(data));\n      });\n    }\n  }, {\n    key: \"channelOpenTry\",\n    value: function channelOpenTry(request) {\n      var data = _tx.MsgChannelOpenTry.encode(request).finish();\n      var promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenTry\", data);\n      return promise.then(function (data) {\n        return _tx.MsgChannelOpenTryResponse.decode(new _m0.Reader(data));\n      });\n    }\n  }, {\n    key: \"channelOpenAck\",\n    value: function channelOpenAck(request) {\n      var data = _tx.MsgChannelOpenAck.encode(request).finish();\n      var promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenAck\", data);\n      return promise.then(function (data) {\n        return _tx.MsgChannelOpenAckResponse.decode(new _m0.Reader(data));\n      });\n    }\n  }, {\n    key: \"channelOpenConfirm\",\n    value: function channelOpenConfirm(request) {\n      var data = _tx.MsgChannelOpenConfirm.encode(request).finish();\n      var promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenConfirm\", data);\n      return promise.then(function (data) {\n        return _tx.MsgChannelOpenConfirmResponse.decode(new _m0.Reader(data));\n      });\n    }\n  }, {\n    key: \"channelCloseInit\",\n    value: function channelCloseInit(request) {\n      var data = _tx.MsgChannelCloseInit.encode(request).finish();\n      var promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelCloseInit\", data);\n      return promise.then(function (data) {\n        return _tx.MsgChannelCloseInitResponse.decode(new _m0.Reader(data));\n      });\n    }\n  }, {\n    key: \"channelCloseConfirm\",\n    value: function channelCloseConfirm(request) {\n      var data = _tx.MsgChannelCloseConfirm.encode(request).finish();\n      var promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelCloseConfirm\", data);\n      return promise.then(function (data) {\n        return _tx.MsgChannelCloseConfirmResponse.decode(new _m0.Reader(data));\n      });\n    }\n  }, {\n    key: \"recvPacket\",\n    value: function recvPacket(request) {\n      var data = _tx.MsgRecvPacket.encode(request).finish();\n      var promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"RecvPacket\", data);\n      return promise.then(function (data) {\n        return _tx.MsgRecvPacketResponse.decode(new _m0.Reader(data));\n      });\n    }\n  }, {\n    key: \"timeout\",\n    value: function timeout(request) {\n      var data = _tx.MsgTimeout.encode(request).finish();\n      var promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"Timeout\", data);\n      return promise.then(function (data) {\n        return _tx.MsgTimeoutResponse.decode(new _m0.Reader(data));\n      });\n    }\n  }, {\n    key: \"timeoutOnClose\",\n    value: function timeoutOnClose(request) {\n      var data = _tx.MsgTimeoutOnClose.encode(request).finish();\n      var promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"TimeoutOnClose\", data);\n      return promise.then(function (data) {\n        return _tx.MsgTimeoutOnCloseResponse.decode(new _m0.Reader(data));\n      });\n    }\n  }, {\n    key: \"acknowledgement\",\n    value: function acknowledgement(request) {\n      var data = _tx.MsgAcknowledgement.encode(request).finish();\n      var promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"Acknowledgement\", data);\n      return promise.then(function (data) {\n        return _tx.MsgAcknowledgementResponse.decode(new _m0.Reader(data));\n      });\n    }\n  }]);\n  return MsgClientImpl;\n}();\nexports.MsgClientImpl = MsgClientImpl;","map":null,"metadata":{},"sourceType":"script"}