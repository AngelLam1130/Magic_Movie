{"ast":null,"code":"\"use strict\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CommunityPoolSpendProposalWithDeposit = exports.DelegationDelegatorReward = exports.DelegatorStartingInfo = exports.CommunityPoolSpendProposal = exports.FeePool = exports.ValidatorSlashEvents = exports.ValidatorSlashEvent = exports.ValidatorOutstandingRewards = exports.ValidatorAccumulatedCommission = exports.ValidatorCurrentRewards = exports.ValidatorHistoricalRewards = exports.Params = exports.protobufPackage = void 0;\n/* eslint-disable */\nvar long_1 = __importDefault(require(\"long\"));\nvar minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nvar coin_1 = require(\"../../base/v1beta1/coin\");\nexports.protobufPackage = \"cosmos.distribution.v1beta1\";\nfunction createBaseParams() {\n  return {\n    communityTax: \"\",\n    baseProposerReward: \"\",\n    bonusProposerReward: \"\",\n    withdrawAddrEnabled: false\n  };\n}\nexports.Params = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.communityTax !== \"\") {\n      writer.uint32(10).string(message.communityTax);\n    }\n    if (message.baseProposerReward !== \"\") {\n      writer.uint32(18).string(message.baseProposerReward);\n    }\n    if (message.bonusProposerReward !== \"\") {\n      writer.uint32(26).string(message.bonusProposerReward);\n    }\n    if (message.withdrawAddrEnabled === true) {\n      writer.uint32(32).bool(message.withdrawAddrEnabled);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseParams();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.communityTax = reader.string();\n          break;\n        case 2:\n          message.baseProposerReward = reader.string();\n          break;\n        case 3:\n          message.bonusProposerReward = reader.string();\n          break;\n        case 4:\n          message.withdrawAddrEnabled = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      communityTax: isSet(object.communityTax) ? String(object.communityTax) : \"\",\n      baseProposerReward: isSet(object.baseProposerReward) ? String(object.baseProposerReward) : \"\",\n      bonusProposerReward: isSet(object.bonusProposerReward) ? String(object.bonusProposerReward) : \"\",\n      withdrawAddrEnabled: isSet(object.withdrawAddrEnabled) ? Boolean(object.withdrawAddrEnabled) : false\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.communityTax !== undefined && (obj.communityTax = message.communityTax);\n    message.baseProposerReward !== undefined && (obj.baseProposerReward = message.baseProposerReward);\n    message.bonusProposerReward !== undefined && (obj.bonusProposerReward = message.bonusProposerReward);\n    message.withdrawAddrEnabled !== undefined && (obj.withdrawAddrEnabled = message.withdrawAddrEnabled);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c, _d;\n    var message = createBaseParams();\n    message.communityTax = (_a = object.communityTax) !== null && _a !== void 0 ? _a : \"\";\n    message.baseProposerReward = (_b = object.baseProposerReward) !== null && _b !== void 0 ? _b : \"\";\n    message.bonusProposerReward = (_c = object.bonusProposerReward) !== null && _c !== void 0 ? _c : \"\";\n    message.withdrawAddrEnabled = (_d = object.withdrawAddrEnabled) !== null && _d !== void 0 ? _d : false;\n    return message;\n  }\n};\nfunction createBaseValidatorHistoricalRewards() {\n  return {\n    cumulativeRewardRatio: [],\n    referenceCount: 0\n  };\n}\nexports.ValidatorHistoricalRewards = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    var _iterator = _createForOfIteratorHelper(message.cumulativeRewardRatio),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        coin_1.DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    if (message.referenceCount !== 0) {\n      writer.uint32(16).uint32(message.referenceCount);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseValidatorHistoricalRewards();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.cumulativeRewardRatio.push(coin_1.DecCoin.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.referenceCount = reader.uint32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      cumulativeRewardRatio: Array.isArray(object === null || object === void 0 ? void 0 : object.cumulativeRewardRatio) ? object.cumulativeRewardRatio.map(function (e) {\n        return coin_1.DecCoin.fromJSON(e);\n      }) : [],\n      referenceCount: isSet(object.referenceCount) ? Number(object.referenceCount) : 0\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    if (message.cumulativeRewardRatio) {\n      obj.cumulativeRewardRatio = message.cumulativeRewardRatio.map(function (e) {\n        return e ? coin_1.DecCoin.toJSON(e) : undefined;\n      });\n    } else {\n      obj.cumulativeRewardRatio = [];\n    }\n    message.referenceCount !== undefined && (obj.referenceCount = Math.round(message.referenceCount));\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b;\n    var message = createBaseValidatorHistoricalRewards();\n    message.cumulativeRewardRatio = ((_a = object.cumulativeRewardRatio) === null || _a === void 0 ? void 0 : _a.map(function (e) {\n      return coin_1.DecCoin.fromPartial(e);\n    })) || [];\n    message.referenceCount = (_b = object.referenceCount) !== null && _b !== void 0 ? _b : 0;\n    return message;\n  }\n};\nfunction createBaseValidatorCurrentRewards() {\n  return {\n    rewards: [],\n    period: long_1.default.UZERO\n  };\n}\nexports.ValidatorCurrentRewards = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    var _iterator2 = _createForOfIteratorHelper(message.rewards),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var v = _step2.value;\n        coin_1.DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    if (!message.period.isZero()) {\n      writer.uint32(16).uint64(message.period);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseValidatorCurrentRewards();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.rewards.push(coin_1.DecCoin.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.period = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      rewards: Array.isArray(object === null || object === void 0 ? void 0 : object.rewards) ? object.rewards.map(function (e) {\n        return coin_1.DecCoin.fromJSON(e);\n      }) : [],\n      period: isSet(object.period) ? long_1.default.fromValue(object.period) : long_1.default.UZERO\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    if (message.rewards) {\n      obj.rewards = message.rewards.map(function (e) {\n        return e ? coin_1.DecCoin.toJSON(e) : undefined;\n      });\n    } else {\n      obj.rewards = [];\n    }\n    message.period !== undefined && (obj.period = (message.period || long_1.default.UZERO).toString());\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseValidatorCurrentRewards();\n    message.rewards = ((_a = object.rewards) === null || _a === void 0 ? void 0 : _a.map(function (e) {\n      return coin_1.DecCoin.fromPartial(e);\n    })) || [];\n    message.period = object.period !== undefined && object.period !== null ? long_1.default.fromValue(object.period) : long_1.default.UZERO;\n    return message;\n  }\n};\nfunction createBaseValidatorAccumulatedCommission() {\n  return {\n    commission: []\n  };\n}\nexports.ValidatorAccumulatedCommission = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    var _iterator3 = _createForOfIteratorHelper(message.commission),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var v = _step3.value;\n        coin_1.DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseValidatorAccumulatedCommission();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.commission.push(coin_1.DecCoin.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      commission: Array.isArray(object === null || object === void 0 ? void 0 : object.commission) ? object.commission.map(function (e) {\n        return coin_1.DecCoin.fromJSON(e);\n      }) : []\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    if (message.commission) {\n      obj.commission = message.commission.map(function (e) {\n        return e ? coin_1.DecCoin.toJSON(e) : undefined;\n      });\n    } else {\n      obj.commission = [];\n    }\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseValidatorAccumulatedCommission();\n    message.commission = ((_a = object.commission) === null || _a === void 0 ? void 0 : _a.map(function (e) {\n      return coin_1.DecCoin.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nfunction createBaseValidatorOutstandingRewards() {\n  return {\n    rewards: []\n  };\n}\nexports.ValidatorOutstandingRewards = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    var _iterator4 = _createForOfIteratorHelper(message.rewards),\n      _step4;\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var v = _step4.value;\n        coin_1.DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseValidatorOutstandingRewards();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.rewards.push(coin_1.DecCoin.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      rewards: Array.isArray(object === null || object === void 0 ? void 0 : object.rewards) ? object.rewards.map(function (e) {\n        return coin_1.DecCoin.fromJSON(e);\n      }) : []\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    if (message.rewards) {\n      obj.rewards = message.rewards.map(function (e) {\n        return e ? coin_1.DecCoin.toJSON(e) : undefined;\n      });\n    } else {\n      obj.rewards = [];\n    }\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseValidatorOutstandingRewards();\n    message.rewards = ((_a = object.rewards) === null || _a === void 0 ? void 0 : _a.map(function (e) {\n      return coin_1.DecCoin.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nfunction createBaseValidatorSlashEvent() {\n  return {\n    validatorPeriod: long_1.default.UZERO,\n    fraction: \"\"\n  };\n}\nexports.ValidatorSlashEvent = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (!message.validatorPeriod.isZero()) {\n      writer.uint32(8).uint64(message.validatorPeriod);\n    }\n    if (message.fraction !== \"\") {\n      writer.uint32(18).string(message.fraction);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseValidatorSlashEvent();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.validatorPeriod = reader.uint64();\n          break;\n        case 2:\n          message.fraction = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      validatorPeriod: isSet(object.validatorPeriod) ? long_1.default.fromValue(object.validatorPeriod) : long_1.default.UZERO,\n      fraction: isSet(object.fraction) ? String(object.fraction) : \"\"\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.validatorPeriod !== undefined && (obj.validatorPeriod = (message.validatorPeriod || long_1.default.UZERO).toString());\n    message.fraction !== undefined && (obj.fraction = message.fraction);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseValidatorSlashEvent();\n    message.validatorPeriod = object.validatorPeriod !== undefined && object.validatorPeriod !== null ? long_1.default.fromValue(object.validatorPeriod) : long_1.default.UZERO;\n    message.fraction = (_a = object.fraction) !== null && _a !== void 0 ? _a : \"\";\n    return message;\n  }\n};\nfunction createBaseValidatorSlashEvents() {\n  return {\n    validatorSlashEvents: []\n  };\n}\nexports.ValidatorSlashEvents = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    var _iterator5 = _createForOfIteratorHelper(message.validatorSlashEvents),\n      _step5;\n    try {\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        var v = _step5.value;\n        exports.ValidatorSlashEvent.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseValidatorSlashEvents();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.validatorSlashEvents.push(exports.ValidatorSlashEvent.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      validatorSlashEvents: Array.isArray(object === null || object === void 0 ? void 0 : object.validatorSlashEvents) ? object.validatorSlashEvents.map(function (e) {\n        return exports.ValidatorSlashEvent.fromJSON(e);\n      }) : []\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    if (message.validatorSlashEvents) {\n      obj.validatorSlashEvents = message.validatorSlashEvents.map(function (e) {\n        return e ? exports.ValidatorSlashEvent.toJSON(e) : undefined;\n      });\n    } else {\n      obj.validatorSlashEvents = [];\n    }\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseValidatorSlashEvents();\n    message.validatorSlashEvents = ((_a = object.validatorSlashEvents) === null || _a === void 0 ? void 0 : _a.map(function (e) {\n      return exports.ValidatorSlashEvent.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nfunction createBaseFeePool() {\n  return {\n    communityPool: []\n  };\n}\nexports.FeePool = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    var _iterator6 = _createForOfIteratorHelper(message.communityPool),\n      _step6;\n    try {\n      for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n        var v = _step6.value;\n        coin_1.DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator6.e(err);\n    } finally {\n      _iterator6.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseFeePool();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.communityPool.push(coin_1.DecCoin.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      communityPool: Array.isArray(object === null || object === void 0 ? void 0 : object.communityPool) ? object.communityPool.map(function (e) {\n        return coin_1.DecCoin.fromJSON(e);\n      }) : []\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    if (message.communityPool) {\n      obj.communityPool = message.communityPool.map(function (e) {\n        return e ? coin_1.DecCoin.toJSON(e) : undefined;\n      });\n    } else {\n      obj.communityPool = [];\n    }\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseFeePool();\n    message.communityPool = ((_a = object.communityPool) === null || _a === void 0 ? void 0 : _a.map(function (e) {\n      return coin_1.DecCoin.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nfunction createBaseCommunityPoolSpendProposal() {\n  return {\n    title: \"\",\n    description: \"\",\n    recipient: \"\",\n    amount: []\n  };\n}\nexports.CommunityPoolSpendProposal = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.title !== \"\") {\n      writer.uint32(10).string(message.title);\n    }\n    if (message.description !== \"\") {\n      writer.uint32(18).string(message.description);\n    }\n    if (message.recipient !== \"\") {\n      writer.uint32(26).string(message.recipient);\n    }\n    var _iterator7 = _createForOfIteratorHelper(message.amount),\n      _step7;\n    try {\n      for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n        var v = _step7.value;\n        coin_1.Coin.encode(v, writer.uint32(34).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator7.e(err);\n    } finally {\n      _iterator7.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseCommunityPoolSpendProposal();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.title = reader.string();\n          break;\n        case 2:\n          message.description = reader.string();\n          break;\n        case 3:\n          message.recipient = reader.string();\n          break;\n        case 4:\n          message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      title: isSet(object.title) ? String(object.title) : \"\",\n      description: isSet(object.description) ? String(object.description) : \"\",\n      recipient: isSet(object.recipient) ? String(object.recipient) : \"\",\n      amount: Array.isArray(object === null || object === void 0 ? void 0 : object.amount) ? object.amount.map(function (e) {\n        return coin_1.Coin.fromJSON(e);\n      }) : []\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.title !== undefined && (obj.title = message.title);\n    message.description !== undefined && (obj.description = message.description);\n    message.recipient !== undefined && (obj.recipient = message.recipient);\n    if (message.amount) {\n      obj.amount = message.amount.map(function (e) {\n        return e ? coin_1.Coin.toJSON(e) : undefined;\n      });\n    } else {\n      obj.amount = [];\n    }\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c, _d;\n    var message = createBaseCommunityPoolSpendProposal();\n    message.title = (_a = object.title) !== null && _a !== void 0 ? _a : \"\";\n    message.description = (_b = object.description) !== null && _b !== void 0 ? _b : \"\";\n    message.recipient = (_c = object.recipient) !== null && _c !== void 0 ? _c : \"\";\n    message.amount = ((_d = object.amount) === null || _d === void 0 ? void 0 : _d.map(function (e) {\n      return coin_1.Coin.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nfunction createBaseDelegatorStartingInfo() {\n  return {\n    previousPeriod: long_1.default.UZERO,\n    stake: \"\",\n    height: long_1.default.UZERO\n  };\n}\nexports.DelegatorStartingInfo = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (!message.previousPeriod.isZero()) {\n      writer.uint32(8).uint64(message.previousPeriod);\n    }\n    if (message.stake !== \"\") {\n      writer.uint32(18).string(message.stake);\n    }\n    if (!message.height.isZero()) {\n      writer.uint32(24).uint64(message.height);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseDelegatorStartingInfo();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.previousPeriod = reader.uint64();\n          break;\n        case 2:\n          message.stake = reader.string();\n          break;\n        case 3:\n          message.height = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      previousPeriod: isSet(object.previousPeriod) ? long_1.default.fromValue(object.previousPeriod) : long_1.default.UZERO,\n      stake: isSet(object.stake) ? String(object.stake) : \"\",\n      height: isSet(object.height) ? long_1.default.fromValue(object.height) : long_1.default.UZERO\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.previousPeriod !== undefined && (obj.previousPeriod = (message.previousPeriod || long_1.default.UZERO).toString());\n    message.stake !== undefined && (obj.stake = message.stake);\n    message.height !== undefined && (obj.height = (message.height || long_1.default.UZERO).toString());\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseDelegatorStartingInfo();\n    message.previousPeriod = object.previousPeriod !== undefined && object.previousPeriod !== null ? long_1.default.fromValue(object.previousPeriod) : long_1.default.UZERO;\n    message.stake = (_a = object.stake) !== null && _a !== void 0 ? _a : \"\";\n    message.height = object.height !== undefined && object.height !== null ? long_1.default.fromValue(object.height) : long_1.default.UZERO;\n    return message;\n  }\n};\nfunction createBaseDelegationDelegatorReward() {\n  return {\n    validatorAddress: \"\",\n    reward: []\n  };\n}\nexports.DelegationDelegatorReward = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.validatorAddress !== \"\") {\n      writer.uint32(10).string(message.validatorAddress);\n    }\n    var _iterator8 = _createForOfIteratorHelper(message.reward),\n      _step8;\n    try {\n      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n        var v = _step8.value;\n        coin_1.DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator8.e(err);\n    } finally {\n      _iterator8.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseDelegationDelegatorReward();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.validatorAddress = reader.string();\n          break;\n        case 2:\n          message.reward.push(coin_1.DecCoin.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      validatorAddress: isSet(object.validatorAddress) ? String(object.validatorAddress) : \"\",\n      reward: Array.isArray(object === null || object === void 0 ? void 0 : object.reward) ? object.reward.map(function (e) {\n        return coin_1.DecCoin.fromJSON(e);\n      }) : []\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n    if (message.reward) {\n      obj.reward = message.reward.map(function (e) {\n        return e ? coin_1.DecCoin.toJSON(e) : undefined;\n      });\n    } else {\n      obj.reward = [];\n    }\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b;\n    var message = createBaseDelegationDelegatorReward();\n    message.validatorAddress = (_a = object.validatorAddress) !== null && _a !== void 0 ? _a : \"\";\n    message.reward = ((_b = object.reward) === null || _b === void 0 ? void 0 : _b.map(function (e) {\n      return coin_1.DecCoin.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nfunction createBaseCommunityPoolSpendProposalWithDeposit() {\n  return {\n    title: \"\",\n    description: \"\",\n    recipient: \"\",\n    amount: \"\",\n    deposit: \"\"\n  };\n}\nexports.CommunityPoolSpendProposalWithDeposit = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.title !== \"\") {\n      writer.uint32(10).string(message.title);\n    }\n    if (message.description !== \"\") {\n      writer.uint32(18).string(message.description);\n    }\n    if (message.recipient !== \"\") {\n      writer.uint32(26).string(message.recipient);\n    }\n    if (message.amount !== \"\") {\n      writer.uint32(34).string(message.amount);\n    }\n    if (message.deposit !== \"\") {\n      writer.uint32(42).string(message.deposit);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseCommunityPoolSpendProposalWithDeposit();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.title = reader.string();\n          break;\n        case 2:\n          message.description = reader.string();\n          break;\n        case 3:\n          message.recipient = reader.string();\n          break;\n        case 4:\n          message.amount = reader.string();\n          break;\n        case 5:\n          message.deposit = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      title: isSet(object.title) ? String(object.title) : \"\",\n      description: isSet(object.description) ? String(object.description) : \"\",\n      recipient: isSet(object.recipient) ? String(object.recipient) : \"\",\n      amount: isSet(object.amount) ? String(object.amount) : \"\",\n      deposit: isSet(object.deposit) ? String(object.deposit) : \"\"\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.title !== undefined && (obj.title = message.title);\n    message.description !== undefined && (obj.description = message.description);\n    message.recipient !== undefined && (obj.recipient = message.recipient);\n    message.amount !== undefined && (obj.amount = message.amount);\n    message.deposit !== undefined && (obj.deposit = message.deposit);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c, _d, _e;\n    var message = createBaseCommunityPoolSpendProposalWithDeposit();\n    message.title = (_a = object.title) !== null && _a !== void 0 ? _a : \"\";\n    message.description = (_b = object.description) !== null && _b !== void 0 ? _b : \"\";\n    message.recipient = (_c = object.recipient) !== null && _c !== void 0 ? _c : \"\";\n    message.amount = (_d = object.amount) !== null && _d !== void 0 ? _d : \"\";\n    message.deposit = (_e = object.deposit) !== null && _e !== void 0 ? _e : \"\";\n    return message;\n  }\n};\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}\nfunction isSet(value) {\n  return value !== null && value !== undefined;\n}","map":null,"metadata":{},"sourceType":"script"}