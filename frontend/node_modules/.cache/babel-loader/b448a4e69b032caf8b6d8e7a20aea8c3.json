{"ast":null,"code":"\"use strict\";\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.QueryUpgradedConsensusStateResponse = exports.QueryUpgradedConsensusStateRequest = exports.QueryUpgradedClientStateResponse = exports.QueryUpgradedClientStateRequest = exports.QueryConsensusStatesResponse = exports.QueryConsensusStatesRequest = exports.QueryConsensusStateResponse = exports.QueryConsensusStateRequest = exports.QueryClientStatusResponse = exports.QueryClientStatusRequest = exports.QueryClientStatesResponse = exports.QueryClientStatesRequest = exports.QueryClientStateResponse = exports.QueryClientStateRequest = exports.QueryClientParamsResponse = exports.QueryClientParamsRequest = void 0;\nvar _pagination = require(\"../../../../cosmos/base/query/v1beta1/pagination\");\nvar _any = require(\"../../../../google/protobuf/any\");\nvar _client = require(\"./client\");\nvar _helpers = require(\"../../../../helpers\");\nvar _m0 = _interopRequireWildcard(require(\"protobufjs/minimal\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj[\"default\"] = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction createBaseQueryClientStateRequest() {\n  return {\n    clientId: \"\"\n  };\n}\nvar QueryClientStateRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.clientId !== \"\") {\n      writer.uint32(10).string(message.clientId);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryClientStateRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$clientId;\n    var message = createBaseQueryClientStateRequest();\n    message.clientId = (_object$clientId = object.clientId) !== null && _object$clientId !== void 0 ? _object$clientId : \"\";\n    return message;\n  }\n};\nexports.QueryClientStateRequest = QueryClientStateRequest;\nfunction createBaseQueryClientStateResponse() {\n  return {\n    clientState: undefined,\n    proof: new Uint8Array(),\n    proofHeight: _client.Height.fromPartial({})\n  };\n}\nvar QueryClientStateResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.clientState !== undefined) {\n      _any.Any.encode(message.clientState, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(18).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryClientStateResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.clientState = _any.Any.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.proof = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$proof;\n    var message = createBaseQueryClientStateResponse();\n    message.clientState = object.clientState !== undefined && object.clientState !== null ? _any.Any.fromPartial(object.clientState) : undefined;\n    message.proof = (_object$proof = object.proof) !== null && _object$proof !== void 0 ? _object$proof : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    return message;\n  }\n};\nexports.QueryClientStateResponse = QueryClientStateResponse;\nfunction createBaseQueryClientStatesRequest() {\n  return {\n    pagination: _pagination.PageRequest.fromPartial({})\n  };\n}\nvar QueryClientStatesRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.pagination !== undefined) {\n      _pagination.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryClientStatesRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.pagination = _pagination.PageRequest.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseQueryClientStatesRequest();\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? _pagination.PageRequest.fromPartial(object.pagination) : undefined;\n    return message;\n  }\n};\nexports.QueryClientStatesRequest = QueryClientStatesRequest;\nfunction createBaseQueryClientStatesResponse() {\n  return {\n    clientStates: [],\n    pagination: _pagination.PageResponse.fromPartial({})\n  };\n}\nvar QueryClientStatesResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    var _iterator = _createForOfIteratorHelper(message.clientStates),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        _client.IdentifiedClientState.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    if (message.pagination !== undefined) {\n      _pagination.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryClientStatesResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.clientStates.push(_client.IdentifiedClientState.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.pagination = _pagination.PageResponse.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$clientStates;\n    var message = createBaseQueryClientStatesResponse();\n    message.clientStates = ((_object$clientStates = object.clientStates) === null || _object$clientStates === void 0 ? void 0 : _object$clientStates.map(function (e) {\n      return _client.IdentifiedClientState.fromPartial(e);\n    })) || [];\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? _pagination.PageResponse.fromPartial(object.pagination) : undefined;\n    return message;\n  }\n};\nexports.QueryClientStatesResponse = QueryClientStatesResponse;\nfunction createBaseQueryConsensusStateRequest() {\n  return {\n    clientId: \"\",\n    revisionNumber: _helpers.Long.UZERO,\n    revisionHeight: _helpers.Long.UZERO,\n    latestHeight: false\n  };\n}\nvar QueryConsensusStateRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.clientId !== \"\") {\n      writer.uint32(10).string(message.clientId);\n    }\n    if (!message.revisionNumber.isZero()) {\n      writer.uint32(16).uint64(message.revisionNumber);\n    }\n    if (!message.revisionHeight.isZero()) {\n      writer.uint32(24).uint64(message.revisionHeight);\n    }\n    if (message.latestHeight === true) {\n      writer.uint32(32).bool(message.latestHeight);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryConsensusStateRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n        case 2:\n          message.revisionNumber = reader.uint64();\n          break;\n        case 3:\n          message.revisionHeight = reader.uint64();\n          break;\n        case 4:\n          message.latestHeight = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$clientId2, _object$latestHeight;\n    var message = createBaseQueryConsensusStateRequest();\n    message.clientId = (_object$clientId2 = object.clientId) !== null && _object$clientId2 !== void 0 ? _object$clientId2 : \"\";\n    message.revisionNumber = object.revisionNumber !== undefined && object.revisionNumber !== null ? _helpers.Long.fromValue(object.revisionNumber) : _helpers.Long.UZERO;\n    message.revisionHeight = object.revisionHeight !== undefined && object.revisionHeight !== null ? _helpers.Long.fromValue(object.revisionHeight) : _helpers.Long.UZERO;\n    message.latestHeight = (_object$latestHeight = object.latestHeight) !== null && _object$latestHeight !== void 0 ? _object$latestHeight : false;\n    return message;\n  }\n};\nexports.QueryConsensusStateRequest = QueryConsensusStateRequest;\nfunction createBaseQueryConsensusStateResponse() {\n  return {\n    consensusState: undefined,\n    proof: new Uint8Array(),\n    proofHeight: _client.Height.fromPartial({})\n  };\n}\nvar QueryConsensusStateResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.consensusState !== undefined) {\n      _any.Any.encode(message.consensusState, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(18).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryConsensusStateResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.consensusState = _any.Any.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.proof = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$proof2;\n    var message = createBaseQueryConsensusStateResponse();\n    message.consensusState = object.consensusState !== undefined && object.consensusState !== null ? _any.Any.fromPartial(object.consensusState) : undefined;\n    message.proof = (_object$proof2 = object.proof) !== null && _object$proof2 !== void 0 ? _object$proof2 : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    return message;\n  }\n};\nexports.QueryConsensusStateResponse = QueryConsensusStateResponse;\nfunction createBaseQueryConsensusStatesRequest() {\n  return {\n    clientId: \"\",\n    pagination: _pagination.PageRequest.fromPartial({})\n  };\n}\nvar QueryConsensusStatesRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.clientId !== \"\") {\n      writer.uint32(10).string(message.clientId);\n    }\n    if (message.pagination !== undefined) {\n      _pagination.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryConsensusStatesRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n        case 2:\n          message.pagination = _pagination.PageRequest.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$clientId3;\n    var message = createBaseQueryConsensusStatesRequest();\n    message.clientId = (_object$clientId3 = object.clientId) !== null && _object$clientId3 !== void 0 ? _object$clientId3 : \"\";\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? _pagination.PageRequest.fromPartial(object.pagination) : undefined;\n    return message;\n  }\n};\nexports.QueryConsensusStatesRequest = QueryConsensusStatesRequest;\nfunction createBaseQueryConsensusStatesResponse() {\n  return {\n    consensusStates: [],\n    pagination: _pagination.PageResponse.fromPartial({})\n  };\n}\nvar QueryConsensusStatesResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    var _iterator2 = _createForOfIteratorHelper(message.consensusStates),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var v = _step2.value;\n        _client.ConsensusStateWithHeight.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    if (message.pagination !== undefined) {\n      _pagination.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryConsensusStatesResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.consensusStates.push(_client.ConsensusStateWithHeight.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.pagination = _pagination.PageResponse.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$consensusStat;\n    var message = createBaseQueryConsensusStatesResponse();\n    message.consensusStates = ((_object$consensusStat = object.consensusStates) === null || _object$consensusStat === void 0 ? void 0 : _object$consensusStat.map(function (e) {\n      return _client.ConsensusStateWithHeight.fromPartial(e);\n    })) || [];\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? _pagination.PageResponse.fromPartial(object.pagination) : undefined;\n    return message;\n  }\n};\nexports.QueryConsensusStatesResponse = QueryConsensusStatesResponse;\nfunction createBaseQueryClientStatusRequest() {\n  return {\n    clientId: \"\"\n  };\n}\nvar QueryClientStatusRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.clientId !== \"\") {\n      writer.uint32(10).string(message.clientId);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryClientStatusRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$clientId4;\n    var message = createBaseQueryClientStatusRequest();\n    message.clientId = (_object$clientId4 = object.clientId) !== null && _object$clientId4 !== void 0 ? _object$clientId4 : \"\";\n    return message;\n  }\n};\nexports.QueryClientStatusRequest = QueryClientStatusRequest;\nfunction createBaseQueryClientStatusResponse() {\n  return {\n    status: \"\"\n  };\n}\nvar QueryClientStatusResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.status !== \"\") {\n      writer.uint32(10).string(message.status);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryClientStatusResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.status = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$status;\n    var message = createBaseQueryClientStatusResponse();\n    message.status = (_object$status = object.status) !== null && _object$status !== void 0 ? _object$status : \"\";\n    return message;\n  }\n};\nexports.QueryClientStatusResponse = QueryClientStatusResponse;\nfunction createBaseQueryClientParamsRequest() {\n  return {};\n}\nvar QueryClientParamsRequest = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryClientParamsRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseQueryClientParamsRequest();\n    return message;\n  }\n};\nexports.QueryClientParamsRequest = QueryClientParamsRequest;\nfunction createBaseQueryClientParamsResponse() {\n  return {\n    params: _client.Params.fromPartial({})\n  };\n}\nvar QueryClientParamsResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.params !== undefined) {\n      _client.Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryClientParamsResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.params = _client.Params.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseQueryClientParamsResponse();\n    message.params = object.params !== undefined && object.params !== null ? _client.Params.fromPartial(object.params) : undefined;\n    return message;\n  }\n};\nexports.QueryClientParamsResponse = QueryClientParamsResponse;\nfunction createBaseQueryUpgradedClientStateRequest() {\n  return {};\n}\nvar QueryUpgradedClientStateRequest = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryUpgradedClientStateRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseQueryUpgradedClientStateRequest();\n    return message;\n  }\n};\nexports.QueryUpgradedClientStateRequest = QueryUpgradedClientStateRequest;\nfunction createBaseQueryUpgradedClientStateResponse() {\n  return {\n    upgradedClientState: undefined\n  };\n}\nvar QueryUpgradedClientStateResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.upgradedClientState !== undefined) {\n      _any.Any.encode(message.upgradedClientState, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryUpgradedClientStateResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.upgradedClientState = _any.Any.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseQueryUpgradedClientStateResponse();\n    message.upgradedClientState = object.upgradedClientState !== undefined && object.upgradedClientState !== null ? _any.Any.fromPartial(object.upgradedClientState) : undefined;\n    return message;\n  }\n};\nexports.QueryUpgradedClientStateResponse = QueryUpgradedClientStateResponse;\nfunction createBaseQueryUpgradedConsensusStateRequest() {\n  return {};\n}\nvar QueryUpgradedConsensusStateRequest = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryUpgradedConsensusStateRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseQueryUpgradedConsensusStateRequest();\n    return message;\n  }\n};\nexports.QueryUpgradedConsensusStateRequest = QueryUpgradedConsensusStateRequest;\nfunction createBaseQueryUpgradedConsensusStateResponse() {\n  return {\n    upgradedConsensusState: undefined\n  };\n}\nvar QueryUpgradedConsensusStateResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.upgradedConsensusState !== undefined) {\n      _any.Any.encode(message.upgradedConsensusState, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryUpgradedConsensusStateResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.upgradedConsensusState = _any.Any.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseQueryUpgradedConsensusStateResponse();\n    message.upgradedConsensusState = object.upgradedConsensusState !== undefined && object.upgradedConsensusState !== null ? _any.Any.fromPartial(object.upgradedConsensusState) : undefined;\n    return message;\n  }\n};\nexports.QueryUpgradedConsensusStateResponse = QueryUpgradedConsensusStateResponse;","map":null,"metadata":{},"sourceType":"script"}