{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fromBinary = exports.toBinary = void 0;\nvar encoding_1 = require(\"@cosmjs/encoding\");\n/**\n * Takes a value, serializes it to JSON and encodes it as base64.\n *\n * This can be used for creating values of fields that have the CosmWasm Binary type.\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction toBinary(obj) {\n  return (0, encoding_1.toBase64)((0, encoding_1.toUtf8)(JSON.stringify(obj)));\n}\nexports.toBinary = toBinary;\n/**\n * Takes a base64 string, decodes it and parses the content from JSON to an object.\n *\n * This can be used for parsing the values of a CosmWasm Binary field.\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction fromBinary(base64) {\n  return JSON.parse((0, encoding_1.fromUtf8)((0, encoding_1.fromBase64)(base64)));\n}\nexports.fromBinary = fromBinary;","map":null,"metadata":{},"sourceType":"script"}