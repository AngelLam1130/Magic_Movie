{"ast":null,"code":"\"use strict\";\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Record_Offline = exports.Record_Multi = exports.Record_Local = exports.Record_Ledger = exports.Record = void 0;\nvar _any = require(\"../../../../google/protobuf/any\");\nvar _hd = require(\"../../hd/v1/hd\");\nvar _m0 = _interopRequireWildcard(require(\"protobufjs/minimal\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj[\"default\"] = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction createBaseRecord() {\n  return {\n    name: \"\",\n    pubKey: undefined,\n    local: undefined,\n    ledger: undefined,\n    multi: undefined,\n    offline: undefined\n  };\n}\nvar Record = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.name !== \"\") {\n      writer.uint32(10).string(message.name);\n    }\n    if (message.pubKey !== undefined) {\n      _any.Any.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.local !== undefined) {\n      Record_Local.encode(message.local, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.ledger !== undefined) {\n      Record_Ledger.encode(message.ledger, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.multi !== undefined) {\n      Record_Multi.encode(message.multi, writer.uint32(42).fork()).ldelim();\n    }\n    if (message.offline !== undefined) {\n      Record_Offline.encode(message.offline, writer.uint32(50).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRecord();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.name = reader.string();\n          break;\n        case 2:\n          message.pubKey = _any.Any.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.local = Record_Local.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.ledger = Record_Ledger.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.multi = Record_Multi.decode(reader, reader.uint32());\n          break;\n        case 6:\n          message.offline = Record_Offline.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$name;\n    var message = createBaseRecord();\n    message.name = (_object$name = object.name) !== null && _object$name !== void 0 ? _object$name : \"\";\n    message.pubKey = object.pubKey !== undefined && object.pubKey !== null ? _any.Any.fromPartial(object.pubKey) : undefined;\n    message.local = object.local !== undefined && object.local !== null ? Record_Local.fromPartial(object.local) : undefined;\n    message.ledger = object.ledger !== undefined && object.ledger !== null ? Record_Ledger.fromPartial(object.ledger) : undefined;\n    message.multi = object.multi !== undefined && object.multi !== null ? Record_Multi.fromPartial(object.multi) : undefined;\n    message.offline = object.offline !== undefined && object.offline !== null ? Record_Offline.fromPartial(object.offline) : undefined;\n    return message;\n  }\n};\nexports.Record = Record;\nfunction createBaseRecord_Local() {\n  return {\n    privKey: undefined,\n    privKeyType: \"\"\n  };\n}\nvar Record_Local = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.privKey !== undefined) {\n      _any.Any.encode(message.privKey, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.privKeyType !== \"\") {\n      writer.uint32(18).string(message.privKeyType);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRecord_Local();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.privKey = _any.Any.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.privKeyType = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$privKeyType;\n    var message = createBaseRecord_Local();\n    message.privKey = object.privKey !== undefined && object.privKey !== null ? _any.Any.fromPartial(object.privKey) : undefined;\n    message.privKeyType = (_object$privKeyType = object.privKeyType) !== null && _object$privKeyType !== void 0 ? _object$privKeyType : \"\";\n    return message;\n  }\n};\nexports.Record_Local = Record_Local;\nfunction createBaseRecord_Ledger() {\n  return {\n    path: _hd.BIP44Params.fromPartial({})\n  };\n}\nvar Record_Ledger = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.path !== undefined) {\n      _hd.BIP44Params.encode(message.path, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRecord_Ledger();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.path = _hd.BIP44Params.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseRecord_Ledger();\n    message.path = object.path !== undefined && object.path !== null ? _hd.BIP44Params.fromPartial(object.path) : undefined;\n    return message;\n  }\n};\nexports.Record_Ledger = Record_Ledger;\nfunction createBaseRecord_Multi() {\n  return {};\n}\nvar Record_Multi = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRecord_Multi();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseRecord_Multi();\n    return message;\n  }\n};\nexports.Record_Multi = Record_Multi;\nfunction createBaseRecord_Offline() {\n  return {};\n}\nvar Record_Offline = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseRecord_Offline();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseRecord_Offline();\n    return message;\n  }\n};\nexports.Record_Offline = Record_Offline;","map":null,"metadata":{},"sourceType":"script"}