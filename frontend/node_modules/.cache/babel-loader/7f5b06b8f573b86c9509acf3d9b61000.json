{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createRpcQueryExtension = exports.QueryClientImpl = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _m0 = _interopRequireWildcard(require(\"protobufjs/minimal\"));\nvar _stargate = require(\"@cosmjs/stargate\");\nvar _query = require(\"./query\");\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj[\"default\"] = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nvar QueryClientImpl = /*#__PURE__*/function () {\n  function QueryClientImpl(rpc) {\n    (0, _classCallCheck2[\"default\"])(this, QueryClientImpl);\n    (0, _defineProperty2[\"default\"])(this, \"rpc\", void 0);\n    this.rpc = rpc;\n    this.contractInfo = this.contractInfo.bind(this);\n    this.contractHistory = this.contractHistory.bind(this);\n    this.contractsByCode = this.contractsByCode.bind(this);\n    this.allContractState = this.allContractState.bind(this);\n    this.rawContractState = this.rawContractState.bind(this);\n    this.smartContractState = this.smartContractState.bind(this);\n    this.code = this.code.bind(this);\n    this.codes = this.codes.bind(this);\n    this.pinnedCodes = this.pinnedCodes.bind(this);\n  }\n  (0, _createClass2[\"default\"])(QueryClientImpl, [{\n    key: \"contractInfo\",\n    value: function contractInfo(request) {\n      var data = _query.QueryContractInfoRequest.encode(request).finish();\n      var promise = this.rpc.request(\"cosmwasm.wasm.v1.Query\", \"ContractInfo\", data);\n      return promise.then(function (data) {\n        return _query.QueryContractInfoResponse.decode(new _m0.Reader(data));\n      });\n    }\n  }, {\n    key: \"contractHistory\",\n    value: function contractHistory(request) {\n      var data = _query.QueryContractHistoryRequest.encode(request).finish();\n      var promise = this.rpc.request(\"cosmwasm.wasm.v1.Query\", \"ContractHistory\", data);\n      return promise.then(function (data) {\n        return _query.QueryContractHistoryResponse.decode(new _m0.Reader(data));\n      });\n    }\n  }, {\n    key: \"contractsByCode\",\n    value: function contractsByCode(request) {\n      var data = _query.QueryContractsByCodeRequest.encode(request).finish();\n      var promise = this.rpc.request(\"cosmwasm.wasm.v1.Query\", \"ContractsByCode\", data);\n      return promise.then(function (data) {\n        return _query.QueryContractsByCodeResponse.decode(new _m0.Reader(data));\n      });\n    }\n  }, {\n    key: \"allContractState\",\n    value: function allContractState(request) {\n      var data = _query.QueryAllContractStateRequest.encode(request).finish();\n      var promise = this.rpc.request(\"cosmwasm.wasm.v1.Query\", \"AllContractState\", data);\n      return promise.then(function (data) {\n        return _query.QueryAllContractStateResponse.decode(new _m0.Reader(data));\n      });\n    }\n  }, {\n    key: \"rawContractState\",\n    value: function rawContractState(request) {\n      var data = _query.QueryRawContractStateRequest.encode(request).finish();\n      var promise = this.rpc.request(\"cosmwasm.wasm.v1.Query\", \"RawContractState\", data);\n      return promise.then(function (data) {\n        return _query.QueryRawContractStateResponse.decode(new _m0.Reader(data));\n      });\n    }\n  }, {\n    key: \"smartContractState\",\n    value: function smartContractState(request) {\n      var data = _query.QuerySmartContractStateRequest.encode(request).finish();\n      var promise = this.rpc.request(\"cosmwasm.wasm.v1.Query\", \"SmartContractState\", data);\n      return promise.then(function (data) {\n        return _query.QuerySmartContractStateResponse.decode(new _m0.Reader(data));\n      });\n    }\n  }, {\n    key: \"code\",\n    value: function code(request) {\n      var data = _query.QueryCodeRequest.encode(request).finish();\n      var promise = this.rpc.request(\"cosmwasm.wasm.v1.Query\", \"Code\", data);\n      return promise.then(function (data) {\n        return _query.QueryCodeResponse.decode(new _m0.Reader(data));\n      });\n    }\n  }, {\n    key: \"codes\",\n    value: function codes() {\n      var request = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        pagination: undefined\n      };\n      var data = _query.QueryCodesRequest.encode(request).finish();\n      var promise = this.rpc.request(\"cosmwasm.wasm.v1.Query\", \"Codes\", data);\n      return promise.then(function (data) {\n        return _query.QueryCodesResponse.decode(new _m0.Reader(data));\n      });\n    }\n  }, {\n    key: \"pinnedCodes\",\n    value: function pinnedCodes() {\n      var request = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        pagination: undefined\n      };\n      var data = _query.QueryPinnedCodesRequest.encode(request).finish();\n      var promise = this.rpc.request(\"cosmwasm.wasm.v1.Query\", \"PinnedCodes\", data);\n      return promise.then(function (data) {\n        return _query.QueryPinnedCodesResponse.decode(new _m0.Reader(data));\n      });\n    }\n  }]);\n  return QueryClientImpl;\n}();\nexports.QueryClientImpl = QueryClientImpl;\nvar createRpcQueryExtension = function createRpcQueryExtension(base) {\n  var rpc = (0, _stargate.createProtobufRpcClient)(base);\n  var queryService = new QueryClientImpl(rpc);\n  return {\n    contractInfo: function contractInfo(request) {\n      return queryService.contractInfo(request);\n    },\n    contractHistory: function contractHistory(request) {\n      return queryService.contractHistory(request);\n    },\n    contractsByCode: function contractsByCode(request) {\n      return queryService.contractsByCode(request);\n    },\n    allContractState: function allContractState(request) {\n      return queryService.allContractState(request);\n    },\n    rawContractState: function rawContractState(request) {\n      return queryService.rawContractState(request);\n    },\n    smartContractState: function smartContractState(request) {\n      return queryService.smartContractState(request);\n    },\n    code: function code(request) {\n      return queryService.code(request);\n    },\n    codes: function codes(request) {\n      return queryService.codes(request);\n    },\n    pinnedCodes: function pinnedCodes(request) {\n      return queryService.pinnedCodes(request);\n    }\n  };\n};\nexports.createRpcQueryExtension = createRpcQueryExtension;","map":null,"metadata":{},"sourceType":"script"}