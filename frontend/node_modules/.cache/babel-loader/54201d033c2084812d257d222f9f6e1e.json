{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.registry = exports.load = exports.MessageComposer = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _tx = require(\"./tx\");\n//@ts-nocheck\n\nvar registry = [[\"/ibc.core.channel.v1.MsgChannelOpenInit\", _tx.MsgChannelOpenInit], [\"/ibc.core.channel.v1.MsgChannelOpenTry\", _tx.MsgChannelOpenTry], [\"/ibc.core.channel.v1.MsgChannelOpenAck\", _tx.MsgChannelOpenAck], [\"/ibc.core.channel.v1.MsgChannelOpenConfirm\", _tx.MsgChannelOpenConfirm], [\"/ibc.core.channel.v1.MsgChannelCloseInit\", _tx.MsgChannelCloseInit], [\"/ibc.core.channel.v1.MsgChannelCloseConfirm\", _tx.MsgChannelCloseConfirm], [\"/ibc.core.channel.v1.MsgRecvPacket\", _tx.MsgRecvPacket], [\"/ibc.core.channel.v1.MsgTimeout\", _tx.MsgTimeout], [\"/ibc.core.channel.v1.MsgTimeoutOnClose\", _tx.MsgTimeoutOnClose], [\"/ibc.core.channel.v1.MsgAcknowledgement\", _tx.MsgAcknowledgement]];\nexports.registry = registry;\nvar load = function load(protoRegistry) {\n  registry.forEach(function (_ref) {\n    var _ref2 = (0, _slicedToArray2[\"default\"])(_ref, 2),\n      typeUrl = _ref2[0],\n      mod = _ref2[1];\n    protoRegistry.register(typeUrl, mod);\n  });\n};\nexports.load = load;\nvar MessageComposer = {\n  encoded: {\n    channelOpenInit: function channelOpenInit(value) {\n      return {\n        typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenInit\",\n        value: _tx.MsgChannelOpenInit.encode(value).finish()\n      };\n    },\n    channelOpenTry: function channelOpenTry(value) {\n      return {\n        typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenTry\",\n        value: _tx.MsgChannelOpenTry.encode(value).finish()\n      };\n    },\n    channelOpenAck: function channelOpenAck(value) {\n      return {\n        typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenAck\",\n        value: _tx.MsgChannelOpenAck.encode(value).finish()\n      };\n    },\n    channelOpenConfirm: function channelOpenConfirm(value) {\n      return {\n        typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenConfirm\",\n        value: _tx.MsgChannelOpenConfirm.encode(value).finish()\n      };\n    },\n    channelCloseInit: function channelCloseInit(value) {\n      return {\n        typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseInit\",\n        value: _tx.MsgChannelCloseInit.encode(value).finish()\n      };\n    },\n    channelCloseConfirm: function channelCloseConfirm(value) {\n      return {\n        typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseConfirm\",\n        value: _tx.MsgChannelCloseConfirm.encode(value).finish()\n      };\n    },\n    recvPacket: function recvPacket(value) {\n      return {\n        typeUrl: \"/ibc.core.channel.v1.MsgRecvPacket\",\n        value: _tx.MsgRecvPacket.encode(value).finish()\n      };\n    },\n    timeout: function timeout(value) {\n      return {\n        typeUrl: \"/ibc.core.channel.v1.MsgTimeout\",\n        value: _tx.MsgTimeout.encode(value).finish()\n      };\n    },\n    timeoutOnClose: function timeoutOnClose(value) {\n      return {\n        typeUrl: \"/ibc.core.channel.v1.MsgTimeoutOnClose\",\n        value: _tx.MsgTimeoutOnClose.encode(value).finish()\n      };\n    },\n    acknowledgement: function acknowledgement(value) {\n      return {\n        typeUrl: \"/ibc.core.channel.v1.MsgAcknowledgement\",\n        value: _tx.MsgAcknowledgement.encode(value).finish()\n      };\n    }\n  },\n  withTypeUrl: {\n    channelOpenInit: function channelOpenInit(value) {\n      return {\n        typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenInit\",\n        value: value\n      };\n    },\n    channelOpenTry: function channelOpenTry(value) {\n      return {\n        typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenTry\",\n        value: value\n      };\n    },\n    channelOpenAck: function channelOpenAck(value) {\n      return {\n        typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenAck\",\n        value: value\n      };\n    },\n    channelOpenConfirm: function channelOpenConfirm(value) {\n      return {\n        typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenConfirm\",\n        value: value\n      };\n    },\n    channelCloseInit: function channelCloseInit(value) {\n      return {\n        typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseInit\",\n        value: value\n      };\n    },\n    channelCloseConfirm: function channelCloseConfirm(value) {\n      return {\n        typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseConfirm\",\n        value: value\n      };\n    },\n    recvPacket: function recvPacket(value) {\n      return {\n        typeUrl: \"/ibc.core.channel.v1.MsgRecvPacket\",\n        value: value\n      };\n    },\n    timeout: function timeout(value) {\n      return {\n        typeUrl: \"/ibc.core.channel.v1.MsgTimeout\",\n        value: value\n      };\n    },\n    timeoutOnClose: function timeoutOnClose(value) {\n      return {\n        typeUrl: \"/ibc.core.channel.v1.MsgTimeoutOnClose\",\n        value: value\n      };\n    },\n    acknowledgement: function acknowledgement(value) {\n      return {\n        typeUrl: \"/ibc.core.channel.v1.MsgAcknowledgement\",\n        value: value\n      };\n    }\n  },\n  fromPartial: {\n    channelOpenInit: function channelOpenInit(value) {\n      return {\n        typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenInit\",\n        value: _tx.MsgChannelOpenInit.fromPartial(value)\n      };\n    },\n    channelOpenTry: function channelOpenTry(value) {\n      return {\n        typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenTry\",\n        value: _tx.MsgChannelOpenTry.fromPartial(value)\n      };\n    },\n    channelOpenAck: function channelOpenAck(value) {\n      return {\n        typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenAck\",\n        value: _tx.MsgChannelOpenAck.fromPartial(value)\n      };\n    },\n    channelOpenConfirm: function channelOpenConfirm(value) {\n      return {\n        typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenConfirm\",\n        value: _tx.MsgChannelOpenConfirm.fromPartial(value)\n      };\n    },\n    channelCloseInit: function channelCloseInit(value) {\n      return {\n        typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseInit\",\n        value: _tx.MsgChannelCloseInit.fromPartial(value)\n      };\n    },\n    channelCloseConfirm: function channelCloseConfirm(value) {\n      return {\n        typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseConfirm\",\n        value: _tx.MsgChannelCloseConfirm.fromPartial(value)\n      };\n    },\n    recvPacket: function recvPacket(value) {\n      return {\n        typeUrl: \"/ibc.core.channel.v1.MsgRecvPacket\",\n        value: _tx.MsgRecvPacket.fromPartial(value)\n      };\n    },\n    timeout: function timeout(value) {\n      return {\n        typeUrl: \"/ibc.core.channel.v1.MsgTimeout\",\n        value: _tx.MsgTimeout.fromPartial(value)\n      };\n    },\n    timeoutOnClose: function timeoutOnClose(value) {\n      return {\n        typeUrl: \"/ibc.core.channel.v1.MsgTimeoutOnClose\",\n        value: _tx.MsgTimeoutOnClose.fromPartial(value)\n      };\n    },\n    acknowledgement: function acknowledgement(value) {\n      return {\n        typeUrl: \"/ibc.core.channel.v1.MsgAcknowledgement\",\n        value: _tx.MsgAcknowledgement.fromPartial(value)\n      };\n    }\n  }\n};\nexports.MessageComposer = MessageComposer;","map":null,"metadata":{},"sourceType":"script"}