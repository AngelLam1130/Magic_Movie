{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createGovAminoConverters = exports.isAminoMsgDeposit = exports.isAminoMsgVoteWeighted = exports.isAminoMsgVote = exports.isAminoMsgSubmitProposal = void 0;\nvar math_1 = require(\"@cosmjs/math\");\nvar utils_1 = require(\"@cosmjs/utils\");\nvar gov_1 = require(\"cosmjs-types/cosmos/gov/v1beta1/gov\");\nvar any_1 = require(\"cosmjs-types/google/protobuf/any\");\nvar long_1 = __importDefault(require(\"long\"));\nvar queryclient_1 = require(\"../../queryclient\");\nfunction isAminoMsgSubmitProposal(msg) {\n  return msg.type === \"cosmos-sdk/MsgSubmitProposal\";\n}\nexports.isAminoMsgSubmitProposal = isAminoMsgSubmitProposal;\nfunction isAminoMsgVote(msg) {\n  return msg.type === \"cosmos-sdk/MsgVote\";\n}\nexports.isAminoMsgVote = isAminoMsgVote;\nfunction isAminoMsgVoteWeighted(msg) {\n  return msg.type === \"cosmos-sdk/MsgVoteWeighted\";\n}\nexports.isAminoMsgVoteWeighted = isAminoMsgVoteWeighted;\nfunction isAminoMsgDeposit(msg) {\n  return msg.type === \"cosmos-sdk/MsgDeposit\";\n}\nexports.isAminoMsgDeposit = isAminoMsgDeposit;\nfunction createGovAminoConverters() {\n  return {\n    \"/cosmos.gov.v1beta1.MsgDeposit\": {\n      aminoType: \"cosmos-sdk/MsgDeposit\",\n      toAmino: function toAmino(_ref) {\n        var amount = _ref.amount,\n          depositor = _ref.depositor,\n          proposalId = _ref.proposalId;\n        return {\n          amount: amount,\n          depositor: depositor,\n          proposal_id: proposalId.toString()\n        };\n      },\n      fromAmino: function fromAmino(_ref2) {\n        var amount = _ref2.amount,\n          depositor = _ref2.depositor,\n          proposal_id = _ref2.proposal_id;\n        return {\n          amount: Array.from(amount),\n          depositor: depositor,\n          proposalId: long_1.default.fromString(proposal_id)\n        };\n      }\n    },\n    \"/cosmos.gov.v1beta1.MsgVote\": {\n      aminoType: \"cosmos-sdk/MsgVote\",\n      toAmino: function toAmino(_ref3) {\n        var option = _ref3.option,\n          proposalId = _ref3.proposalId,\n          voter = _ref3.voter;\n        return {\n          option: option,\n          proposal_id: proposalId.toString(),\n          voter: voter\n        };\n      },\n      fromAmino: function fromAmino(_ref4) {\n        var option = _ref4.option,\n          proposal_id = _ref4.proposal_id,\n          voter = _ref4.voter;\n        return {\n          option: (0, gov_1.voteOptionFromJSON)(option),\n          proposalId: long_1.default.fromString(proposal_id),\n          voter: voter\n        };\n      }\n    },\n    \"/cosmos.gov.v1beta1.MsgVoteWeighted\": {\n      aminoType: \"cosmos-sdk/MsgVoteWeighted\",\n      toAmino: function toAmino(_ref5) {\n        var options = _ref5.options,\n          proposalId = _ref5.proposalId,\n          voter = _ref5.voter;\n        return {\n          options: options.map(function (o) {\n            return {\n              option: o.option,\n              // Weight is between 0 and 1, so we always have 20 characters when printing all trailing\n              // zeros (e.g. \"0.700000000000000000\" or \"1.000000000000000000\")\n              weight: (0, queryclient_1.decodeCosmosSdkDecFromProto)(o.weight).toString().padEnd(20, \"0\")\n            };\n          }),\n          proposal_id: proposalId.toString(),\n          voter: voter\n        };\n      },\n      fromAmino: function fromAmino(_ref6) {\n        var options = _ref6.options,\n          proposal_id = _ref6.proposal_id,\n          voter = _ref6.voter;\n        return {\n          proposalId: long_1.default.fromString(proposal_id),\n          voter: voter,\n          options: options.map(function (o) {\n            return {\n              option: (0, gov_1.voteOptionFromJSON)(o.option),\n              weight: math_1.Decimal.fromUserInput(o.weight, 18).atomics\n            };\n          })\n        };\n      }\n    },\n    \"/cosmos.gov.v1beta1.MsgSubmitProposal\": {\n      aminoType: \"cosmos-sdk/MsgSubmitProposal\",\n      toAmino: function toAmino(_ref7) {\n        var initialDeposit = _ref7.initialDeposit,\n          proposer = _ref7.proposer,\n          content = _ref7.content;\n        (0, utils_1.assertDefinedAndNotNull)(content);\n        var proposal;\n        switch (content.typeUrl) {\n          case \"/cosmos.gov.v1beta1.TextProposal\":\n            {\n              var textProposal = gov_1.TextProposal.decode(content.value);\n              proposal = {\n                type: \"cosmos-sdk/TextProposal\",\n                value: {\n                  description: textProposal.description,\n                  title: textProposal.title\n                }\n              };\n              break;\n            }\n          default:\n            throw new Error(\"Unsupported proposal type: '\".concat(content.typeUrl, \"'\"));\n        }\n        return {\n          initial_deposit: initialDeposit,\n          proposer: proposer,\n          content: proposal\n        };\n      },\n      fromAmino: function fromAmino(_ref8) {\n        var initial_deposit = _ref8.initial_deposit,\n          proposer = _ref8.proposer,\n          content = _ref8.content;\n        var any_content;\n        switch (content.type) {\n          case \"cosmos-sdk/TextProposal\":\n            {\n              var value = content.value;\n              (0, utils_1.assert)((0, utils_1.isNonNullObject)(value));\n              var title = value.title,\n                description = value.description;\n              (0, utils_1.assert)(typeof title === \"string\");\n              (0, utils_1.assert)(typeof description === \"string\");\n              any_content = any_1.Any.fromPartial({\n                typeUrl: \"/cosmos.gov.v1beta1.TextProposal\",\n                value: gov_1.TextProposal.encode(gov_1.TextProposal.fromPartial({\n                  title: title,\n                  description: description\n                })).finish()\n              });\n              break;\n            }\n          default:\n            throw new Error(\"Unsupported proposal type: '\".concat(content.type, \"'\"));\n        }\n        return {\n          initialDeposit: Array.from(initial_deposit),\n          proposer: proposer,\n          content: any_content\n        };\n      }\n    }\n  };\n}\nexports.createGovAminoConverters = createGovAminoConverters;","map":null,"metadata":{},"sourceType":"script"}