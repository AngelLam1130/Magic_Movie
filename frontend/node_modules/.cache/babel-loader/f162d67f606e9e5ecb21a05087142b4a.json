{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Block = exports.protobufPackage = void 0;\n/* eslint-disable */\nvar long_1 = __importDefault(require(\"long\"));\nvar minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nvar evidence_1 = require(\"./evidence\");\nvar types_1 = require(\"./types\");\nexports.protobufPackage = \"tendermint.types\";\nfunction createBaseBlock() {\n  return {\n    header: undefined,\n    data: undefined,\n    evidence: undefined,\n    lastCommit: undefined\n  };\n}\nexports.Block = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.header !== undefined) {\n      types_1.Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.data !== undefined) {\n      types_1.Data.encode(message.data, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.evidence !== undefined) {\n      evidence_1.EvidenceList.encode(message.evidence, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.lastCommit !== undefined) {\n      types_1.Commit.encode(message.lastCommit, writer.uint32(34).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseBlock();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.header = types_1.Header.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.data = types_1.Data.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.evidence = evidence_1.EvidenceList.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.lastCommit = types_1.Commit.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      header: isSet(object.header) ? types_1.Header.fromJSON(object.header) : undefined,\n      data: isSet(object.data) ? types_1.Data.fromJSON(object.data) : undefined,\n      evidence: isSet(object.evidence) ? evidence_1.EvidenceList.fromJSON(object.evidence) : undefined,\n      lastCommit: isSet(object.lastCommit) ? types_1.Commit.fromJSON(object.lastCommit) : undefined\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.header !== undefined && (obj.header = message.header ? types_1.Header.toJSON(message.header) : undefined);\n    message.data !== undefined && (obj.data = message.data ? types_1.Data.toJSON(message.data) : undefined);\n    message.evidence !== undefined && (obj.evidence = message.evidence ? evidence_1.EvidenceList.toJSON(message.evidence) : undefined);\n    message.lastCommit !== undefined && (obj.lastCommit = message.lastCommit ? types_1.Commit.toJSON(message.lastCommit) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseBlock();\n    message.header = object.header !== undefined && object.header !== null ? types_1.Header.fromPartial(object.header) : undefined;\n    message.data = object.data !== undefined && object.data !== null ? types_1.Data.fromPartial(object.data) : undefined;\n    message.evidence = object.evidence !== undefined && object.evidence !== null ? evidence_1.EvidenceList.fromPartial(object.evidence) : undefined;\n    message.lastCommit = object.lastCommit !== undefined && object.lastCommit !== null ? types_1.Commit.fromPartial(object.lastCommit) : undefined;\n    return message;\n  }\n};\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}\nfunction isSet(value) {\n  return value !== null && value !== undefined;\n}","map":null,"metadata":{},"sourceType":"script"}