{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createRpcQueryExtension = exports.QueryClientImpl = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _m0 = _interopRequireWildcard(require(\"protobufjs/minimal\"));\nvar _stargate = require(\"@cosmjs/stargate\");\nvar _query = require(\"./query\");\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj[\"default\"] = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nvar QueryClientImpl = /*#__PURE__*/function () {\n  function QueryClientImpl(rpc) {\n    (0, _classCallCheck2[\"default\"])(this, QueryClientImpl);\n    (0, _defineProperty2[\"default\"])(this, \"rpc\", void 0);\n    this.rpc = rpc;\n    this.balance = this.balance.bind(this);\n    this.allBalances = this.allBalances.bind(this);\n    this.spendableBalances = this.spendableBalances.bind(this);\n    this.totalSupply = this.totalSupply.bind(this);\n    this.supplyOf = this.supplyOf.bind(this);\n    this.params = this.params.bind(this);\n    this.denomMetadata = this.denomMetadata.bind(this);\n    this.denomsMetadata = this.denomsMetadata.bind(this);\n    this.denomOwners = this.denomOwners.bind(this);\n  }\n  (0, _createClass2[\"default\"])(QueryClientImpl, [{\n    key: \"balance\",\n    value: function balance(request) {\n      var data = _query.QueryBalanceRequest.encode(request).finish();\n      var promise = this.rpc.request(\"cosmos.bank.v1beta1.Query\", \"Balance\", data);\n      return promise.then(function (data) {\n        return _query.QueryBalanceResponse.decode(new _m0.Reader(data));\n      });\n    }\n  }, {\n    key: \"allBalances\",\n    value: function allBalances(request) {\n      var data = _query.QueryAllBalancesRequest.encode(request).finish();\n      var promise = this.rpc.request(\"cosmos.bank.v1beta1.Query\", \"AllBalances\", data);\n      return promise.then(function (data) {\n        return _query.QueryAllBalancesResponse.decode(new _m0.Reader(data));\n      });\n    }\n  }, {\n    key: \"spendableBalances\",\n    value: function spendableBalances(request) {\n      var data = _query.QuerySpendableBalancesRequest.encode(request).finish();\n      var promise = this.rpc.request(\"cosmos.bank.v1beta1.Query\", \"SpendableBalances\", data);\n      return promise.then(function (data) {\n        return _query.QuerySpendableBalancesResponse.decode(new _m0.Reader(data));\n      });\n    }\n  }, {\n    key: \"totalSupply\",\n    value: function totalSupply() {\n      var request = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        pagination: undefined\n      };\n      var data = _query.QueryTotalSupplyRequest.encode(request).finish();\n      var promise = this.rpc.request(\"cosmos.bank.v1beta1.Query\", \"TotalSupply\", data);\n      return promise.then(function (data) {\n        return _query.QueryTotalSupplyResponse.decode(new _m0.Reader(data));\n      });\n    }\n  }, {\n    key: \"supplyOf\",\n    value: function supplyOf(request) {\n      var data = _query.QuerySupplyOfRequest.encode(request).finish();\n      var promise = this.rpc.request(\"cosmos.bank.v1beta1.Query\", \"SupplyOf\", data);\n      return promise.then(function (data) {\n        return _query.QuerySupplyOfResponse.decode(new _m0.Reader(data));\n      });\n    }\n  }, {\n    key: \"params\",\n    value: function params() {\n      var request = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var data = _query.QueryParamsRequest.encode(request).finish();\n      var promise = this.rpc.request(\"cosmos.bank.v1beta1.Query\", \"Params\", data);\n      return promise.then(function (data) {\n        return _query.QueryParamsResponse.decode(new _m0.Reader(data));\n      });\n    }\n  }, {\n    key: \"denomMetadata\",\n    value: function denomMetadata(request) {\n      var data = _query.QueryDenomMetadataRequest.encode(request).finish();\n      var promise = this.rpc.request(\"cosmos.bank.v1beta1.Query\", \"DenomMetadata\", data);\n      return promise.then(function (data) {\n        return _query.QueryDenomMetadataResponse.decode(new _m0.Reader(data));\n      });\n    }\n  }, {\n    key: \"denomsMetadata\",\n    value: function denomsMetadata() {\n      var request = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        pagination: undefined\n      };\n      var data = _query.QueryDenomsMetadataRequest.encode(request).finish();\n      var promise = this.rpc.request(\"cosmos.bank.v1beta1.Query\", \"DenomsMetadata\", data);\n      return promise.then(function (data) {\n        return _query.QueryDenomsMetadataResponse.decode(new _m0.Reader(data));\n      });\n    }\n  }, {\n    key: \"denomOwners\",\n    value: function denomOwners(request) {\n      var data = _query.QueryDenomOwnersRequest.encode(request).finish();\n      var promise = this.rpc.request(\"cosmos.bank.v1beta1.Query\", \"DenomOwners\", data);\n      return promise.then(function (data) {\n        return _query.QueryDenomOwnersResponse.decode(new _m0.Reader(data));\n      });\n    }\n  }]);\n  return QueryClientImpl;\n}();\nexports.QueryClientImpl = QueryClientImpl;\nvar createRpcQueryExtension = function createRpcQueryExtension(base) {\n  var rpc = (0, _stargate.createProtobufRpcClient)(base);\n  var queryService = new QueryClientImpl(rpc);\n  return {\n    balance: function balance(request) {\n      return queryService.balance(request);\n    },\n    allBalances: function allBalances(request) {\n      return queryService.allBalances(request);\n    },\n    spendableBalances: function spendableBalances(request) {\n      return queryService.spendableBalances(request);\n    },\n    totalSupply: function totalSupply(request) {\n      return queryService.totalSupply(request);\n    },\n    supplyOf: function supplyOf(request) {\n      return queryService.supplyOf(request);\n    },\n    params: function params(request) {\n      return queryService.params(request);\n    },\n    denomMetadata: function denomMetadata(request) {\n      return queryService.denomMetadata(request);\n    },\n    denomsMetadata: function denomsMetadata(request) {\n      return queryService.denomsMetadata(request);\n    },\n    denomOwners: function denomOwners(request) {\n      return queryService.denomOwners(request);\n    }\n  };\n};\nexports.createRpcQueryExtension = createRpcQueryExtension;","map":null,"metadata":{},"sourceType":"script"}