{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/Users/linanqi/Hackathon/GameRoom/frontend/node_modules/@babel/runtime/helpers/toConsumableArray\");\nvar _asyncToGenerator = require(\"/Users/linanqi/Hackathon/GameRoom/frontend/node_modules/@babel/runtime/helpers/asyncToGenerator\");\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setupIbcExtension = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nvar encoding_1 = require(\"@cosmjs/encoding\");\nvar math_1 = require(\"@cosmjs/math\");\nvar query_1 = require(\"cosmjs-types/ibc/applications/transfer/v1/query\");\nvar channel_1 = require(\"cosmjs-types/ibc/core/channel/v1/channel\");\nvar query_2 = require(\"cosmjs-types/ibc/core/channel/v1/query\");\nvar query_3 = require(\"cosmjs-types/ibc/core/client/v1/query\");\nvar query_4 = require(\"cosmjs-types/ibc/core/connection/v1/query\");\nvar tendermint_1 = require(\"cosmjs-types/ibc/lightclients/tendermint/v1/tendermint\");\nvar long_1 = __importDefault(require(\"long\"));\nvar queryclient_1 = require(\"../../queryclient\");\nfunction decodeTendermintClientStateAny(clientState) {\n  if ((clientState === null || clientState === void 0 ? void 0 : clientState.typeUrl) !== \"/ibc.lightclients.tendermint.v1.ClientState\") {\n    throw new Error(\"Unexpected client state type: \".concat(clientState === null || clientState === void 0 ? void 0 : clientState.typeUrl));\n  }\n  return tendermint_1.ClientState.decode(clientState.value);\n}\nfunction decodeTendermintConsensusStateAny(clientState) {\n  if ((clientState === null || clientState === void 0 ? void 0 : clientState.typeUrl) !== \"/ibc.lightclients.tendermint.v1.ConsensusState\") {\n    throw new Error(\"Unexpected client state type: \".concat(clientState === null || clientState === void 0 ? void 0 : clientState.typeUrl));\n  }\n  return tendermint_1.ConsensusState.decode(clientState.value);\n}\nfunction setupIbcExtension(base) {\n  var _channel, _channels, _allChannels, _connectionChannels, _allConnectionChannels, _clientState, _consensusState, _packetCommitment, _packetCommitments, _allPacketCommitments, _packetReceipt, _packetAcknowledgement, _packetAcknowledgements, _allPacketAcknowledgements, _unreceivedPackets, _unreceivedAcks, _nextSequenceReceive, _state, _states, _allStates, _consensusState2, _consensusStates, _allConsensusStates, _params, _stateTm, _statesTm, _allStatesTm, _consensusStateTm, _connection, _connections, _allConnections, _clientConnections, _clientState2, _consensusState3, _denomTrace, _denomTraces, _allDenomTraces, _params2, _channel2, _packetCommitment2, _packetAcknowledgement2, _nextSequenceReceive2;\n  var rpc = (0, queryclient_1.createProtobufRpcClient)(base);\n  // Use these services to get easy typed access to query methods\n  // These cannot be used for proof verification\n  var channelQueryService = new query_2.QueryClientImpl(rpc);\n  var clientQueryService = new query_3.QueryClientImpl(rpc);\n  var connectionQueryService = new query_4.QueryClientImpl(rpc);\n  var transferQueryService = new query_1.QueryClientImpl(rpc);\n  return {\n    ibc: {\n      channel: {\n        channel: function channel(_x, _x2) {\n          return (_channel = _channel || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(portId, channelId) {\n            return _regeneratorRuntime().wrap(function _callee$(_context) {\n              while (1) switch (_context.prev = _context.next) {\n                case 0:\n                  return _context.abrupt(\"return\", channelQueryService.Channel({\n                    portId: portId,\n                    channelId: channelId\n                  }));\n                case 1:\n                case \"end\":\n                  return _context.stop();\n              }\n            }, _callee);\n          }))).apply(this, arguments);\n        },\n        channels: function channels(_x3) {\n          return (_channels = _channels || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(paginationKey) {\n            return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n              while (1) switch (_context2.prev = _context2.next) {\n                case 0:\n                  return _context2.abrupt(\"return\", channelQueryService.Channels({\n                    pagination: (0, queryclient_1.createPagination)(paginationKey)\n                  }));\n                case 1:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }, _callee2);\n          }))).apply(this, arguments);\n        },\n        allChannels: function allChannels() {\n          return (_allChannels = _allChannels || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n            var _a, channels, response, key;\n            return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n              while (1) switch (_context3.prev = _context3.next) {\n                case 0:\n                  channels = [];\n                case 1:\n                  _context3.next = 3;\n                  return channelQueryService.Channels({\n                    pagination: (0, queryclient_1.createPagination)(key)\n                  });\n                case 3:\n                  response = _context3.sent;\n                  channels.push.apply(channels, _toConsumableArray(response.channels));\n                  key = (_a = response.pagination) === null || _a === void 0 ? void 0 : _a.nextKey;\n                case 6:\n                  if (key && key.length) {\n                    _context3.next = 1;\n                    break;\n                  }\n                case 7:\n                  return _context3.abrupt(\"return\", {\n                    channels: channels,\n                    height: response.height\n                  });\n                case 8:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }, _callee3);\n          }))).apply(this, arguments);\n        },\n        connectionChannels: function connectionChannels(_x4, _x5) {\n          return (_connectionChannels = _connectionChannels || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(connection, paginationKey) {\n            return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n              while (1) switch (_context4.prev = _context4.next) {\n                case 0:\n                  return _context4.abrupt(\"return\", channelQueryService.ConnectionChannels({\n                    connection: connection,\n                    pagination: (0, queryclient_1.createPagination)(paginationKey)\n                  }));\n                case 1:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }, _callee4);\n          }))).apply(this, arguments);\n        },\n        allConnectionChannels: function allConnectionChannels(_x6) {\n          return (_allConnectionChannels = _allConnectionChannels || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(connection) {\n            var _a, channels, response, key;\n            return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n              while (1) switch (_context5.prev = _context5.next) {\n                case 0:\n                  channels = [];\n                case 1:\n                  _context5.next = 3;\n                  return channelQueryService.ConnectionChannels({\n                    connection: connection,\n                    pagination: (0, queryclient_1.createPagination)(key)\n                  });\n                case 3:\n                  response = _context5.sent;\n                  channels.push.apply(channels, _toConsumableArray(response.channels));\n                  key = (_a = response.pagination) === null || _a === void 0 ? void 0 : _a.nextKey;\n                case 6:\n                  if (key && key.length) {\n                    _context5.next = 1;\n                    break;\n                  }\n                case 7:\n                  return _context5.abrupt(\"return\", {\n                    channels: channels,\n                    height: response.height\n                  });\n                case 8:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }, _callee5);\n          }))).apply(this, arguments);\n        },\n        clientState: function clientState(_x7, _x8) {\n          return (_clientState = _clientState || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(portId, channelId) {\n            return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n              while (1) switch (_context6.prev = _context6.next) {\n                case 0:\n                  return _context6.abrupt(\"return\", channelQueryService.ChannelClientState({\n                    portId: portId,\n                    channelId: channelId\n                  }));\n                case 1:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }, _callee6);\n          }))).apply(this, arguments);\n        },\n        consensusState: function consensusState(_x9, _x10, _x11, _x12) {\n          return (_consensusState = _consensusState || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(portId, channelId, revisionNumber, revisionHeight) {\n            return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n              while (1) switch (_context7.prev = _context7.next) {\n                case 0:\n                  return _context7.abrupt(\"return\", channelQueryService.ChannelConsensusState({\n                    portId: portId,\n                    channelId: channelId,\n                    revisionNumber: long_1.default.fromNumber(revisionNumber, true),\n                    revisionHeight: long_1.default.fromNumber(revisionHeight, true)\n                  }));\n                case 1:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }, _callee7);\n          }))).apply(this, arguments);\n        },\n        packetCommitment: function packetCommitment(_x13, _x14, _x15) {\n          return (_packetCommitment = _packetCommitment || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(portId, channelId, sequence) {\n            return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n              while (1) switch (_context8.prev = _context8.next) {\n                case 0:\n                  return _context8.abrupt(\"return\", channelQueryService.PacketCommitment({\n                    portId: portId,\n                    channelId: channelId,\n                    sequence: long_1.default.fromNumber(sequence, true)\n                  }));\n                case 1:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }, _callee8);\n          }))).apply(this, arguments);\n        },\n        packetCommitments: function packetCommitments(_x16, _x17, _x18) {\n          return (_packetCommitments = _packetCommitments || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(portId, channelId, paginationKey) {\n            return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n              while (1) switch (_context9.prev = _context9.next) {\n                case 0:\n                  return _context9.abrupt(\"return\", channelQueryService.PacketCommitments({\n                    channelId: channelId,\n                    portId: portId,\n                    pagination: (0, queryclient_1.createPagination)(paginationKey)\n                  }));\n                case 1:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }, _callee9);\n          }))).apply(this, arguments);\n        },\n        allPacketCommitments: function allPacketCommitments(_x19, _x20) {\n          return (_allPacketCommitments = _allPacketCommitments || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(portId, channelId) {\n            var _a, commitments, response, key;\n            return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n              while (1) switch (_context10.prev = _context10.next) {\n                case 0:\n                  commitments = [];\n                case 1:\n                  _context10.next = 3;\n                  return channelQueryService.PacketCommitments({\n                    channelId: channelId,\n                    portId: portId,\n                    pagination: (0, queryclient_1.createPagination)(key)\n                  });\n                case 3:\n                  response = _context10.sent;\n                  commitments.push.apply(commitments, _toConsumableArray(response.commitments));\n                  key = (_a = response.pagination) === null || _a === void 0 ? void 0 : _a.nextKey;\n                case 6:\n                  if (key && key.length) {\n                    _context10.next = 1;\n                    break;\n                  }\n                case 7:\n                  return _context10.abrupt(\"return\", {\n                    commitments: commitments,\n                    height: response.height\n                  });\n                case 8:\n                case \"end\":\n                  return _context10.stop();\n              }\n            }, _callee10);\n          }))).apply(this, arguments);\n        },\n        packetReceipt: function packetReceipt(_x21, _x22, _x23) {\n          return (_packetReceipt = _packetReceipt || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(portId, channelId, sequence) {\n            return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n              while (1) switch (_context11.prev = _context11.next) {\n                case 0:\n                  return _context11.abrupt(\"return\", channelQueryService.PacketReceipt({\n                    portId: portId,\n                    channelId: channelId,\n                    sequence: long_1.default.fromNumber(sequence, true)\n                  }));\n                case 1:\n                case \"end\":\n                  return _context11.stop();\n              }\n            }, _callee11);\n          }))).apply(this, arguments);\n        },\n        packetAcknowledgement: function packetAcknowledgement(_x24, _x25, _x26) {\n          return (_packetAcknowledgement = _packetAcknowledgement || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(portId, channelId, sequence) {\n            return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n              while (1) switch (_context12.prev = _context12.next) {\n                case 0:\n                  return _context12.abrupt(\"return\", channelQueryService.PacketAcknowledgement({\n                    portId: portId,\n                    channelId: channelId,\n                    sequence: long_1.default.fromNumber(sequence, true)\n                  }));\n                case 1:\n                case \"end\":\n                  return _context12.stop();\n              }\n            }, _callee12);\n          }))).apply(this, arguments);\n        },\n        packetAcknowledgements: function packetAcknowledgements(_x27, _x28, _x29) {\n          return (_packetAcknowledgements = _packetAcknowledgements || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(portId, channelId, paginationKey) {\n            var request;\n            return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n              while (1) switch (_context13.prev = _context13.next) {\n                case 0:\n                  request = query_2.QueryPacketAcknowledgementsRequest.fromPartial({\n                    portId: portId,\n                    channelId: channelId,\n                    pagination: (0, queryclient_1.createPagination)(paginationKey)\n                  });\n                  return _context13.abrupt(\"return\", channelQueryService.PacketAcknowledgements(request));\n                case 2:\n                case \"end\":\n                  return _context13.stop();\n              }\n            }, _callee13);\n          }))).apply(this, arguments);\n        },\n        allPacketAcknowledgements: function allPacketAcknowledgements(_x30, _x31) {\n          return (_allPacketAcknowledgements = _allPacketAcknowledgements || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14(portId, channelId) {\n            var _a, acknowledgements, response, key, request;\n            return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n              while (1) switch (_context14.prev = _context14.next) {\n                case 0:\n                  acknowledgements = [];\n                case 1:\n                  request = query_2.QueryPacketAcknowledgementsRequest.fromPartial({\n                    channelId: channelId,\n                    portId: portId,\n                    pagination: (0, queryclient_1.createPagination)(key)\n                  });\n                  _context14.next = 4;\n                  return channelQueryService.PacketAcknowledgements(request);\n                case 4:\n                  response = _context14.sent;\n                  acknowledgements.push.apply(acknowledgements, _toConsumableArray(response.acknowledgements));\n                  key = (_a = response.pagination) === null || _a === void 0 ? void 0 : _a.nextKey;\n                case 7:\n                  if (key && key.length) {\n                    _context14.next = 1;\n                    break;\n                  }\n                case 8:\n                  return _context14.abrupt(\"return\", {\n                    acknowledgements: acknowledgements,\n                    height: response.height\n                  });\n                case 9:\n                case \"end\":\n                  return _context14.stop();\n              }\n            }, _callee14);\n          }))).apply(this, arguments);\n        },\n        unreceivedPackets: function unreceivedPackets(_x32, _x33, _x34) {\n          return (_unreceivedPackets = _unreceivedPackets || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15(portId, channelId, packetCommitmentSequences) {\n            return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n              while (1) switch (_context15.prev = _context15.next) {\n                case 0:\n                  return _context15.abrupt(\"return\", channelQueryService.UnreceivedPackets({\n                    portId: portId,\n                    channelId: channelId,\n                    packetCommitmentSequences: packetCommitmentSequences.map(function (s) {\n                      return long_1.default.fromNumber(s, true);\n                    })\n                  }));\n                case 1:\n                case \"end\":\n                  return _context15.stop();\n              }\n            }, _callee15);\n          }))).apply(this, arguments);\n        },\n        unreceivedAcks: function unreceivedAcks(_x35, _x36, _x37) {\n          return (_unreceivedAcks = _unreceivedAcks || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16(portId, channelId, packetAckSequences) {\n            return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n              while (1) switch (_context16.prev = _context16.next) {\n                case 0:\n                  return _context16.abrupt(\"return\", channelQueryService.UnreceivedAcks({\n                    portId: portId,\n                    channelId: channelId,\n                    packetAckSequences: packetAckSequences.map(function (s) {\n                      return long_1.default.fromNumber(s, true);\n                    })\n                  }));\n                case 1:\n                case \"end\":\n                  return _context16.stop();\n              }\n            }, _callee16);\n          }))).apply(this, arguments);\n        },\n        nextSequenceReceive: function nextSequenceReceive(_x38, _x39) {\n          return (_nextSequenceReceive = _nextSequenceReceive || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17(portId, channelId) {\n            return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n              while (1) switch (_context17.prev = _context17.next) {\n                case 0:\n                  return _context17.abrupt(\"return\", channelQueryService.NextSequenceReceive({\n                    portId: portId,\n                    channelId: channelId\n                  }));\n                case 1:\n                case \"end\":\n                  return _context17.stop();\n              }\n            }, _callee17);\n          }))).apply(this, arguments);\n        }\n      },\n      client: {\n        state: function state(_x40) {\n          return (_state = _state || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18(clientId) {\n            return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n              while (1) switch (_context18.prev = _context18.next) {\n                case 0:\n                  return _context18.abrupt(\"return\", clientQueryService.ClientState({\n                    clientId: clientId\n                  }));\n                case 1:\n                case \"end\":\n                  return _context18.stop();\n              }\n            }, _callee18);\n          }))).apply(this, arguments);\n        },\n        states: function states(_x41) {\n          return (_states = _states || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee19(paginationKey) {\n            return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n              while (1) switch (_context19.prev = _context19.next) {\n                case 0:\n                  return _context19.abrupt(\"return\", clientQueryService.ClientStates({\n                    pagination: (0, queryclient_1.createPagination)(paginationKey)\n                  }));\n                case 1:\n                case \"end\":\n                  return _context19.stop();\n              }\n            }, _callee19);\n          }))).apply(this, arguments);\n        },\n        allStates: function allStates() {\n          return (_allStates = _allStates || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee20() {\n            var _a, clientStates, response, key;\n            return _regeneratorRuntime().wrap(function _callee20$(_context20) {\n              while (1) switch (_context20.prev = _context20.next) {\n                case 0:\n                  clientStates = [];\n                case 1:\n                  _context20.next = 3;\n                  return clientQueryService.ClientStates({\n                    pagination: (0, queryclient_1.createPagination)(key)\n                  });\n                case 3:\n                  response = _context20.sent;\n                  clientStates.push.apply(clientStates, _toConsumableArray(response.clientStates));\n                  key = (_a = response.pagination) === null || _a === void 0 ? void 0 : _a.nextKey;\n                case 6:\n                  if (key && key.length) {\n                    _context20.next = 1;\n                    break;\n                  }\n                case 7:\n                  return _context20.abrupt(\"return\", {\n                    clientStates: clientStates\n                  });\n                case 8:\n                case \"end\":\n                  return _context20.stop();\n              }\n            }, _callee20);\n          }))).apply(this, arguments);\n        },\n        consensusState: function consensusState(_x42, _x43) {\n          return (_consensusState2 = _consensusState2 || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee21(clientId, consensusHeight) {\n            return _regeneratorRuntime().wrap(function _callee21$(_context21) {\n              while (1) switch (_context21.prev = _context21.next) {\n                case 0:\n                  return _context21.abrupt(\"return\", clientQueryService.ConsensusState(query_3.QueryConsensusStateRequest.fromPartial({\n                    clientId: clientId,\n                    revisionHeight: consensusHeight !== undefined ? long_1.default.fromNumber(consensusHeight, true) : undefined,\n                    latestHeight: consensusHeight === undefined\n                  })));\n                case 1:\n                case \"end\":\n                  return _context21.stop();\n              }\n            }, _callee21);\n          }))).apply(this, arguments);\n        },\n        consensusStates: function consensusStates(_x44, _x45) {\n          return (_consensusStates = _consensusStates || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee22(clientId, paginationKey) {\n            return _regeneratorRuntime().wrap(function _callee22$(_context22) {\n              while (1) switch (_context22.prev = _context22.next) {\n                case 0:\n                  return _context22.abrupt(\"return\", clientQueryService.ConsensusStates({\n                    clientId: clientId,\n                    pagination: (0, queryclient_1.createPagination)(paginationKey)\n                  }));\n                case 1:\n                case \"end\":\n                  return _context22.stop();\n              }\n            }, _callee22);\n          }))).apply(this, arguments);\n        },\n        allConsensusStates: function allConsensusStates(_x46) {\n          return (_allConsensusStates = _allConsensusStates || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee23(clientId) {\n            var _a, consensusStates, response, key;\n            return _regeneratorRuntime().wrap(function _callee23$(_context23) {\n              while (1) switch (_context23.prev = _context23.next) {\n                case 0:\n                  consensusStates = [];\n                case 1:\n                  _context23.next = 3;\n                  return clientQueryService.ConsensusStates({\n                    clientId: clientId,\n                    pagination: (0, queryclient_1.createPagination)(key)\n                  });\n                case 3:\n                  response = _context23.sent;\n                  consensusStates.push.apply(consensusStates, _toConsumableArray(response.consensusStates));\n                  key = (_a = response.pagination) === null || _a === void 0 ? void 0 : _a.nextKey;\n                case 6:\n                  if (key && key.length) {\n                    _context23.next = 1;\n                    break;\n                  }\n                case 7:\n                  return _context23.abrupt(\"return\", {\n                    consensusStates: consensusStates\n                  });\n                case 8:\n                case \"end\":\n                  return _context23.stop();\n              }\n            }, _callee23);\n          }))).apply(this, arguments);\n        },\n        params: function params() {\n          return (_params = _params || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee24() {\n            return _regeneratorRuntime().wrap(function _callee24$(_context24) {\n              while (1) switch (_context24.prev = _context24.next) {\n                case 0:\n                  return _context24.abrupt(\"return\", clientQueryService.ClientParams({}));\n                case 1:\n                case \"end\":\n                  return _context24.stop();\n              }\n            }, _callee24);\n          }))).apply(this, arguments);\n        },\n        stateTm: function stateTm(_x47) {\n          return (_stateTm = _stateTm || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee25(clientId) {\n            var response;\n            return _regeneratorRuntime().wrap(function _callee25$(_context25) {\n              while (1) switch (_context25.prev = _context25.next) {\n                case 0:\n                  _context25.next = 2;\n                  return clientQueryService.ClientState({\n                    clientId: clientId\n                  });\n                case 2:\n                  response = _context25.sent;\n                  return _context25.abrupt(\"return\", decodeTendermintClientStateAny(response.clientState));\n                case 4:\n                case \"end\":\n                  return _context25.stop();\n              }\n            }, _callee25);\n          }))).apply(this, arguments);\n        },\n        statesTm: function statesTm(_x48) {\n          return (_statesTm = _statesTm || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee26(paginationKey) {\n            var _yield$clientQuerySer, clientStates;\n            return _regeneratorRuntime().wrap(function _callee26$(_context26) {\n              while (1) switch (_context26.prev = _context26.next) {\n                case 0:\n                  _context26.next = 2;\n                  return clientQueryService.ClientStates({\n                    pagination: (0, queryclient_1.createPagination)(paginationKey)\n                  });\n                case 2:\n                  _yield$clientQuerySer = _context26.sent;\n                  clientStates = _yield$clientQuerySer.clientStates;\n                  return _context26.abrupt(\"return\", clientStates.map(function (_ref) {\n                    var clientState = _ref.clientState;\n                    return decodeTendermintClientStateAny(clientState);\n                  }));\n                case 5:\n                case \"end\":\n                  return _context26.stop();\n              }\n            }, _callee26);\n          }))).apply(this, arguments);\n        },\n        allStatesTm: function allStatesTm() {\n          return (_allStatesTm = _allStatesTm || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee27() {\n            var _a, clientStates, response, key;\n            return _regeneratorRuntime().wrap(function _callee27$(_context27) {\n              while (1) switch (_context27.prev = _context27.next) {\n                case 0:\n                  clientStates = [];\n                case 1:\n                  _context27.next = 3;\n                  return clientQueryService.ClientStates({\n                    pagination: (0, queryclient_1.createPagination)(key)\n                  });\n                case 3:\n                  response = _context27.sent;\n                  clientStates.push.apply(clientStates, _toConsumableArray(response.clientStates));\n                  key = (_a = response.pagination) === null || _a === void 0 ? void 0 : _a.nextKey;\n                case 6:\n                  if (key && key.length) {\n                    _context27.next = 1;\n                    break;\n                  }\n                case 7:\n                  return _context27.abrupt(\"return\", clientStates.map(function (_ref2) {\n                    var clientState = _ref2.clientState;\n                    return decodeTendermintClientStateAny(clientState);\n                  }));\n                case 8:\n                case \"end\":\n                  return _context27.stop();\n              }\n            }, _callee27);\n          }))).apply(this, arguments);\n        },\n        consensusStateTm: function consensusStateTm(_x49, _x50) {\n          return (_consensusStateTm = _consensusStateTm || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee28(clientId, consensusHeight) {\n            var response;\n            return _regeneratorRuntime().wrap(function _callee28$(_context28) {\n              while (1) switch (_context28.prev = _context28.next) {\n                case 0:\n                  _context28.next = 2;\n                  return clientQueryService.ConsensusState(query_3.QueryConsensusStateRequest.fromPartial({\n                    clientId: clientId,\n                    revisionHeight: consensusHeight === null || consensusHeight === void 0 ? void 0 : consensusHeight.revisionHeight,\n                    revisionNumber: consensusHeight === null || consensusHeight === void 0 ? void 0 : consensusHeight.revisionNumber,\n                    latestHeight: consensusHeight === undefined\n                  }));\n                case 2:\n                  response = _context28.sent;\n                  return _context28.abrupt(\"return\", decodeTendermintConsensusStateAny(response.consensusState));\n                case 4:\n                case \"end\":\n                  return _context28.stop();\n              }\n            }, _callee28);\n          }))).apply(this, arguments);\n        }\n      },\n      connection: {\n        connection: function connection(_x51) {\n          return (_connection = _connection || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee29(connectionId) {\n            return _regeneratorRuntime().wrap(function _callee29$(_context29) {\n              while (1) switch (_context29.prev = _context29.next) {\n                case 0:\n                  return _context29.abrupt(\"return\", connectionQueryService.Connection({\n                    connectionId: connectionId\n                  }));\n                case 1:\n                case \"end\":\n                  return _context29.stop();\n              }\n            }, _callee29);\n          }))).apply(this, arguments);\n        },\n        connections: function connections(_x52) {\n          return (_connections = _connections || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee30(paginationKey) {\n            return _regeneratorRuntime().wrap(function _callee30$(_context30) {\n              while (1) switch (_context30.prev = _context30.next) {\n                case 0:\n                  return _context30.abrupt(\"return\", connectionQueryService.Connections({\n                    pagination: (0, queryclient_1.createPagination)(paginationKey)\n                  }));\n                case 1:\n                case \"end\":\n                  return _context30.stop();\n              }\n            }, _callee30);\n          }))).apply(this, arguments);\n        },\n        allConnections: function allConnections() {\n          return (_allConnections = _allConnections || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee31() {\n            var _a, connections, response, key;\n            return _regeneratorRuntime().wrap(function _callee31$(_context31) {\n              while (1) switch (_context31.prev = _context31.next) {\n                case 0:\n                  connections = [];\n                case 1:\n                  _context31.next = 3;\n                  return connectionQueryService.Connections({\n                    pagination: (0, queryclient_1.createPagination)(key)\n                  });\n                case 3:\n                  response = _context31.sent;\n                  connections.push.apply(connections, _toConsumableArray(response.connections));\n                  key = (_a = response.pagination) === null || _a === void 0 ? void 0 : _a.nextKey;\n                case 6:\n                  if (key && key.length) {\n                    _context31.next = 1;\n                    break;\n                  }\n                case 7:\n                  return _context31.abrupt(\"return\", {\n                    connections: connections,\n                    height: response.height\n                  });\n                case 8:\n                case \"end\":\n                  return _context31.stop();\n              }\n            }, _callee31);\n          }))).apply(this, arguments);\n        },\n        clientConnections: function clientConnections(_x53) {\n          return (_clientConnections = _clientConnections || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee32(clientId) {\n            return _regeneratorRuntime().wrap(function _callee32$(_context32) {\n              while (1) switch (_context32.prev = _context32.next) {\n                case 0:\n                  return _context32.abrupt(\"return\", connectionQueryService.ClientConnections({\n                    clientId: clientId\n                  }));\n                case 1:\n                case \"end\":\n                  return _context32.stop();\n              }\n            }, _callee32);\n          }))).apply(this, arguments);\n        },\n        clientState: function clientState(_x54) {\n          return (_clientState2 = _clientState2 || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee33(connectionId) {\n            return _regeneratorRuntime().wrap(function _callee33$(_context33) {\n              while (1) switch (_context33.prev = _context33.next) {\n                case 0:\n                  return _context33.abrupt(\"return\", connectionQueryService.ConnectionClientState({\n                    connectionId: connectionId\n                  }));\n                case 1:\n                case \"end\":\n                  return _context33.stop();\n              }\n            }, _callee33);\n          }))).apply(this, arguments);\n        },\n        consensusState: function consensusState(_x55, _x56) {\n          return (_consensusState3 = _consensusState3 || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee34(connectionId, revisionHeight) {\n            return _regeneratorRuntime().wrap(function _callee34$(_context34) {\n              while (1) switch (_context34.prev = _context34.next) {\n                case 0:\n                  return _context34.abrupt(\"return\", connectionQueryService.ConnectionConsensusState(query_4.QueryConnectionConsensusStateRequest.fromPartial({\n                    connectionId: connectionId,\n                    revisionHeight: long_1.default.fromNumber(revisionHeight, true)\n                  })));\n                case 1:\n                case \"end\":\n                  return _context34.stop();\n              }\n            }, _callee34);\n          }))).apply(this, arguments);\n        }\n      },\n      transfer: {\n        denomTrace: function denomTrace(_x57) {\n          return (_denomTrace = _denomTrace || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee35(hash) {\n            return _regeneratorRuntime().wrap(function _callee35$(_context35) {\n              while (1) switch (_context35.prev = _context35.next) {\n                case 0:\n                  return _context35.abrupt(\"return\", transferQueryService.DenomTrace({\n                    hash: hash\n                  }));\n                case 1:\n                case \"end\":\n                  return _context35.stop();\n              }\n            }, _callee35);\n          }))).apply(this, arguments);\n        },\n        denomTraces: function denomTraces(_x58) {\n          return (_denomTraces = _denomTraces || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee36(paginationKey) {\n            return _regeneratorRuntime().wrap(function _callee36$(_context36) {\n              while (1) switch (_context36.prev = _context36.next) {\n                case 0:\n                  return _context36.abrupt(\"return\", transferQueryService.DenomTraces({\n                    pagination: (0, queryclient_1.createPagination)(paginationKey)\n                  }));\n                case 1:\n                case \"end\":\n                  return _context36.stop();\n              }\n            }, _callee36);\n          }))).apply(this, arguments);\n        },\n        allDenomTraces: function allDenomTraces() {\n          return (_allDenomTraces = _allDenomTraces || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee37() {\n            var _a, denomTraces, response, key;\n            return _regeneratorRuntime().wrap(function _callee37$(_context37) {\n              while (1) switch (_context37.prev = _context37.next) {\n                case 0:\n                  denomTraces = [];\n                case 1:\n                  _context37.next = 3;\n                  return transferQueryService.DenomTraces({\n                    pagination: (0, queryclient_1.createPagination)(key)\n                  });\n                case 3:\n                  response = _context37.sent;\n                  denomTraces.push.apply(denomTraces, _toConsumableArray(response.denomTraces));\n                  key = (_a = response.pagination) === null || _a === void 0 ? void 0 : _a.nextKey;\n                case 6:\n                  if (key && key.length) {\n                    _context37.next = 1;\n                    break;\n                  }\n                case 7:\n                  return _context37.abrupt(\"return\", {\n                    denomTraces: denomTraces\n                  });\n                case 8:\n                case \"end\":\n                  return _context37.stop();\n              }\n            }, _callee37);\n          }))).apply(this, arguments);\n        },\n        params: function params() {\n          return (_params2 = _params2 || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee38() {\n            return _regeneratorRuntime().wrap(function _callee38$(_context38) {\n              while (1) switch (_context38.prev = _context38.next) {\n                case 0:\n                  return _context38.abrupt(\"return\", transferQueryService.Params({}));\n                case 1:\n                case \"end\":\n                  return _context38.stop();\n              }\n            }, _callee38);\n          }))).apply(this, arguments);\n        }\n      },\n      verified: {\n        channel: {\n          channel: function channel(_x59, _x60) {\n            return (_channel2 = _channel2 || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee39(portId, channelId) {\n              var key, _yield$base$queryStor, value;\n              return _regeneratorRuntime().wrap(function _callee39$(_context39) {\n                while (1) switch (_context39.prev = _context39.next) {\n                  case 0:\n                    // keeper: https://github.com/cosmos/cosmos-sdk/blob/3bafd8255a502e5a9cee07391cf8261538245dfd/x/ibc/04-channel/keeper/keeper.go#L55-L65\n                    // key: https://github.com/cosmos/cosmos-sdk/blob/ef0a7344af345882729598bc2958a21143930a6b/x/ibc/24-host/keys.go#L117-L120\n                    key = (0, encoding_1.toAscii)(\"channelEnds/ports/\".concat(portId, \"/channels/\").concat(channelId));\n                    _context39.next = 3;\n                    return base.queryStoreVerified(\"ibc\", key);\n                  case 3:\n                    _yield$base$queryStor = _context39.sent;\n                    value = _yield$base$queryStor.value;\n                    return _context39.abrupt(\"return\", value.length ? channel_1.Channel.decode(value) : null);\n                  case 6:\n                  case \"end\":\n                    return _context39.stop();\n                }\n              }, _callee39);\n            }))).apply(this, arguments);\n          },\n          packetCommitment: function packetCommitment(_x61, _x62, _x63) {\n            return (_packetCommitment2 = _packetCommitment2 || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee40(portId, channelId, sequence) {\n              var key, _yield$base$queryStor2, value;\n              return _regeneratorRuntime().wrap(function _callee40$(_context40) {\n                while (1) switch (_context40.prev = _context40.next) {\n                  case 0:\n                    // keeper: https://github.com/cosmos/cosmos-sdk/blob/3bafd8255a502e5a9cee07391cf8261538245dfd/x/ibc/04-channel/keeper/keeper.go#L128-L133\n                    // key: https://github.com/cosmos/cosmos-sdk/blob/ef0a7344af345882729598bc2958a21143930a6b/x/ibc/24-host/keys.go#L183-L185\n                    key = (0, encoding_1.toAscii)(\"commitments/ports/\".concat(portId, \"/channels/\").concat(channelId, \"/packets/\").concat(sequence));\n                    _context40.next = 3;\n                    return base.queryStoreVerified(\"ibc\", key);\n                  case 3:\n                    _yield$base$queryStor2 = _context40.sent;\n                    value = _yield$base$queryStor2.value;\n                    return _context40.abrupt(\"return\", value);\n                  case 6:\n                  case \"end\":\n                    return _context40.stop();\n                }\n              }, _callee40);\n            }))).apply(this, arguments);\n          },\n          packetAcknowledgement: function packetAcknowledgement(_x64, _x65, _x66) {\n            return (_packetAcknowledgement2 = _packetAcknowledgement2 || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee41(portId, channelId, sequence) {\n              var key, _yield$base$queryStor3, value;\n              return _regeneratorRuntime().wrap(function _callee41$(_context41) {\n                while (1) switch (_context41.prev = _context41.next) {\n                  case 0:\n                    // keeper: https://github.com/cosmos/cosmos-sdk/blob/3bafd8255a502e5a9cee07391cf8261538245dfd/x/ibc/04-channel/keeper/keeper.go#L159-L166\n                    // key: https://github.com/cosmos/cosmos-sdk/blob/ef0a7344af345882729598bc2958a21143930a6b/x/ibc/24-host/keys.go#L153-L156\n                    key = (0, encoding_1.toAscii)(\"acks/ports/\".concat(portId, \"/channels/\").concat(channelId, \"/acknowledgements/\").concat(sequence));\n                    _context41.next = 3;\n                    return base.queryStoreVerified(\"ibc\", key);\n                  case 3:\n                    _yield$base$queryStor3 = _context41.sent;\n                    value = _yield$base$queryStor3.value;\n                    return _context41.abrupt(\"return\", value);\n                  case 6:\n                  case \"end\":\n                    return _context41.stop();\n                }\n              }, _callee41);\n            }))).apply(this, arguments);\n          },\n          nextSequenceReceive: function nextSequenceReceive(_x67, _x68) {\n            return (_nextSequenceReceive2 = _nextSequenceReceive2 || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee42(portId, channelId) {\n              var key, _yield$base$queryStor4, value;\n              return _regeneratorRuntime().wrap(function _callee42$(_context42) {\n                while (1) switch (_context42.prev = _context42.next) {\n                  case 0:\n                    // keeper: https://github.com/cosmos/cosmos-sdk/blob/3bafd8255a502e5a9cee07391cf8261538245dfd/x/ibc/04-channel/keeper/keeper.go#L92-L101\n                    // key: https://github.com/cosmos/cosmos-sdk/blob/ef0a7344af345882729598bc2958a21143930a6b/x/ibc/24-host/keys.go#L133-L136\n                    key = (0, encoding_1.toAscii)(\"seqAcks/ports/\".concat(portId, \"/channels/\").concat(channelId, \"/nextSequenceAck\"));\n                    _context42.next = 3;\n                    return base.queryStoreVerified(\"ibc\", key);\n                  case 3:\n                    _yield$base$queryStor4 = _context42.sent;\n                    value = _yield$base$queryStor4.value;\n                    return _context42.abrupt(\"return\", value.length ? math_1.Uint64.fromBytes(value).toNumber() : null);\n                  case 6:\n                  case \"end\":\n                    return _context42.stop();\n                }\n              }, _callee42);\n            }))).apply(this, arguments);\n          }\n        }\n      }\n    }\n  };\n}\nexports.setupIbcExtension = setupIbcExtension;","map":null,"metadata":{},"sourceType":"script"}