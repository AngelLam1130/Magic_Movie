{"ast":null,"code":"import _objectDestructuringEmpty from \"/Users/linanqi/Hackathon/RKA-808/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport _slicedToArray from \"/Users/linanqi/Hackathon/RKA-808/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/linanqi/Hackathon/RKA-808/frontend/src/components/UploadedMusic.js\";\nimport React, { useContext, memo, useState } from 'react';\nimport { Context } from '../hooks/useStore';\nimport './UploadedMusic.css';\n\nconst UploadedMusic = ({}) => {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        file = _useState2[0],\n        setFile = _useState2[1];\n\n  const _useContext = useContext(Context);\n\n  _objectDestructuringEmpty(_useContext);\n\n  function handleDownload(e) {//need to be changed\n  }\n\n  function handleUploadMusicFile() {\n    const formData = new FormData();\n    formData.append('file', file);\n    fetch('url', {\n      method: \"POST\",\n      body: formData\n    }).then(response => response.json()).then(result => {\n      console.log('success', result);\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    });\n  }\n\n  function handleMusicFile(event) {\n    setFile(event.target.files[0]); // Handle the selected file, e.g., upload it to the server or process it\n\n    console.log(event.target.files[0]);\n  }\n\n  return React.createElement(\"nav\", {\n    className: \"UploadedMusicBar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"uploadHeader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"uploadTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"RACK-808\")), React.createElement(\"div\", {\n    class: \"line\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    onSubmit: handleUploadMusicFile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form_container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"file\",\n    name: \"file\",\n    className: \"form_element\",\n    onChange: handleMusicFile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"form_element\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Generate from Uploaded Music\"))), React.createElement(\"div\", {\n    className: \"optionChoice\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Music Version 1\"), React.createElement(\"button\", {\n    className: \"form_element\",\n    onClick: handleDownload,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Download\"))), React.createElement(\"div\", {\n    className: \"optionChoice\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Music Version 2\"), React.createElement(\"button\", {\n    className: \"form_element\",\n    onClick: handleDownload,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Download\"))), React.createElement(\"div\", {\n    className: \"optionChoice\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Music Version 3\"), React.createElement(\"button\", {\n    className: \"form_element\",\n    onClick: handleDownload,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Download\"))));\n};\n\nexport default memo(UploadedMusic);","map":{"version":3,"sources":["/Users/linanqi/Hackathon/RKA-808/frontend/src/components/UploadedMusic.js"],"names":["React","useContext","memo","useState","Context","UploadedMusic","file","setFile","handleDownload","e","handleUploadMusicFile","formData","FormData","append","fetch","method","body","then","response","json","result","console","log","catch","error","handleMusicFile","event","target","files"],"mappings":"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","sourcesContent":["import React, { useContext, memo ,useState} from 'react'\nimport { Context } from '../hooks/useStore'\nimport './UploadedMusic.css'\n\nconst UploadedMusic = ({}) => {\n    const[file,setFile] = useState()\n    const {  } = useContext(Context)\n\n    function handleDownload(e) {\n        //need to be changed\n    }\n\n    function handleUploadMusicFile() {\n        const formData = new FormData()\n        formData.append('file',file)\n        fetch(\n            'url',\n            {\n                method:\"POST\",\n                body:formData\n            }\n        ).then((response) => response.json())\n        .then(\n            (result)=>{\n                console.log('success',result)\n            }\n        )\n        .catch(error => {\n            console.error(\"Error:\",error)\n        })\n    }\n\n    function handleMusicFile(event) {\n        setFile(event.target.files[0]);\n        // Handle the selected file, e.g., upload it to the server or process it\n        console.log(event.target.files[0]);\n    }\n\n    return (\n        <nav className=\"UploadedMusicBar\">\n            <div className=\"uploadHeader\">\n                <h1 className=\"uploadTitle\">RACK-808</h1>\n            </div>\n            <div class=\"line\"></div>\n            <form onSubmit={handleUploadMusicFile}>\n                <div className=\"form_container\">\n                    <input type=\"file\" name=\"file\" className=\"form_element\" onChange={handleMusicFile} />\n                    <button className=\"form_element\">Generate from Uploaded Music</button>\n                </div>\n            </form>\n            <div className=\"optionChoice\">\n                <h3>Music Version 1</h3>\n                <button className=\"form_element\" onClick={handleDownload}>\n                    <span>Download</span>\n                </button>\n            </div>\n            <div className=\"optionChoice\">\n                <h3>Music Version 2</h3>\n                <button className=\"form_element\" onClick={handleDownload}>\n                    <span>Download</span>\n                </button>\n            </div>\n            <div className=\"optionChoice\">\n                <h3>Music Version 3</h3>\n                <button className=\"form_element\" onClick={handleDownload}>\n                    <span>Download</span>\n                </button>\n            </div>\n        </nav>\n    )\n}\n\nexport default memo(UploadedMusic)\n"]},"metadata":{},"sourceType":"module"}