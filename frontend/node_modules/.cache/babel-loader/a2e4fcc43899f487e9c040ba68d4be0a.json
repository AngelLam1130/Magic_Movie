{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/Users/linanqi/Hackathon/GameRoom/frontend/node_modules/@babel/runtime/helpers/toConsumableArray\");\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cosmWasmTypes = exports.createWasmAminoConverters = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nvar encoding_1 = require(\"@cosmjs/encoding\");\nvar long_1 = __importDefault(require(\"long\"));\nfunction createWasmAminoConverters() {\n  return {\n    \"/cosmwasm.wasm.v1.MsgStoreCode\": {\n      aminoType: \"wasm/MsgStoreCode\",\n      toAmino: function toAmino(_ref) {\n        var sender = _ref.sender,\n          wasmByteCode = _ref.wasmByteCode;\n        return {\n          sender: sender,\n          wasm_byte_code: (0, encoding_1.toBase64)(wasmByteCode)\n        };\n      },\n      fromAmino: function fromAmino(_ref2) {\n        var sender = _ref2.sender,\n          wasm_byte_code = _ref2.wasm_byte_code;\n        return {\n          sender: sender,\n          wasmByteCode: (0, encoding_1.fromBase64)(wasm_byte_code),\n          instantiatePermission: undefined\n        };\n      }\n    },\n    \"/cosmwasm.wasm.v1.MsgInstantiateContract\": {\n      aminoType: \"wasm/MsgInstantiateContract\",\n      toAmino: function toAmino(_ref3) {\n        var sender = _ref3.sender,\n          codeId = _ref3.codeId,\n          label = _ref3.label,\n          msg = _ref3.msg,\n          funds = _ref3.funds,\n          admin = _ref3.admin;\n        return {\n          sender: sender,\n          code_id: codeId.toString(),\n          label: label,\n          msg: JSON.parse((0, encoding_1.fromUtf8)(msg)),\n          funds: funds,\n          admin: admin || undefined\n        };\n      },\n      fromAmino: function fromAmino(_ref4) {\n        var sender = _ref4.sender,\n          code_id = _ref4.code_id,\n          label = _ref4.label,\n          msg = _ref4.msg,\n          funds = _ref4.funds,\n          admin = _ref4.admin;\n        return {\n          sender: sender,\n          codeId: long_1.default.fromString(code_id),\n          label: label,\n          msg: (0, encoding_1.toUtf8)(JSON.stringify(msg)),\n          funds: _toConsumableArray(funds),\n          admin: admin !== null && admin !== void 0 ? admin : \"\"\n        };\n      }\n    },\n    \"/cosmwasm.wasm.v1.MsgUpdateAdmin\": {\n      aminoType: \"wasm/MsgUpdateAdmin\",\n      toAmino: function toAmino(_ref5) {\n        var sender = _ref5.sender,\n          newAdmin = _ref5.newAdmin,\n          contract = _ref5.contract;\n        return {\n          sender: sender,\n          new_admin: newAdmin,\n          contract: contract\n        };\n      },\n      fromAmino: function fromAmino(_ref6) {\n        var sender = _ref6.sender,\n          new_admin = _ref6.new_admin,\n          contract = _ref6.contract;\n        return {\n          sender: sender,\n          newAdmin: new_admin,\n          contract: contract\n        };\n      }\n    },\n    \"/cosmwasm.wasm.v1.MsgClearAdmin\": {\n      aminoType: \"wasm/MsgClearAdmin\",\n      toAmino: function toAmino(_ref7) {\n        var sender = _ref7.sender,\n          contract = _ref7.contract;\n        return {\n          sender: sender,\n          contract: contract\n        };\n      },\n      fromAmino: function fromAmino(_ref8) {\n        var sender = _ref8.sender,\n          contract = _ref8.contract;\n        return {\n          sender: sender,\n          contract: contract\n        };\n      }\n    },\n    \"/cosmwasm.wasm.v1.MsgExecuteContract\": {\n      aminoType: \"wasm/MsgExecuteContract\",\n      toAmino: function toAmino(_ref9) {\n        var sender = _ref9.sender,\n          contract = _ref9.contract,\n          msg = _ref9.msg,\n          funds = _ref9.funds;\n        return {\n          sender: sender,\n          contract: contract,\n          msg: JSON.parse((0, encoding_1.fromUtf8)(msg)),\n          funds: funds\n        };\n      },\n      fromAmino: function fromAmino(_ref10) {\n        var sender = _ref10.sender,\n          contract = _ref10.contract,\n          msg = _ref10.msg,\n          funds = _ref10.funds;\n        return {\n          sender: sender,\n          contract: contract,\n          msg: (0, encoding_1.toUtf8)(JSON.stringify(msg)),\n          funds: _toConsumableArray(funds)\n        };\n      }\n    },\n    \"/cosmwasm.wasm.v1.MsgMigrateContract\": {\n      aminoType: \"wasm/MsgMigrateContract\",\n      toAmino: function toAmino(_ref11) {\n        var sender = _ref11.sender,\n          contract = _ref11.contract,\n          codeId = _ref11.codeId,\n          msg = _ref11.msg;\n        return {\n          sender: sender,\n          contract: contract,\n          code_id: codeId.toString(),\n          msg: JSON.parse((0, encoding_1.fromUtf8)(msg))\n        };\n      },\n      fromAmino: function fromAmino(_ref12) {\n        var sender = _ref12.sender,\n          contract = _ref12.contract,\n          code_id = _ref12.code_id,\n          msg = _ref12.msg;\n        return {\n          sender: sender,\n          contract: contract,\n          codeId: long_1.default.fromString(code_id),\n          msg: (0, encoding_1.toUtf8)(JSON.stringify(msg))\n        };\n      }\n    }\n  };\n}\nexports.createWasmAminoConverters = createWasmAminoConverters;\n/** @deprecated use `createWasmAminoConverters()` */\nexports.cosmWasmTypes = createWasmAminoConverters();","map":null,"metadata":{},"sourceType":"script"}