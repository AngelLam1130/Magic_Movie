{"ast":null,"code":"\"use strict\";\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgMintResponse = exports.MsgMint = exports.MsgCreateDenomResponse = exports.MsgCreateDenom = exports.MsgChangeAdminResponse = exports.MsgChangeAdmin = exports.MsgBurnResponse = exports.MsgBurn = void 0;\nvar _coin = require(\"../../../cosmos/base/v1beta1/coin\");\nvar _m0 = _interopRequireWildcard(require(\"protobufjs/minimal\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj[\"default\"] = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction createBaseMsgCreateDenom() {\n  return {\n    sender: \"\",\n    subdenom: \"\"\n  };\n}\nvar MsgCreateDenom = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.sender !== \"\") {\n      writer.uint32(10).string(message.sender);\n    }\n    if (message.subdenom !== \"\") {\n      writer.uint32(18).string(message.subdenom);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgCreateDenom();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.sender = reader.string();\n          break;\n        case 2:\n          message.subdenom = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$sender, _object$subdenom;\n    var message = createBaseMsgCreateDenom();\n    message.sender = (_object$sender = object.sender) !== null && _object$sender !== void 0 ? _object$sender : \"\";\n    message.subdenom = (_object$subdenom = object.subdenom) !== null && _object$subdenom !== void 0 ? _object$subdenom : \"\";\n    return message;\n  }\n};\nexports.MsgCreateDenom = MsgCreateDenom;\nfunction createBaseMsgCreateDenomResponse() {\n  return {\n    newTokenDenom: \"\"\n  };\n}\nvar MsgCreateDenomResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.newTokenDenom !== \"\") {\n      writer.uint32(10).string(message.newTokenDenom);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgCreateDenomResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.newTokenDenom = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$newTokenDenom;\n    var message = createBaseMsgCreateDenomResponse();\n    message.newTokenDenom = (_object$newTokenDenom = object.newTokenDenom) !== null && _object$newTokenDenom !== void 0 ? _object$newTokenDenom : \"\";\n    return message;\n  }\n};\nexports.MsgCreateDenomResponse = MsgCreateDenomResponse;\nfunction createBaseMsgMint() {\n  return {\n    sender: \"\",\n    amount: undefined\n  };\n}\nvar MsgMint = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.sender !== \"\") {\n      writer.uint32(10).string(message.sender);\n    }\n    if (message.amount !== undefined) {\n      _coin.Coin.encode(message.amount, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgMint();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.sender = reader.string();\n          break;\n        case 2:\n          message.amount = _coin.Coin.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$sender2;\n    var message = createBaseMsgMint();\n    message.sender = (_object$sender2 = object.sender) !== null && _object$sender2 !== void 0 ? _object$sender2 : \"\";\n    message.amount = object.amount !== undefined && object.amount !== null ? _coin.Coin.fromPartial(object.amount) : undefined;\n    return message;\n  }\n};\nexports.MsgMint = MsgMint;\nfunction createBaseMsgMintResponse() {\n  return {};\n}\nvar MsgMintResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgMintResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseMsgMintResponse();\n    return message;\n  }\n};\nexports.MsgMintResponse = MsgMintResponse;\nfunction createBaseMsgBurn() {\n  return {\n    sender: \"\",\n    amount: undefined\n  };\n}\nvar MsgBurn = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.sender !== \"\") {\n      writer.uint32(10).string(message.sender);\n    }\n    if (message.amount !== undefined) {\n      _coin.Coin.encode(message.amount, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgBurn();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.sender = reader.string();\n          break;\n        case 2:\n          message.amount = _coin.Coin.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$sender3;\n    var message = createBaseMsgBurn();\n    message.sender = (_object$sender3 = object.sender) !== null && _object$sender3 !== void 0 ? _object$sender3 : \"\";\n    message.amount = object.amount !== undefined && object.amount !== null ? _coin.Coin.fromPartial(object.amount) : undefined;\n    return message;\n  }\n};\nexports.MsgBurn = MsgBurn;\nfunction createBaseMsgBurnResponse() {\n  return {};\n}\nvar MsgBurnResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgBurnResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseMsgBurnResponse();\n    return message;\n  }\n};\nexports.MsgBurnResponse = MsgBurnResponse;\nfunction createBaseMsgChangeAdmin() {\n  return {\n    sender: \"\",\n    denom: \"\",\n    newAdmin: \"\"\n  };\n}\nvar MsgChangeAdmin = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.sender !== \"\") {\n      writer.uint32(10).string(message.sender);\n    }\n    if (message.denom !== \"\") {\n      writer.uint32(18).string(message.denom);\n    }\n    if (message.newAdmin !== \"\") {\n      writer.uint32(26).string(message.newAdmin);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgChangeAdmin();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.sender = reader.string();\n          break;\n        case 2:\n          message.denom = reader.string();\n          break;\n        case 3:\n          message.newAdmin = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$sender4, _object$denom, _object$newAdmin;\n    var message = createBaseMsgChangeAdmin();\n    message.sender = (_object$sender4 = object.sender) !== null && _object$sender4 !== void 0 ? _object$sender4 : \"\";\n    message.denom = (_object$denom = object.denom) !== null && _object$denom !== void 0 ? _object$denom : \"\";\n    message.newAdmin = (_object$newAdmin = object.newAdmin) !== null && _object$newAdmin !== void 0 ? _object$newAdmin : \"\";\n    return message;\n  }\n};\nexports.MsgChangeAdmin = MsgChangeAdmin;\nfunction createBaseMsgChangeAdminResponse() {\n  return {};\n}\nvar MsgChangeAdminResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgChangeAdminResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseMsgChangeAdminResponse();\n    return message;\n  }\n};\nexports.MsgChangeAdminResponse = MsgChangeAdminResponse;","map":null,"metadata":{},"sourceType":"script"}