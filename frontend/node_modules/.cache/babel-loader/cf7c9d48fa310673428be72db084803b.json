{"ast":null,"code":"\"use strict\";\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.QueryUnreceivedPacketsResponse = exports.QueryUnreceivedPacketsRequest = exports.QueryUnreceivedAcksResponse = exports.QueryUnreceivedAcksRequest = exports.QueryPacketReceiptResponse = exports.QueryPacketReceiptRequest = exports.QueryPacketCommitmentsResponse = exports.QueryPacketCommitmentsRequest = exports.QueryPacketCommitmentResponse = exports.QueryPacketCommitmentRequest = exports.QueryPacketAcknowledgementsResponse = exports.QueryPacketAcknowledgementsRequest = exports.QueryPacketAcknowledgementResponse = exports.QueryPacketAcknowledgementRequest = exports.QueryNextSequenceReceiveResponse = exports.QueryNextSequenceReceiveRequest = exports.QueryConnectionChannelsResponse = exports.QueryConnectionChannelsRequest = exports.QueryChannelsResponse = exports.QueryChannelsRequest = exports.QueryChannelResponse = exports.QueryChannelRequest = exports.QueryChannelConsensusStateResponse = exports.QueryChannelConsensusStateRequest = exports.QueryChannelClientStateResponse = exports.QueryChannelClientStateRequest = void 0;\nvar _pagination = require(\"../../../../cosmos/base/query/v1beta1/pagination\");\nvar _channel = require(\"./channel\");\nvar _client = require(\"../../client/v1/client\");\nvar _any = require(\"../../../../google/protobuf/any\");\nvar _helpers = require(\"../../../../helpers\");\nvar _m0 = _interopRequireWildcard(require(\"protobufjs/minimal\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj[\"default\"] = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction createBaseQueryChannelRequest() {\n  return {\n    portId: \"\",\n    channelId: \"\"\n  };\n}\nvar QueryChannelRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryChannelRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$portId, _object$channelId;\n    var message = createBaseQueryChannelRequest();\n    message.portId = (_object$portId = object.portId) !== null && _object$portId !== void 0 ? _object$portId : \"\";\n    message.channelId = (_object$channelId = object.channelId) !== null && _object$channelId !== void 0 ? _object$channelId : \"\";\n    return message;\n  }\n};\nexports.QueryChannelRequest = QueryChannelRequest;\nfunction createBaseQueryChannelResponse() {\n  return {\n    channel: _channel.Channel.fromPartial({}),\n    proof: new Uint8Array(),\n    proofHeight: _client.Height.fromPartial({})\n  };\n}\nvar QueryChannelResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.channel !== undefined) {\n      _channel.Channel.encode(message.channel, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(18).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryChannelResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.channel = _channel.Channel.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.proof = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$proof;\n    var message = createBaseQueryChannelResponse();\n    message.channel = object.channel !== undefined && object.channel !== null ? _channel.Channel.fromPartial(object.channel) : undefined;\n    message.proof = (_object$proof = object.proof) !== null && _object$proof !== void 0 ? _object$proof : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    return message;\n  }\n};\nexports.QueryChannelResponse = QueryChannelResponse;\nfunction createBaseQueryChannelsRequest() {\n  return {\n    pagination: _pagination.PageRequest.fromPartial({})\n  };\n}\nvar QueryChannelsRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.pagination !== undefined) {\n      _pagination.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryChannelsRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.pagination = _pagination.PageRequest.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseQueryChannelsRequest();\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? _pagination.PageRequest.fromPartial(object.pagination) : undefined;\n    return message;\n  }\n};\nexports.QueryChannelsRequest = QueryChannelsRequest;\nfunction createBaseQueryChannelsResponse() {\n  return {\n    channels: [],\n    pagination: _pagination.PageResponse.fromPartial({}),\n    height: _client.Height.fromPartial({})\n  };\n}\nvar QueryChannelsResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    var _iterator = _createForOfIteratorHelper(message.channels),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        _channel.IdentifiedChannel.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    if (message.pagination !== undefined) {\n      _pagination.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.height !== undefined) {\n      _client.Height.encode(message.height, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryChannelsResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.channels.push(_channel.IdentifiedChannel.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.pagination = _pagination.PageResponse.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.height = _client.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$channels;\n    var message = createBaseQueryChannelsResponse();\n    message.channels = ((_object$channels = object.channels) === null || _object$channels === void 0 ? void 0 : _object$channels.map(function (e) {\n      return _channel.IdentifiedChannel.fromPartial(e);\n    })) || [];\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? _pagination.PageResponse.fromPartial(object.pagination) : undefined;\n    message.height = object.height !== undefined && object.height !== null ? _client.Height.fromPartial(object.height) : undefined;\n    return message;\n  }\n};\nexports.QueryChannelsResponse = QueryChannelsResponse;\nfunction createBaseQueryConnectionChannelsRequest() {\n  return {\n    connection: \"\",\n    pagination: _pagination.PageRequest.fromPartial({})\n  };\n}\nvar QueryConnectionChannelsRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.connection !== \"\") {\n      writer.uint32(10).string(message.connection);\n    }\n    if (message.pagination !== undefined) {\n      _pagination.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryConnectionChannelsRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connection = reader.string();\n          break;\n        case 2:\n          message.pagination = _pagination.PageRequest.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$connection;\n    var message = createBaseQueryConnectionChannelsRequest();\n    message.connection = (_object$connection = object.connection) !== null && _object$connection !== void 0 ? _object$connection : \"\";\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? _pagination.PageRequest.fromPartial(object.pagination) : undefined;\n    return message;\n  }\n};\nexports.QueryConnectionChannelsRequest = QueryConnectionChannelsRequest;\nfunction createBaseQueryConnectionChannelsResponse() {\n  return {\n    channels: [],\n    pagination: _pagination.PageResponse.fromPartial({}),\n    height: _client.Height.fromPartial({})\n  };\n}\nvar QueryConnectionChannelsResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    var _iterator2 = _createForOfIteratorHelper(message.channels),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var v = _step2.value;\n        _channel.IdentifiedChannel.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    if (message.pagination !== undefined) {\n      _pagination.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.height !== undefined) {\n      _client.Height.encode(message.height, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryConnectionChannelsResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.channels.push(_channel.IdentifiedChannel.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.pagination = _pagination.PageResponse.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.height = _client.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$channels2;\n    var message = createBaseQueryConnectionChannelsResponse();\n    message.channels = ((_object$channels2 = object.channels) === null || _object$channels2 === void 0 ? void 0 : _object$channels2.map(function (e) {\n      return _channel.IdentifiedChannel.fromPartial(e);\n    })) || [];\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? _pagination.PageResponse.fromPartial(object.pagination) : undefined;\n    message.height = object.height !== undefined && object.height !== null ? _client.Height.fromPartial(object.height) : undefined;\n    return message;\n  }\n};\nexports.QueryConnectionChannelsResponse = QueryConnectionChannelsResponse;\nfunction createBaseQueryChannelClientStateRequest() {\n  return {\n    portId: \"\",\n    channelId: \"\"\n  };\n}\nvar QueryChannelClientStateRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryChannelClientStateRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$portId2, _object$channelId2;\n    var message = createBaseQueryChannelClientStateRequest();\n    message.portId = (_object$portId2 = object.portId) !== null && _object$portId2 !== void 0 ? _object$portId2 : \"\";\n    message.channelId = (_object$channelId2 = object.channelId) !== null && _object$channelId2 !== void 0 ? _object$channelId2 : \"\";\n    return message;\n  }\n};\nexports.QueryChannelClientStateRequest = QueryChannelClientStateRequest;\nfunction createBaseQueryChannelClientStateResponse() {\n  return {\n    identifiedClientState: _client.IdentifiedClientState.fromPartial({}),\n    proof: new Uint8Array(),\n    proofHeight: _client.Height.fromPartial({})\n  };\n}\nvar QueryChannelClientStateResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.identifiedClientState !== undefined) {\n      _client.IdentifiedClientState.encode(message.identifiedClientState, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(18).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryChannelClientStateResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.identifiedClientState = _client.IdentifiedClientState.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.proof = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$proof2;\n    var message = createBaseQueryChannelClientStateResponse();\n    message.identifiedClientState = object.identifiedClientState !== undefined && object.identifiedClientState !== null ? _client.IdentifiedClientState.fromPartial(object.identifiedClientState) : undefined;\n    message.proof = (_object$proof2 = object.proof) !== null && _object$proof2 !== void 0 ? _object$proof2 : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    return message;\n  }\n};\nexports.QueryChannelClientStateResponse = QueryChannelClientStateResponse;\nfunction createBaseQueryChannelConsensusStateRequest() {\n  return {\n    portId: \"\",\n    channelId: \"\",\n    revisionNumber: _helpers.Long.UZERO,\n    revisionHeight: _helpers.Long.UZERO\n  };\n}\nvar QueryChannelConsensusStateRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    if (!message.revisionNumber.isZero()) {\n      writer.uint32(24).uint64(message.revisionNumber);\n    }\n    if (!message.revisionHeight.isZero()) {\n      writer.uint32(32).uint64(message.revisionHeight);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryChannelConsensusStateRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        case 3:\n          message.revisionNumber = reader.uint64();\n          break;\n        case 4:\n          message.revisionHeight = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$portId3, _object$channelId3;\n    var message = createBaseQueryChannelConsensusStateRequest();\n    message.portId = (_object$portId3 = object.portId) !== null && _object$portId3 !== void 0 ? _object$portId3 : \"\";\n    message.channelId = (_object$channelId3 = object.channelId) !== null && _object$channelId3 !== void 0 ? _object$channelId3 : \"\";\n    message.revisionNumber = object.revisionNumber !== undefined && object.revisionNumber !== null ? _helpers.Long.fromValue(object.revisionNumber) : _helpers.Long.UZERO;\n    message.revisionHeight = object.revisionHeight !== undefined && object.revisionHeight !== null ? _helpers.Long.fromValue(object.revisionHeight) : _helpers.Long.UZERO;\n    return message;\n  }\n};\nexports.QueryChannelConsensusStateRequest = QueryChannelConsensusStateRequest;\nfunction createBaseQueryChannelConsensusStateResponse() {\n  return {\n    consensusState: undefined,\n    clientId: \"\",\n    proof: new Uint8Array(),\n    proofHeight: _client.Height.fromPartial({})\n  };\n}\nvar QueryChannelConsensusStateResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.consensusState !== undefined) {\n      _any.Any.encode(message.consensusState, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.clientId !== \"\") {\n      writer.uint32(18).string(message.clientId);\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(26).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryChannelConsensusStateResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.consensusState = _any.Any.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.clientId = reader.string();\n          break;\n        case 3:\n          message.proof = reader.bytes();\n          break;\n        case 4:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$clientId, _object$proof3;\n    var message = createBaseQueryChannelConsensusStateResponse();\n    message.consensusState = object.consensusState !== undefined && object.consensusState !== null ? _any.Any.fromPartial(object.consensusState) : undefined;\n    message.clientId = (_object$clientId = object.clientId) !== null && _object$clientId !== void 0 ? _object$clientId : \"\";\n    message.proof = (_object$proof3 = object.proof) !== null && _object$proof3 !== void 0 ? _object$proof3 : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    return message;\n  }\n};\nexports.QueryChannelConsensusStateResponse = QueryChannelConsensusStateResponse;\nfunction createBaseQueryPacketCommitmentRequest() {\n  return {\n    portId: \"\",\n    channelId: \"\",\n    sequence: _helpers.Long.UZERO\n  };\n}\nvar QueryPacketCommitmentRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    if (!message.sequence.isZero()) {\n      writer.uint32(24).uint64(message.sequence);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryPacketCommitmentRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        case 3:\n          message.sequence = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$portId4, _object$channelId4;\n    var message = createBaseQueryPacketCommitmentRequest();\n    message.portId = (_object$portId4 = object.portId) !== null && _object$portId4 !== void 0 ? _object$portId4 : \"\";\n    message.channelId = (_object$channelId4 = object.channelId) !== null && _object$channelId4 !== void 0 ? _object$channelId4 : \"\";\n    message.sequence = object.sequence !== undefined && object.sequence !== null ? _helpers.Long.fromValue(object.sequence) : _helpers.Long.UZERO;\n    return message;\n  }\n};\nexports.QueryPacketCommitmentRequest = QueryPacketCommitmentRequest;\nfunction createBaseQueryPacketCommitmentResponse() {\n  return {\n    commitment: new Uint8Array(),\n    proof: new Uint8Array(),\n    proofHeight: _client.Height.fromPartial({})\n  };\n}\nvar QueryPacketCommitmentResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.commitment.length !== 0) {\n      writer.uint32(10).bytes(message.commitment);\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(18).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryPacketCommitmentResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.commitment = reader.bytes();\n          break;\n        case 2:\n          message.proof = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$commitment, _object$proof4;\n    var message = createBaseQueryPacketCommitmentResponse();\n    message.commitment = (_object$commitment = object.commitment) !== null && _object$commitment !== void 0 ? _object$commitment : new Uint8Array();\n    message.proof = (_object$proof4 = object.proof) !== null && _object$proof4 !== void 0 ? _object$proof4 : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    return message;\n  }\n};\nexports.QueryPacketCommitmentResponse = QueryPacketCommitmentResponse;\nfunction createBaseQueryPacketCommitmentsRequest() {\n  return {\n    portId: \"\",\n    channelId: \"\",\n    pagination: _pagination.PageRequest.fromPartial({})\n  };\n}\nvar QueryPacketCommitmentsRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    if (message.pagination !== undefined) {\n      _pagination.PageRequest.encode(message.pagination, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryPacketCommitmentsRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        case 3:\n          message.pagination = _pagination.PageRequest.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$portId5, _object$channelId5;\n    var message = createBaseQueryPacketCommitmentsRequest();\n    message.portId = (_object$portId5 = object.portId) !== null && _object$portId5 !== void 0 ? _object$portId5 : \"\";\n    message.channelId = (_object$channelId5 = object.channelId) !== null && _object$channelId5 !== void 0 ? _object$channelId5 : \"\";\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? _pagination.PageRequest.fromPartial(object.pagination) : undefined;\n    return message;\n  }\n};\nexports.QueryPacketCommitmentsRequest = QueryPacketCommitmentsRequest;\nfunction createBaseQueryPacketCommitmentsResponse() {\n  return {\n    commitments: [],\n    pagination: _pagination.PageResponse.fromPartial({}),\n    height: _client.Height.fromPartial({})\n  };\n}\nvar QueryPacketCommitmentsResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    var _iterator3 = _createForOfIteratorHelper(message.commitments),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var v = _step3.value;\n        _channel.PacketState.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    if (message.pagination !== undefined) {\n      _pagination.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.height !== undefined) {\n      _client.Height.encode(message.height, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryPacketCommitmentsResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.commitments.push(_channel.PacketState.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.pagination = _pagination.PageResponse.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.height = _client.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$commitments;\n    var message = createBaseQueryPacketCommitmentsResponse();\n    message.commitments = ((_object$commitments = object.commitments) === null || _object$commitments === void 0 ? void 0 : _object$commitments.map(function (e) {\n      return _channel.PacketState.fromPartial(e);\n    })) || [];\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? _pagination.PageResponse.fromPartial(object.pagination) : undefined;\n    message.height = object.height !== undefined && object.height !== null ? _client.Height.fromPartial(object.height) : undefined;\n    return message;\n  }\n};\nexports.QueryPacketCommitmentsResponse = QueryPacketCommitmentsResponse;\nfunction createBaseQueryPacketReceiptRequest() {\n  return {\n    portId: \"\",\n    channelId: \"\",\n    sequence: _helpers.Long.UZERO\n  };\n}\nvar QueryPacketReceiptRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    if (!message.sequence.isZero()) {\n      writer.uint32(24).uint64(message.sequence);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryPacketReceiptRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        case 3:\n          message.sequence = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$portId6, _object$channelId6;\n    var message = createBaseQueryPacketReceiptRequest();\n    message.portId = (_object$portId6 = object.portId) !== null && _object$portId6 !== void 0 ? _object$portId6 : \"\";\n    message.channelId = (_object$channelId6 = object.channelId) !== null && _object$channelId6 !== void 0 ? _object$channelId6 : \"\";\n    message.sequence = object.sequence !== undefined && object.sequence !== null ? _helpers.Long.fromValue(object.sequence) : _helpers.Long.UZERO;\n    return message;\n  }\n};\nexports.QueryPacketReceiptRequest = QueryPacketReceiptRequest;\nfunction createBaseQueryPacketReceiptResponse() {\n  return {\n    received: false,\n    proof: new Uint8Array(),\n    proofHeight: _client.Height.fromPartial({})\n  };\n}\nvar QueryPacketReceiptResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.received === true) {\n      writer.uint32(16).bool(message.received);\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(26).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryPacketReceiptResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 2:\n          message.received = reader.bool();\n          break;\n        case 3:\n          message.proof = reader.bytes();\n          break;\n        case 4:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$received, _object$proof5;\n    var message = createBaseQueryPacketReceiptResponse();\n    message.received = (_object$received = object.received) !== null && _object$received !== void 0 ? _object$received : false;\n    message.proof = (_object$proof5 = object.proof) !== null && _object$proof5 !== void 0 ? _object$proof5 : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    return message;\n  }\n};\nexports.QueryPacketReceiptResponse = QueryPacketReceiptResponse;\nfunction createBaseQueryPacketAcknowledgementRequest() {\n  return {\n    portId: \"\",\n    channelId: \"\",\n    sequence: _helpers.Long.UZERO\n  };\n}\nvar QueryPacketAcknowledgementRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    if (!message.sequence.isZero()) {\n      writer.uint32(24).uint64(message.sequence);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryPacketAcknowledgementRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        case 3:\n          message.sequence = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$portId7, _object$channelId7;\n    var message = createBaseQueryPacketAcknowledgementRequest();\n    message.portId = (_object$portId7 = object.portId) !== null && _object$portId7 !== void 0 ? _object$portId7 : \"\";\n    message.channelId = (_object$channelId7 = object.channelId) !== null && _object$channelId7 !== void 0 ? _object$channelId7 : \"\";\n    message.sequence = object.sequence !== undefined && object.sequence !== null ? _helpers.Long.fromValue(object.sequence) : _helpers.Long.UZERO;\n    return message;\n  }\n};\nexports.QueryPacketAcknowledgementRequest = QueryPacketAcknowledgementRequest;\nfunction createBaseQueryPacketAcknowledgementResponse() {\n  return {\n    acknowledgement: new Uint8Array(),\n    proof: new Uint8Array(),\n    proofHeight: _client.Height.fromPartial({})\n  };\n}\nvar QueryPacketAcknowledgementResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.acknowledgement.length !== 0) {\n      writer.uint32(10).bytes(message.acknowledgement);\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(18).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryPacketAcknowledgementResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.acknowledgement = reader.bytes();\n          break;\n        case 2:\n          message.proof = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$acknowledgeme, _object$proof6;\n    var message = createBaseQueryPacketAcknowledgementResponse();\n    message.acknowledgement = (_object$acknowledgeme = object.acknowledgement) !== null && _object$acknowledgeme !== void 0 ? _object$acknowledgeme : new Uint8Array();\n    message.proof = (_object$proof6 = object.proof) !== null && _object$proof6 !== void 0 ? _object$proof6 : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    return message;\n  }\n};\nexports.QueryPacketAcknowledgementResponse = QueryPacketAcknowledgementResponse;\nfunction createBaseQueryPacketAcknowledgementsRequest() {\n  return {\n    portId: \"\",\n    channelId: \"\",\n    pagination: _pagination.PageRequest.fromPartial({}),\n    packetCommitmentSequences: []\n  };\n}\nvar QueryPacketAcknowledgementsRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    if (message.pagination !== undefined) {\n      _pagination.PageRequest.encode(message.pagination, writer.uint32(26).fork()).ldelim();\n    }\n    writer.uint32(34).fork();\n    var _iterator4 = _createForOfIteratorHelper(message.packetCommitmentSequences),\n      _step4;\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var v = _step4.value;\n        writer.uint64(v);\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n    writer.ldelim();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryPacketAcknowledgementsRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        case 3:\n          message.pagination = _pagination.PageRequest.decode(reader, reader.uint32());\n          break;\n        case 4:\n          if ((tag & 7) === 2) {\n            var end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.packetCommitmentSequences.push(reader.uint64());\n            }\n          } else {\n            message.packetCommitmentSequences.push(reader.uint64());\n          }\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$portId8, _object$channelId8, _object$packetCommitm;\n    var message = createBaseQueryPacketAcknowledgementsRequest();\n    message.portId = (_object$portId8 = object.portId) !== null && _object$portId8 !== void 0 ? _object$portId8 : \"\";\n    message.channelId = (_object$channelId8 = object.channelId) !== null && _object$channelId8 !== void 0 ? _object$channelId8 : \"\";\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? _pagination.PageRequest.fromPartial(object.pagination) : undefined;\n    message.packetCommitmentSequences = ((_object$packetCommitm = object.packetCommitmentSequences) === null || _object$packetCommitm === void 0 ? void 0 : _object$packetCommitm.map(function (e) {\n      return _helpers.Long.fromValue(e);\n    })) || [];\n    return message;\n  }\n};\nexports.QueryPacketAcknowledgementsRequest = QueryPacketAcknowledgementsRequest;\nfunction createBaseQueryPacketAcknowledgementsResponse() {\n  return {\n    acknowledgements: [],\n    pagination: _pagination.PageResponse.fromPartial({}),\n    height: _client.Height.fromPartial({})\n  };\n}\nvar QueryPacketAcknowledgementsResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    var _iterator5 = _createForOfIteratorHelper(message.acknowledgements),\n      _step5;\n    try {\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        var v = _step5.value;\n        _channel.PacketState.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n    if (message.pagination !== undefined) {\n      _pagination.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.height !== undefined) {\n      _client.Height.encode(message.height, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryPacketAcknowledgementsResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.acknowledgements.push(_channel.PacketState.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.pagination = _pagination.PageResponse.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.height = _client.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$acknowledgeme2;\n    var message = createBaseQueryPacketAcknowledgementsResponse();\n    message.acknowledgements = ((_object$acknowledgeme2 = object.acknowledgements) === null || _object$acknowledgeme2 === void 0 ? void 0 : _object$acknowledgeme2.map(function (e) {\n      return _channel.PacketState.fromPartial(e);\n    })) || [];\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? _pagination.PageResponse.fromPartial(object.pagination) : undefined;\n    message.height = object.height !== undefined && object.height !== null ? _client.Height.fromPartial(object.height) : undefined;\n    return message;\n  }\n};\nexports.QueryPacketAcknowledgementsResponse = QueryPacketAcknowledgementsResponse;\nfunction createBaseQueryUnreceivedPacketsRequest() {\n  return {\n    portId: \"\",\n    channelId: \"\",\n    packetCommitmentSequences: []\n  };\n}\nvar QueryUnreceivedPacketsRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    writer.uint32(26).fork();\n    var _iterator6 = _createForOfIteratorHelper(message.packetCommitmentSequences),\n      _step6;\n    try {\n      for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n        var v = _step6.value;\n        writer.uint64(v);\n      }\n    } catch (err) {\n      _iterator6.e(err);\n    } finally {\n      _iterator6.f();\n    }\n    writer.ldelim();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryUnreceivedPacketsRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        case 3:\n          if ((tag & 7) === 2) {\n            var end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.packetCommitmentSequences.push(reader.uint64());\n            }\n          } else {\n            message.packetCommitmentSequences.push(reader.uint64());\n          }\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$portId9, _object$channelId9, _object$packetCommitm2;\n    var message = createBaseQueryUnreceivedPacketsRequest();\n    message.portId = (_object$portId9 = object.portId) !== null && _object$portId9 !== void 0 ? _object$portId9 : \"\";\n    message.channelId = (_object$channelId9 = object.channelId) !== null && _object$channelId9 !== void 0 ? _object$channelId9 : \"\";\n    message.packetCommitmentSequences = ((_object$packetCommitm2 = object.packetCommitmentSequences) === null || _object$packetCommitm2 === void 0 ? void 0 : _object$packetCommitm2.map(function (e) {\n      return _helpers.Long.fromValue(e);\n    })) || [];\n    return message;\n  }\n};\nexports.QueryUnreceivedPacketsRequest = QueryUnreceivedPacketsRequest;\nfunction createBaseQueryUnreceivedPacketsResponse() {\n  return {\n    sequences: [],\n    height: _client.Height.fromPartial({})\n  };\n}\nvar QueryUnreceivedPacketsResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    writer.uint32(10).fork();\n    var _iterator7 = _createForOfIteratorHelper(message.sequences),\n      _step7;\n    try {\n      for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n        var v = _step7.value;\n        writer.uint64(v);\n      }\n    } catch (err) {\n      _iterator7.e(err);\n    } finally {\n      _iterator7.f();\n    }\n    writer.ldelim();\n    if (message.height !== undefined) {\n      _client.Height.encode(message.height, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryUnreceivedPacketsResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if ((tag & 7) === 2) {\n            var end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.sequences.push(reader.uint64());\n            }\n          } else {\n            message.sequences.push(reader.uint64());\n          }\n          break;\n        case 2:\n          message.height = _client.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$sequences;\n    var message = createBaseQueryUnreceivedPacketsResponse();\n    message.sequences = ((_object$sequences = object.sequences) === null || _object$sequences === void 0 ? void 0 : _object$sequences.map(function (e) {\n      return _helpers.Long.fromValue(e);\n    })) || [];\n    message.height = object.height !== undefined && object.height !== null ? _client.Height.fromPartial(object.height) : undefined;\n    return message;\n  }\n};\nexports.QueryUnreceivedPacketsResponse = QueryUnreceivedPacketsResponse;\nfunction createBaseQueryUnreceivedAcksRequest() {\n  return {\n    portId: \"\",\n    channelId: \"\",\n    packetAckSequences: []\n  };\n}\nvar QueryUnreceivedAcksRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    writer.uint32(26).fork();\n    var _iterator8 = _createForOfIteratorHelper(message.packetAckSequences),\n      _step8;\n    try {\n      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n        var v = _step8.value;\n        writer.uint64(v);\n      }\n    } catch (err) {\n      _iterator8.e(err);\n    } finally {\n      _iterator8.f();\n    }\n    writer.ldelim();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryUnreceivedAcksRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        case 3:\n          if ((tag & 7) === 2) {\n            var end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.packetAckSequences.push(reader.uint64());\n            }\n          } else {\n            message.packetAckSequences.push(reader.uint64());\n          }\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$portId10, _object$channelId10, _object$packetAckSequ;\n    var message = createBaseQueryUnreceivedAcksRequest();\n    message.portId = (_object$portId10 = object.portId) !== null && _object$portId10 !== void 0 ? _object$portId10 : \"\";\n    message.channelId = (_object$channelId10 = object.channelId) !== null && _object$channelId10 !== void 0 ? _object$channelId10 : \"\";\n    message.packetAckSequences = ((_object$packetAckSequ = object.packetAckSequences) === null || _object$packetAckSequ === void 0 ? void 0 : _object$packetAckSequ.map(function (e) {\n      return _helpers.Long.fromValue(e);\n    })) || [];\n    return message;\n  }\n};\nexports.QueryUnreceivedAcksRequest = QueryUnreceivedAcksRequest;\nfunction createBaseQueryUnreceivedAcksResponse() {\n  return {\n    sequences: [],\n    height: _client.Height.fromPartial({})\n  };\n}\nvar QueryUnreceivedAcksResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    writer.uint32(10).fork();\n    var _iterator9 = _createForOfIteratorHelper(message.sequences),\n      _step9;\n    try {\n      for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n        var v = _step9.value;\n        writer.uint64(v);\n      }\n    } catch (err) {\n      _iterator9.e(err);\n    } finally {\n      _iterator9.f();\n    }\n    writer.ldelim();\n    if (message.height !== undefined) {\n      _client.Height.encode(message.height, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryUnreceivedAcksResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if ((tag & 7) === 2) {\n            var end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.sequences.push(reader.uint64());\n            }\n          } else {\n            message.sequences.push(reader.uint64());\n          }\n          break;\n        case 2:\n          message.height = _client.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$sequences2;\n    var message = createBaseQueryUnreceivedAcksResponse();\n    message.sequences = ((_object$sequences2 = object.sequences) === null || _object$sequences2 === void 0 ? void 0 : _object$sequences2.map(function (e) {\n      return _helpers.Long.fromValue(e);\n    })) || [];\n    message.height = object.height !== undefined && object.height !== null ? _client.Height.fromPartial(object.height) : undefined;\n    return message;\n  }\n};\nexports.QueryUnreceivedAcksResponse = QueryUnreceivedAcksResponse;\nfunction createBaseQueryNextSequenceReceiveRequest() {\n  return {\n    portId: \"\",\n    channelId: \"\"\n  };\n}\nvar QueryNextSequenceReceiveRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryNextSequenceReceiveRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$portId11, _object$channelId11;\n    var message = createBaseQueryNextSequenceReceiveRequest();\n    message.portId = (_object$portId11 = object.portId) !== null && _object$portId11 !== void 0 ? _object$portId11 : \"\";\n    message.channelId = (_object$channelId11 = object.channelId) !== null && _object$channelId11 !== void 0 ? _object$channelId11 : \"\";\n    return message;\n  }\n};\nexports.QueryNextSequenceReceiveRequest = QueryNextSequenceReceiveRequest;\nfunction createBaseQueryNextSequenceReceiveResponse() {\n  return {\n    nextSequenceReceive: _helpers.Long.UZERO,\n    proof: new Uint8Array(),\n    proofHeight: _client.Height.fromPartial({})\n  };\n}\nvar QueryNextSequenceReceiveResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (!message.nextSequenceReceive.isZero()) {\n      writer.uint32(8).uint64(message.nextSequenceReceive);\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(18).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryNextSequenceReceiveResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.nextSequenceReceive = reader.uint64();\n          break;\n        case 2:\n          message.proof = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$proof7;\n    var message = createBaseQueryNextSequenceReceiveResponse();\n    message.nextSequenceReceive = object.nextSequenceReceive !== undefined && object.nextSequenceReceive !== null ? _helpers.Long.fromValue(object.nextSequenceReceive) : _helpers.Long.UZERO;\n    message.proof = (_object$proof7 = object.proof) !== null && _object$proof7 !== void 0 ? _object$proof7 : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    return message;\n  }\n};\nexports.QueryNextSequenceReceiveResponse = QueryNextSequenceReceiveResponse;","map":{"version":3,"names":["_typeof","require","Object","defineProperty","exports","value","QueryUnreceivedPacketsResponse","QueryUnreceivedPacketsRequest","QueryUnreceivedAcksResponse","QueryUnreceivedAcksRequest","QueryPacketReceiptResponse","QueryPacketReceiptRequest","QueryPacketCommitmentsResponse","QueryPacketCommitmentsRequest","QueryPacketCommitmentResponse","QueryPacketCommitmentRequest","QueryPacketAcknowledgementsResponse","QueryPacketAcknowledgementsRequest","QueryPacketAcknowledgementResponse","QueryPacketAcknowledgementRequest","QueryNextSequenceReceiveResponse","QueryNextSequenceReceiveRequest","QueryConnectionChannelsResponse","QueryConnectionChannelsRequest","QueryChannelsResponse","QueryChannelsRequest","QueryChannelResponse","QueryChannelRequest","QueryChannelConsensusStateResponse","QueryChannelConsensusStateRequest","QueryChannelClientStateResponse","QueryChannelClientStateRequest","_pagination","_channel","_client","_any","_helpers","_m0","_interopRequireWildcard","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","e","_e","f","TypeError","normalCompletion","didErr","err","step","next","_e2","minLen","_arrayLikeToArray","toString","slice","constructor","name","from","test","arr","len","arr2","createBaseQueryChannelRequest","portId","channelId","encode","message","writer","arguments","undefined","Writer","create","uint32","string","decode","input","reader","Reader","end","pos","tag","skipType","fromPartial","object","_object$portId","_object$channelId","createBaseQueryChannelResponse","channel","Channel","proof","Uint8Array","proofHeight","Height","fork","ldelim","bytes","_object$proof","createBaseQueryChannelsRequest","pagination","PageRequest","createBaseQueryChannelsResponse","channels","PageResponse","height","_iterator","_step","v","IdentifiedChannel","push","_object$channels","map","createBaseQueryConnectionChannelsRequest","connection","_object$connection","createBaseQueryConnectionChannelsResponse","_iterator2","_step2","_object$channels2","createBaseQueryChannelClientStateRequest","_object$portId2","_object$channelId2","createBaseQueryChannelClientStateResponse","identifiedClientState","IdentifiedClientState","_object$proof2","createBaseQueryChannelConsensusStateRequest","revisionNumber","Long","UZERO","revisionHeight","isZero","uint64","_object$portId3","_object$channelId3","fromValue","createBaseQueryChannelConsensusStateResponse","consensusState","clientId","Any","_object$clientId","_object$proof3","createBaseQueryPacketCommitmentRequest","sequence","_object$portId4","_object$channelId4","createBaseQueryPacketCommitmentResponse","commitment","_object$commitment","_object$proof4","createBaseQueryPacketCommitmentsRequest","_object$portId5","_object$channelId5","createBaseQueryPacketCommitmentsResponse","commitments","_iterator3","_step3","PacketState","_object$commitments","createBaseQueryPacketReceiptRequest","_object$portId6","_object$channelId6","createBaseQueryPacketReceiptResponse","received","bool","_object$received","_object$proof5","createBaseQueryPacketAcknowledgementRequest","_object$portId7","_object$channelId7","createBaseQueryPacketAcknowledgementResponse","acknowledgement","_object$acknowledgeme","_object$proof6","createBaseQueryPacketAcknowledgementsRequest","packetCommitmentSequences","_iterator4","_step4","end2","_object$portId8","_object$channelId8","_object$packetCommitm","createBaseQueryPacketAcknowledgementsResponse","acknowledgements","_iterator5","_step5","_object$acknowledgeme2","createBaseQueryUnreceivedPacketsRequest","_iterator6","_step6","_object$portId9","_object$channelId9","_object$packetCommitm2","createBaseQueryUnreceivedPacketsResponse","sequences","_iterator7","_step7","_object$sequences","createBaseQueryUnreceivedAcksRequest","packetAckSequences","_iterator8","_step8","_object$portId10","_object$channelId10","_object$packetAckSequ","createBaseQueryUnreceivedAcksResponse","_iterator9","_step9","_object$sequences2","createBaseQueryNextSequenceReceiveRequest","_object$portId11","_object$channelId11","createBaseQueryNextSequenceReceiveResponse","nextSequenceReceive","_object$proof7"],"sources":["/Users/linanqi/Hackathon/Magic-Movie/frontend/node_modules/@sei-js/proto/main/codegen/ibc/core/channel/v1/query.js"],"sourcesContent":["\"use strict\";\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.QueryUnreceivedPacketsResponse = exports.QueryUnreceivedPacketsRequest = exports.QueryUnreceivedAcksResponse = exports.QueryUnreceivedAcksRequest = exports.QueryPacketReceiptResponse = exports.QueryPacketReceiptRequest = exports.QueryPacketCommitmentsResponse = exports.QueryPacketCommitmentsRequest = exports.QueryPacketCommitmentResponse = exports.QueryPacketCommitmentRequest = exports.QueryPacketAcknowledgementsResponse = exports.QueryPacketAcknowledgementsRequest = exports.QueryPacketAcknowledgementResponse = exports.QueryPacketAcknowledgementRequest = exports.QueryNextSequenceReceiveResponse = exports.QueryNextSequenceReceiveRequest = exports.QueryConnectionChannelsResponse = exports.QueryConnectionChannelsRequest = exports.QueryChannelsResponse = exports.QueryChannelsRequest = exports.QueryChannelResponse = exports.QueryChannelRequest = exports.QueryChannelConsensusStateResponse = exports.QueryChannelConsensusStateRequest = exports.QueryChannelClientStateResponse = exports.QueryChannelClientStateRequest = void 0;\nvar _pagination = require(\"../../../../cosmos/base/query/v1beta1/pagination\");\nvar _channel = require(\"./channel\");\nvar _client = require(\"../../client/v1/client\");\nvar _any = require(\"../../../../google/protobuf/any\");\nvar _helpers = require(\"../../../../helpers\");\nvar _m0 = _interopRequireWildcard(require(\"protobufjs/minimal\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction createBaseQueryChannelRequest() {\n  return {\n    portId: \"\",\n    channelId: \"\"\n  };\n}\nvar QueryChannelRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryChannelRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$portId, _object$channelId;\n    var message = createBaseQueryChannelRequest();\n    message.portId = (_object$portId = object.portId) !== null && _object$portId !== void 0 ? _object$portId : \"\";\n    message.channelId = (_object$channelId = object.channelId) !== null && _object$channelId !== void 0 ? _object$channelId : \"\";\n    return message;\n  }\n};\nexports.QueryChannelRequest = QueryChannelRequest;\nfunction createBaseQueryChannelResponse() {\n  return {\n    channel: _channel.Channel.fromPartial({}),\n    proof: new Uint8Array(),\n    proofHeight: _client.Height.fromPartial({})\n  };\n}\nvar QueryChannelResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.channel !== undefined) {\n      _channel.Channel.encode(message.channel, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(18).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryChannelResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.channel = _channel.Channel.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.proof = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$proof;\n    var message = createBaseQueryChannelResponse();\n    message.channel = object.channel !== undefined && object.channel !== null ? _channel.Channel.fromPartial(object.channel) : undefined;\n    message.proof = (_object$proof = object.proof) !== null && _object$proof !== void 0 ? _object$proof : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    return message;\n  }\n};\nexports.QueryChannelResponse = QueryChannelResponse;\nfunction createBaseQueryChannelsRequest() {\n  return {\n    pagination: _pagination.PageRequest.fromPartial({})\n  };\n}\nvar QueryChannelsRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.pagination !== undefined) {\n      _pagination.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryChannelsRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.pagination = _pagination.PageRequest.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseQueryChannelsRequest();\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? _pagination.PageRequest.fromPartial(object.pagination) : undefined;\n    return message;\n  }\n};\nexports.QueryChannelsRequest = QueryChannelsRequest;\nfunction createBaseQueryChannelsResponse() {\n  return {\n    channels: [],\n    pagination: _pagination.PageResponse.fromPartial({}),\n    height: _client.Height.fromPartial({})\n  };\n}\nvar QueryChannelsResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    var _iterator = _createForOfIteratorHelper(message.channels),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        _channel.IdentifiedChannel.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    if (message.pagination !== undefined) {\n      _pagination.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.height !== undefined) {\n      _client.Height.encode(message.height, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryChannelsResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.channels.push(_channel.IdentifiedChannel.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.pagination = _pagination.PageResponse.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.height = _client.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$channels;\n    var message = createBaseQueryChannelsResponse();\n    message.channels = ((_object$channels = object.channels) === null || _object$channels === void 0 ? void 0 : _object$channels.map(function (e) {\n      return _channel.IdentifiedChannel.fromPartial(e);\n    })) || [];\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? _pagination.PageResponse.fromPartial(object.pagination) : undefined;\n    message.height = object.height !== undefined && object.height !== null ? _client.Height.fromPartial(object.height) : undefined;\n    return message;\n  }\n};\nexports.QueryChannelsResponse = QueryChannelsResponse;\nfunction createBaseQueryConnectionChannelsRequest() {\n  return {\n    connection: \"\",\n    pagination: _pagination.PageRequest.fromPartial({})\n  };\n}\nvar QueryConnectionChannelsRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.connection !== \"\") {\n      writer.uint32(10).string(message.connection);\n    }\n    if (message.pagination !== undefined) {\n      _pagination.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryConnectionChannelsRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connection = reader.string();\n          break;\n        case 2:\n          message.pagination = _pagination.PageRequest.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$connection;\n    var message = createBaseQueryConnectionChannelsRequest();\n    message.connection = (_object$connection = object.connection) !== null && _object$connection !== void 0 ? _object$connection : \"\";\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? _pagination.PageRequest.fromPartial(object.pagination) : undefined;\n    return message;\n  }\n};\nexports.QueryConnectionChannelsRequest = QueryConnectionChannelsRequest;\nfunction createBaseQueryConnectionChannelsResponse() {\n  return {\n    channels: [],\n    pagination: _pagination.PageResponse.fromPartial({}),\n    height: _client.Height.fromPartial({})\n  };\n}\nvar QueryConnectionChannelsResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    var _iterator2 = _createForOfIteratorHelper(message.channels),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var v = _step2.value;\n        _channel.IdentifiedChannel.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    if (message.pagination !== undefined) {\n      _pagination.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.height !== undefined) {\n      _client.Height.encode(message.height, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryConnectionChannelsResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.channels.push(_channel.IdentifiedChannel.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.pagination = _pagination.PageResponse.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.height = _client.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$channels2;\n    var message = createBaseQueryConnectionChannelsResponse();\n    message.channels = ((_object$channels2 = object.channels) === null || _object$channels2 === void 0 ? void 0 : _object$channels2.map(function (e) {\n      return _channel.IdentifiedChannel.fromPartial(e);\n    })) || [];\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? _pagination.PageResponse.fromPartial(object.pagination) : undefined;\n    message.height = object.height !== undefined && object.height !== null ? _client.Height.fromPartial(object.height) : undefined;\n    return message;\n  }\n};\nexports.QueryConnectionChannelsResponse = QueryConnectionChannelsResponse;\nfunction createBaseQueryChannelClientStateRequest() {\n  return {\n    portId: \"\",\n    channelId: \"\"\n  };\n}\nvar QueryChannelClientStateRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryChannelClientStateRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$portId2, _object$channelId2;\n    var message = createBaseQueryChannelClientStateRequest();\n    message.portId = (_object$portId2 = object.portId) !== null && _object$portId2 !== void 0 ? _object$portId2 : \"\";\n    message.channelId = (_object$channelId2 = object.channelId) !== null && _object$channelId2 !== void 0 ? _object$channelId2 : \"\";\n    return message;\n  }\n};\nexports.QueryChannelClientStateRequest = QueryChannelClientStateRequest;\nfunction createBaseQueryChannelClientStateResponse() {\n  return {\n    identifiedClientState: _client.IdentifiedClientState.fromPartial({}),\n    proof: new Uint8Array(),\n    proofHeight: _client.Height.fromPartial({})\n  };\n}\nvar QueryChannelClientStateResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.identifiedClientState !== undefined) {\n      _client.IdentifiedClientState.encode(message.identifiedClientState, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(18).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryChannelClientStateResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.identifiedClientState = _client.IdentifiedClientState.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.proof = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$proof2;\n    var message = createBaseQueryChannelClientStateResponse();\n    message.identifiedClientState = object.identifiedClientState !== undefined && object.identifiedClientState !== null ? _client.IdentifiedClientState.fromPartial(object.identifiedClientState) : undefined;\n    message.proof = (_object$proof2 = object.proof) !== null && _object$proof2 !== void 0 ? _object$proof2 : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    return message;\n  }\n};\nexports.QueryChannelClientStateResponse = QueryChannelClientStateResponse;\nfunction createBaseQueryChannelConsensusStateRequest() {\n  return {\n    portId: \"\",\n    channelId: \"\",\n    revisionNumber: _helpers.Long.UZERO,\n    revisionHeight: _helpers.Long.UZERO\n  };\n}\nvar QueryChannelConsensusStateRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    if (!message.revisionNumber.isZero()) {\n      writer.uint32(24).uint64(message.revisionNumber);\n    }\n    if (!message.revisionHeight.isZero()) {\n      writer.uint32(32).uint64(message.revisionHeight);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryChannelConsensusStateRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        case 3:\n          message.revisionNumber = reader.uint64();\n          break;\n        case 4:\n          message.revisionHeight = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$portId3, _object$channelId3;\n    var message = createBaseQueryChannelConsensusStateRequest();\n    message.portId = (_object$portId3 = object.portId) !== null && _object$portId3 !== void 0 ? _object$portId3 : \"\";\n    message.channelId = (_object$channelId3 = object.channelId) !== null && _object$channelId3 !== void 0 ? _object$channelId3 : \"\";\n    message.revisionNumber = object.revisionNumber !== undefined && object.revisionNumber !== null ? _helpers.Long.fromValue(object.revisionNumber) : _helpers.Long.UZERO;\n    message.revisionHeight = object.revisionHeight !== undefined && object.revisionHeight !== null ? _helpers.Long.fromValue(object.revisionHeight) : _helpers.Long.UZERO;\n    return message;\n  }\n};\nexports.QueryChannelConsensusStateRequest = QueryChannelConsensusStateRequest;\nfunction createBaseQueryChannelConsensusStateResponse() {\n  return {\n    consensusState: undefined,\n    clientId: \"\",\n    proof: new Uint8Array(),\n    proofHeight: _client.Height.fromPartial({})\n  };\n}\nvar QueryChannelConsensusStateResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.consensusState !== undefined) {\n      _any.Any.encode(message.consensusState, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.clientId !== \"\") {\n      writer.uint32(18).string(message.clientId);\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(26).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryChannelConsensusStateResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.consensusState = _any.Any.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.clientId = reader.string();\n          break;\n        case 3:\n          message.proof = reader.bytes();\n          break;\n        case 4:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$clientId, _object$proof3;\n    var message = createBaseQueryChannelConsensusStateResponse();\n    message.consensusState = object.consensusState !== undefined && object.consensusState !== null ? _any.Any.fromPartial(object.consensusState) : undefined;\n    message.clientId = (_object$clientId = object.clientId) !== null && _object$clientId !== void 0 ? _object$clientId : \"\";\n    message.proof = (_object$proof3 = object.proof) !== null && _object$proof3 !== void 0 ? _object$proof3 : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    return message;\n  }\n};\nexports.QueryChannelConsensusStateResponse = QueryChannelConsensusStateResponse;\nfunction createBaseQueryPacketCommitmentRequest() {\n  return {\n    portId: \"\",\n    channelId: \"\",\n    sequence: _helpers.Long.UZERO\n  };\n}\nvar QueryPacketCommitmentRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    if (!message.sequence.isZero()) {\n      writer.uint32(24).uint64(message.sequence);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryPacketCommitmentRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        case 3:\n          message.sequence = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$portId4, _object$channelId4;\n    var message = createBaseQueryPacketCommitmentRequest();\n    message.portId = (_object$portId4 = object.portId) !== null && _object$portId4 !== void 0 ? _object$portId4 : \"\";\n    message.channelId = (_object$channelId4 = object.channelId) !== null && _object$channelId4 !== void 0 ? _object$channelId4 : \"\";\n    message.sequence = object.sequence !== undefined && object.sequence !== null ? _helpers.Long.fromValue(object.sequence) : _helpers.Long.UZERO;\n    return message;\n  }\n};\nexports.QueryPacketCommitmentRequest = QueryPacketCommitmentRequest;\nfunction createBaseQueryPacketCommitmentResponse() {\n  return {\n    commitment: new Uint8Array(),\n    proof: new Uint8Array(),\n    proofHeight: _client.Height.fromPartial({})\n  };\n}\nvar QueryPacketCommitmentResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.commitment.length !== 0) {\n      writer.uint32(10).bytes(message.commitment);\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(18).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryPacketCommitmentResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.commitment = reader.bytes();\n          break;\n        case 2:\n          message.proof = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$commitment, _object$proof4;\n    var message = createBaseQueryPacketCommitmentResponse();\n    message.commitment = (_object$commitment = object.commitment) !== null && _object$commitment !== void 0 ? _object$commitment : new Uint8Array();\n    message.proof = (_object$proof4 = object.proof) !== null && _object$proof4 !== void 0 ? _object$proof4 : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    return message;\n  }\n};\nexports.QueryPacketCommitmentResponse = QueryPacketCommitmentResponse;\nfunction createBaseQueryPacketCommitmentsRequest() {\n  return {\n    portId: \"\",\n    channelId: \"\",\n    pagination: _pagination.PageRequest.fromPartial({})\n  };\n}\nvar QueryPacketCommitmentsRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    if (message.pagination !== undefined) {\n      _pagination.PageRequest.encode(message.pagination, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryPacketCommitmentsRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        case 3:\n          message.pagination = _pagination.PageRequest.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$portId5, _object$channelId5;\n    var message = createBaseQueryPacketCommitmentsRequest();\n    message.portId = (_object$portId5 = object.portId) !== null && _object$portId5 !== void 0 ? _object$portId5 : \"\";\n    message.channelId = (_object$channelId5 = object.channelId) !== null && _object$channelId5 !== void 0 ? _object$channelId5 : \"\";\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? _pagination.PageRequest.fromPartial(object.pagination) : undefined;\n    return message;\n  }\n};\nexports.QueryPacketCommitmentsRequest = QueryPacketCommitmentsRequest;\nfunction createBaseQueryPacketCommitmentsResponse() {\n  return {\n    commitments: [],\n    pagination: _pagination.PageResponse.fromPartial({}),\n    height: _client.Height.fromPartial({})\n  };\n}\nvar QueryPacketCommitmentsResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    var _iterator3 = _createForOfIteratorHelper(message.commitments),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var v = _step3.value;\n        _channel.PacketState.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    if (message.pagination !== undefined) {\n      _pagination.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.height !== undefined) {\n      _client.Height.encode(message.height, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryPacketCommitmentsResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.commitments.push(_channel.PacketState.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.pagination = _pagination.PageResponse.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.height = _client.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$commitments;\n    var message = createBaseQueryPacketCommitmentsResponse();\n    message.commitments = ((_object$commitments = object.commitments) === null || _object$commitments === void 0 ? void 0 : _object$commitments.map(function (e) {\n      return _channel.PacketState.fromPartial(e);\n    })) || [];\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? _pagination.PageResponse.fromPartial(object.pagination) : undefined;\n    message.height = object.height !== undefined && object.height !== null ? _client.Height.fromPartial(object.height) : undefined;\n    return message;\n  }\n};\nexports.QueryPacketCommitmentsResponse = QueryPacketCommitmentsResponse;\nfunction createBaseQueryPacketReceiptRequest() {\n  return {\n    portId: \"\",\n    channelId: \"\",\n    sequence: _helpers.Long.UZERO\n  };\n}\nvar QueryPacketReceiptRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    if (!message.sequence.isZero()) {\n      writer.uint32(24).uint64(message.sequence);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryPacketReceiptRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        case 3:\n          message.sequence = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$portId6, _object$channelId6;\n    var message = createBaseQueryPacketReceiptRequest();\n    message.portId = (_object$portId6 = object.portId) !== null && _object$portId6 !== void 0 ? _object$portId6 : \"\";\n    message.channelId = (_object$channelId6 = object.channelId) !== null && _object$channelId6 !== void 0 ? _object$channelId6 : \"\";\n    message.sequence = object.sequence !== undefined && object.sequence !== null ? _helpers.Long.fromValue(object.sequence) : _helpers.Long.UZERO;\n    return message;\n  }\n};\nexports.QueryPacketReceiptRequest = QueryPacketReceiptRequest;\nfunction createBaseQueryPacketReceiptResponse() {\n  return {\n    received: false,\n    proof: new Uint8Array(),\n    proofHeight: _client.Height.fromPartial({})\n  };\n}\nvar QueryPacketReceiptResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.received === true) {\n      writer.uint32(16).bool(message.received);\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(26).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryPacketReceiptResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 2:\n          message.received = reader.bool();\n          break;\n        case 3:\n          message.proof = reader.bytes();\n          break;\n        case 4:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$received, _object$proof5;\n    var message = createBaseQueryPacketReceiptResponse();\n    message.received = (_object$received = object.received) !== null && _object$received !== void 0 ? _object$received : false;\n    message.proof = (_object$proof5 = object.proof) !== null && _object$proof5 !== void 0 ? _object$proof5 : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    return message;\n  }\n};\nexports.QueryPacketReceiptResponse = QueryPacketReceiptResponse;\nfunction createBaseQueryPacketAcknowledgementRequest() {\n  return {\n    portId: \"\",\n    channelId: \"\",\n    sequence: _helpers.Long.UZERO\n  };\n}\nvar QueryPacketAcknowledgementRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    if (!message.sequence.isZero()) {\n      writer.uint32(24).uint64(message.sequence);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryPacketAcknowledgementRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        case 3:\n          message.sequence = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$portId7, _object$channelId7;\n    var message = createBaseQueryPacketAcknowledgementRequest();\n    message.portId = (_object$portId7 = object.portId) !== null && _object$portId7 !== void 0 ? _object$portId7 : \"\";\n    message.channelId = (_object$channelId7 = object.channelId) !== null && _object$channelId7 !== void 0 ? _object$channelId7 : \"\";\n    message.sequence = object.sequence !== undefined && object.sequence !== null ? _helpers.Long.fromValue(object.sequence) : _helpers.Long.UZERO;\n    return message;\n  }\n};\nexports.QueryPacketAcknowledgementRequest = QueryPacketAcknowledgementRequest;\nfunction createBaseQueryPacketAcknowledgementResponse() {\n  return {\n    acknowledgement: new Uint8Array(),\n    proof: new Uint8Array(),\n    proofHeight: _client.Height.fromPartial({})\n  };\n}\nvar QueryPacketAcknowledgementResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.acknowledgement.length !== 0) {\n      writer.uint32(10).bytes(message.acknowledgement);\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(18).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryPacketAcknowledgementResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.acknowledgement = reader.bytes();\n          break;\n        case 2:\n          message.proof = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$acknowledgeme, _object$proof6;\n    var message = createBaseQueryPacketAcknowledgementResponse();\n    message.acknowledgement = (_object$acknowledgeme = object.acknowledgement) !== null && _object$acknowledgeme !== void 0 ? _object$acknowledgeme : new Uint8Array();\n    message.proof = (_object$proof6 = object.proof) !== null && _object$proof6 !== void 0 ? _object$proof6 : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    return message;\n  }\n};\nexports.QueryPacketAcknowledgementResponse = QueryPacketAcknowledgementResponse;\nfunction createBaseQueryPacketAcknowledgementsRequest() {\n  return {\n    portId: \"\",\n    channelId: \"\",\n    pagination: _pagination.PageRequest.fromPartial({}),\n    packetCommitmentSequences: []\n  };\n}\nvar QueryPacketAcknowledgementsRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    if (message.pagination !== undefined) {\n      _pagination.PageRequest.encode(message.pagination, writer.uint32(26).fork()).ldelim();\n    }\n    writer.uint32(34).fork();\n    var _iterator4 = _createForOfIteratorHelper(message.packetCommitmentSequences),\n      _step4;\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var v = _step4.value;\n        writer.uint64(v);\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n    writer.ldelim();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryPacketAcknowledgementsRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        case 3:\n          message.pagination = _pagination.PageRequest.decode(reader, reader.uint32());\n          break;\n        case 4:\n          if ((tag & 7) === 2) {\n            var end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.packetCommitmentSequences.push(reader.uint64());\n            }\n          } else {\n            message.packetCommitmentSequences.push(reader.uint64());\n          }\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$portId8, _object$channelId8, _object$packetCommitm;\n    var message = createBaseQueryPacketAcknowledgementsRequest();\n    message.portId = (_object$portId8 = object.portId) !== null && _object$portId8 !== void 0 ? _object$portId8 : \"\";\n    message.channelId = (_object$channelId8 = object.channelId) !== null && _object$channelId8 !== void 0 ? _object$channelId8 : \"\";\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? _pagination.PageRequest.fromPartial(object.pagination) : undefined;\n    message.packetCommitmentSequences = ((_object$packetCommitm = object.packetCommitmentSequences) === null || _object$packetCommitm === void 0 ? void 0 : _object$packetCommitm.map(function (e) {\n      return _helpers.Long.fromValue(e);\n    })) || [];\n    return message;\n  }\n};\nexports.QueryPacketAcknowledgementsRequest = QueryPacketAcknowledgementsRequest;\nfunction createBaseQueryPacketAcknowledgementsResponse() {\n  return {\n    acknowledgements: [],\n    pagination: _pagination.PageResponse.fromPartial({}),\n    height: _client.Height.fromPartial({})\n  };\n}\nvar QueryPacketAcknowledgementsResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    var _iterator5 = _createForOfIteratorHelper(message.acknowledgements),\n      _step5;\n    try {\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        var v = _step5.value;\n        _channel.PacketState.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n    if (message.pagination !== undefined) {\n      _pagination.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.height !== undefined) {\n      _client.Height.encode(message.height, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryPacketAcknowledgementsResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.acknowledgements.push(_channel.PacketState.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.pagination = _pagination.PageResponse.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.height = _client.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$acknowledgeme2;\n    var message = createBaseQueryPacketAcknowledgementsResponse();\n    message.acknowledgements = ((_object$acknowledgeme2 = object.acknowledgements) === null || _object$acknowledgeme2 === void 0 ? void 0 : _object$acknowledgeme2.map(function (e) {\n      return _channel.PacketState.fromPartial(e);\n    })) || [];\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? _pagination.PageResponse.fromPartial(object.pagination) : undefined;\n    message.height = object.height !== undefined && object.height !== null ? _client.Height.fromPartial(object.height) : undefined;\n    return message;\n  }\n};\nexports.QueryPacketAcknowledgementsResponse = QueryPacketAcknowledgementsResponse;\nfunction createBaseQueryUnreceivedPacketsRequest() {\n  return {\n    portId: \"\",\n    channelId: \"\",\n    packetCommitmentSequences: []\n  };\n}\nvar QueryUnreceivedPacketsRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    writer.uint32(26).fork();\n    var _iterator6 = _createForOfIteratorHelper(message.packetCommitmentSequences),\n      _step6;\n    try {\n      for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n        var v = _step6.value;\n        writer.uint64(v);\n      }\n    } catch (err) {\n      _iterator6.e(err);\n    } finally {\n      _iterator6.f();\n    }\n    writer.ldelim();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryUnreceivedPacketsRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        case 3:\n          if ((tag & 7) === 2) {\n            var end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.packetCommitmentSequences.push(reader.uint64());\n            }\n          } else {\n            message.packetCommitmentSequences.push(reader.uint64());\n          }\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$portId9, _object$channelId9, _object$packetCommitm2;\n    var message = createBaseQueryUnreceivedPacketsRequest();\n    message.portId = (_object$portId9 = object.portId) !== null && _object$portId9 !== void 0 ? _object$portId9 : \"\";\n    message.channelId = (_object$channelId9 = object.channelId) !== null && _object$channelId9 !== void 0 ? _object$channelId9 : \"\";\n    message.packetCommitmentSequences = ((_object$packetCommitm2 = object.packetCommitmentSequences) === null || _object$packetCommitm2 === void 0 ? void 0 : _object$packetCommitm2.map(function (e) {\n      return _helpers.Long.fromValue(e);\n    })) || [];\n    return message;\n  }\n};\nexports.QueryUnreceivedPacketsRequest = QueryUnreceivedPacketsRequest;\nfunction createBaseQueryUnreceivedPacketsResponse() {\n  return {\n    sequences: [],\n    height: _client.Height.fromPartial({})\n  };\n}\nvar QueryUnreceivedPacketsResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    writer.uint32(10).fork();\n    var _iterator7 = _createForOfIteratorHelper(message.sequences),\n      _step7;\n    try {\n      for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n        var v = _step7.value;\n        writer.uint64(v);\n      }\n    } catch (err) {\n      _iterator7.e(err);\n    } finally {\n      _iterator7.f();\n    }\n    writer.ldelim();\n    if (message.height !== undefined) {\n      _client.Height.encode(message.height, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryUnreceivedPacketsResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if ((tag & 7) === 2) {\n            var end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.sequences.push(reader.uint64());\n            }\n          } else {\n            message.sequences.push(reader.uint64());\n          }\n          break;\n        case 2:\n          message.height = _client.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$sequences;\n    var message = createBaseQueryUnreceivedPacketsResponse();\n    message.sequences = ((_object$sequences = object.sequences) === null || _object$sequences === void 0 ? void 0 : _object$sequences.map(function (e) {\n      return _helpers.Long.fromValue(e);\n    })) || [];\n    message.height = object.height !== undefined && object.height !== null ? _client.Height.fromPartial(object.height) : undefined;\n    return message;\n  }\n};\nexports.QueryUnreceivedPacketsResponse = QueryUnreceivedPacketsResponse;\nfunction createBaseQueryUnreceivedAcksRequest() {\n  return {\n    portId: \"\",\n    channelId: \"\",\n    packetAckSequences: []\n  };\n}\nvar QueryUnreceivedAcksRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    writer.uint32(26).fork();\n    var _iterator8 = _createForOfIteratorHelper(message.packetAckSequences),\n      _step8;\n    try {\n      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n        var v = _step8.value;\n        writer.uint64(v);\n      }\n    } catch (err) {\n      _iterator8.e(err);\n    } finally {\n      _iterator8.f();\n    }\n    writer.ldelim();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryUnreceivedAcksRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        case 3:\n          if ((tag & 7) === 2) {\n            var end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.packetAckSequences.push(reader.uint64());\n            }\n          } else {\n            message.packetAckSequences.push(reader.uint64());\n          }\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$portId10, _object$channelId10, _object$packetAckSequ;\n    var message = createBaseQueryUnreceivedAcksRequest();\n    message.portId = (_object$portId10 = object.portId) !== null && _object$portId10 !== void 0 ? _object$portId10 : \"\";\n    message.channelId = (_object$channelId10 = object.channelId) !== null && _object$channelId10 !== void 0 ? _object$channelId10 : \"\";\n    message.packetAckSequences = ((_object$packetAckSequ = object.packetAckSequences) === null || _object$packetAckSequ === void 0 ? void 0 : _object$packetAckSequ.map(function (e) {\n      return _helpers.Long.fromValue(e);\n    })) || [];\n    return message;\n  }\n};\nexports.QueryUnreceivedAcksRequest = QueryUnreceivedAcksRequest;\nfunction createBaseQueryUnreceivedAcksResponse() {\n  return {\n    sequences: [],\n    height: _client.Height.fromPartial({})\n  };\n}\nvar QueryUnreceivedAcksResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    writer.uint32(10).fork();\n    var _iterator9 = _createForOfIteratorHelper(message.sequences),\n      _step9;\n    try {\n      for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n        var v = _step9.value;\n        writer.uint64(v);\n      }\n    } catch (err) {\n      _iterator9.e(err);\n    } finally {\n      _iterator9.f();\n    }\n    writer.ldelim();\n    if (message.height !== undefined) {\n      _client.Height.encode(message.height, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryUnreceivedAcksResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if ((tag & 7) === 2) {\n            var end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.sequences.push(reader.uint64());\n            }\n          } else {\n            message.sequences.push(reader.uint64());\n          }\n          break;\n        case 2:\n          message.height = _client.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$sequences2;\n    var message = createBaseQueryUnreceivedAcksResponse();\n    message.sequences = ((_object$sequences2 = object.sequences) === null || _object$sequences2 === void 0 ? void 0 : _object$sequences2.map(function (e) {\n      return _helpers.Long.fromValue(e);\n    })) || [];\n    message.height = object.height !== undefined && object.height !== null ? _client.Height.fromPartial(object.height) : undefined;\n    return message;\n  }\n};\nexports.QueryUnreceivedAcksResponse = QueryUnreceivedAcksResponse;\nfunction createBaseQueryNextSequenceReceiveRequest() {\n  return {\n    portId: \"\",\n    channelId: \"\"\n  };\n}\nvar QueryNextSequenceReceiveRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryNextSequenceReceiveRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$portId11, _object$channelId11;\n    var message = createBaseQueryNextSequenceReceiveRequest();\n    message.portId = (_object$portId11 = object.portId) !== null && _object$portId11 !== void 0 ? _object$portId11 : \"\";\n    message.channelId = (_object$channelId11 = object.channelId) !== null && _object$channelId11 !== void 0 ? _object$channelId11 : \"\";\n    return message;\n  }\n};\nexports.QueryNextSequenceReceiveRequest = QueryNextSequenceReceiveRequest;\nfunction createBaseQueryNextSequenceReceiveResponse() {\n  return {\n    nextSequenceReceive: _helpers.Long.UZERO,\n    proof: new Uint8Array(),\n    proofHeight: _client.Height.fromPartial({})\n  };\n}\nvar QueryNextSequenceReceiveResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (!message.nextSequenceReceive.isZero()) {\n      writer.uint32(8).uint64(message.nextSequenceReceive);\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(18).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryNextSequenceReceiveResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.nextSequenceReceive = reader.uint64();\n          break;\n        case 2:\n          message.proof = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$proof7;\n    var message = createBaseQueryNextSequenceReceiveResponse();\n    message.nextSequenceReceive = object.nextSequenceReceive !== undefined && object.nextSequenceReceive !== null ? _helpers.Long.fromValue(object.nextSequenceReceive) : _helpers.Long.UZERO;\n    message.proof = (_object$proof7 = object.proof) !== null && _object$proof7 !== void 0 ? _object$proof7 : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    return message;\n  }\n};\nexports.QueryNextSequenceReceiveResponse = QueryNextSequenceReceiveResponse;"],"mappings":"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"},"metadata":{},"sourceType":"script"}