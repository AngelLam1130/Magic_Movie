{"ast":null,"code":"\"use strict\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Metadata = exports.DenomUnit = exports.Supply = exports.Output = exports.Input = exports.SendEnabled = exports.Params = exports.protobufPackage = void 0;\n/* eslint-disable */\nvar long_1 = __importDefault(require(\"long\"));\nvar minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nvar coin_1 = require(\"../../base/v1beta1/coin\");\nexports.protobufPackage = \"cosmos.bank.v1beta1\";\nfunction createBaseParams() {\n  return {\n    sendEnabled: [],\n    defaultSendEnabled: false\n  };\n}\nexports.Params = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    var _iterator = _createForOfIteratorHelper(message.sendEnabled),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        exports.SendEnabled.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    if (message.defaultSendEnabled === true) {\n      writer.uint32(16).bool(message.defaultSendEnabled);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseParams();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.sendEnabled.push(exports.SendEnabled.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.defaultSendEnabled = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      sendEnabled: Array.isArray(object === null || object === void 0 ? void 0 : object.sendEnabled) ? object.sendEnabled.map(function (e) {\n        return exports.SendEnabled.fromJSON(e);\n      }) : [],\n      defaultSendEnabled: isSet(object.defaultSendEnabled) ? Boolean(object.defaultSendEnabled) : false\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    if (message.sendEnabled) {\n      obj.sendEnabled = message.sendEnabled.map(function (e) {\n        return e ? exports.SendEnabled.toJSON(e) : undefined;\n      });\n    } else {\n      obj.sendEnabled = [];\n    }\n    message.defaultSendEnabled !== undefined && (obj.defaultSendEnabled = message.defaultSendEnabled);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b;\n    var message = createBaseParams();\n    message.sendEnabled = ((_a = object.sendEnabled) === null || _a === void 0 ? void 0 : _a.map(function (e) {\n      return exports.SendEnabled.fromPartial(e);\n    })) || [];\n    message.defaultSendEnabled = (_b = object.defaultSendEnabled) !== null && _b !== void 0 ? _b : false;\n    return message;\n  }\n};\nfunction createBaseSendEnabled() {\n  return {\n    denom: \"\",\n    enabled: false\n  };\n}\nexports.SendEnabled = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.denom !== \"\") {\n      writer.uint32(10).string(message.denom);\n    }\n    if (message.enabled === true) {\n      writer.uint32(16).bool(message.enabled);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseSendEnabled();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.denom = reader.string();\n          break;\n        case 2:\n          message.enabled = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      denom: isSet(object.denom) ? String(object.denom) : \"\",\n      enabled: isSet(object.enabled) ? Boolean(object.enabled) : false\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.denom !== undefined && (obj.denom = message.denom);\n    message.enabled !== undefined && (obj.enabled = message.enabled);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b;\n    var message = createBaseSendEnabled();\n    message.denom = (_a = object.denom) !== null && _a !== void 0 ? _a : \"\";\n    message.enabled = (_b = object.enabled) !== null && _b !== void 0 ? _b : false;\n    return message;\n  }\n};\nfunction createBaseInput() {\n  return {\n    address: \"\",\n    coins: []\n  };\n}\nexports.Input = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.address !== \"\") {\n      writer.uint32(10).string(message.address);\n    }\n    var _iterator2 = _createForOfIteratorHelper(message.coins),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var v = _step2.value;\n        coin_1.Coin.encode(v, writer.uint32(18).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseInput();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.address = reader.string();\n          break;\n        case 2:\n          message.coins.push(coin_1.Coin.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      address: isSet(object.address) ? String(object.address) : \"\",\n      coins: Array.isArray(object === null || object === void 0 ? void 0 : object.coins) ? object.coins.map(function (e) {\n        return coin_1.Coin.fromJSON(e);\n      }) : []\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.address !== undefined && (obj.address = message.address);\n    if (message.coins) {\n      obj.coins = message.coins.map(function (e) {\n        return e ? coin_1.Coin.toJSON(e) : undefined;\n      });\n    } else {\n      obj.coins = [];\n    }\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b;\n    var message = createBaseInput();\n    message.address = (_a = object.address) !== null && _a !== void 0 ? _a : \"\";\n    message.coins = ((_b = object.coins) === null || _b === void 0 ? void 0 : _b.map(function (e) {\n      return coin_1.Coin.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nfunction createBaseOutput() {\n  return {\n    address: \"\",\n    coins: []\n  };\n}\nexports.Output = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.address !== \"\") {\n      writer.uint32(10).string(message.address);\n    }\n    var _iterator3 = _createForOfIteratorHelper(message.coins),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var v = _step3.value;\n        coin_1.Coin.encode(v, writer.uint32(18).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseOutput();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.address = reader.string();\n          break;\n        case 2:\n          message.coins.push(coin_1.Coin.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      address: isSet(object.address) ? String(object.address) : \"\",\n      coins: Array.isArray(object === null || object === void 0 ? void 0 : object.coins) ? object.coins.map(function (e) {\n        return coin_1.Coin.fromJSON(e);\n      }) : []\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.address !== undefined && (obj.address = message.address);\n    if (message.coins) {\n      obj.coins = message.coins.map(function (e) {\n        return e ? coin_1.Coin.toJSON(e) : undefined;\n      });\n    } else {\n      obj.coins = [];\n    }\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b;\n    var message = createBaseOutput();\n    message.address = (_a = object.address) !== null && _a !== void 0 ? _a : \"\";\n    message.coins = ((_b = object.coins) === null || _b === void 0 ? void 0 : _b.map(function (e) {\n      return coin_1.Coin.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nfunction createBaseSupply() {\n  return {\n    total: []\n  };\n}\nexports.Supply = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    var _iterator4 = _createForOfIteratorHelper(message.total),\n      _step4;\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var v = _step4.value;\n        coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseSupply();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.total.push(coin_1.Coin.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      total: Array.isArray(object === null || object === void 0 ? void 0 : object.total) ? object.total.map(function (e) {\n        return coin_1.Coin.fromJSON(e);\n      }) : []\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    if (message.total) {\n      obj.total = message.total.map(function (e) {\n        return e ? coin_1.Coin.toJSON(e) : undefined;\n      });\n    } else {\n      obj.total = [];\n    }\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseSupply();\n    message.total = ((_a = object.total) === null || _a === void 0 ? void 0 : _a.map(function (e) {\n      return coin_1.Coin.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nfunction createBaseDenomUnit() {\n  return {\n    denom: \"\",\n    exponent: 0,\n    aliases: []\n  };\n}\nexports.DenomUnit = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.denom !== \"\") {\n      writer.uint32(10).string(message.denom);\n    }\n    if (message.exponent !== 0) {\n      writer.uint32(16).uint32(message.exponent);\n    }\n    var _iterator5 = _createForOfIteratorHelper(message.aliases),\n      _step5;\n    try {\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        var v = _step5.value;\n        writer.uint32(26).string(v);\n      }\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseDenomUnit();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.denom = reader.string();\n          break;\n        case 2:\n          message.exponent = reader.uint32();\n          break;\n        case 3:\n          message.aliases.push(reader.string());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      denom: isSet(object.denom) ? String(object.denom) : \"\",\n      exponent: isSet(object.exponent) ? Number(object.exponent) : 0,\n      aliases: Array.isArray(object === null || object === void 0 ? void 0 : object.aliases) ? object.aliases.map(function (e) {\n        return String(e);\n      }) : []\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.denom !== undefined && (obj.denom = message.denom);\n    message.exponent !== undefined && (obj.exponent = Math.round(message.exponent));\n    if (message.aliases) {\n      obj.aliases = message.aliases.map(function (e) {\n        return e;\n      });\n    } else {\n      obj.aliases = [];\n    }\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c;\n    var message = createBaseDenomUnit();\n    message.denom = (_a = object.denom) !== null && _a !== void 0 ? _a : \"\";\n    message.exponent = (_b = object.exponent) !== null && _b !== void 0 ? _b : 0;\n    message.aliases = ((_c = object.aliases) === null || _c === void 0 ? void 0 : _c.map(function (e) {\n      return e;\n    })) || [];\n    return message;\n  }\n};\nfunction createBaseMetadata() {\n  return {\n    description: \"\",\n    denomUnits: [],\n    base: \"\",\n    display: \"\",\n    name: \"\",\n    symbol: \"\"\n  };\n}\nexports.Metadata = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.description !== \"\") {\n      writer.uint32(10).string(message.description);\n    }\n    var _iterator6 = _createForOfIteratorHelper(message.denomUnits),\n      _step6;\n    try {\n      for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n        var v = _step6.value;\n        exports.DenomUnit.encode(v, writer.uint32(18).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator6.e(err);\n    } finally {\n      _iterator6.f();\n    }\n    if (message.base !== \"\") {\n      writer.uint32(26).string(message.base);\n    }\n    if (message.display !== \"\") {\n      writer.uint32(34).string(message.display);\n    }\n    if (message.name !== \"\") {\n      writer.uint32(42).string(message.name);\n    }\n    if (message.symbol !== \"\") {\n      writer.uint32(50).string(message.symbol);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMetadata();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.description = reader.string();\n          break;\n        case 2:\n          message.denomUnits.push(exports.DenomUnit.decode(reader, reader.uint32()));\n          break;\n        case 3:\n          message.base = reader.string();\n          break;\n        case 4:\n          message.display = reader.string();\n          break;\n        case 5:\n          message.name = reader.string();\n          break;\n        case 6:\n          message.symbol = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      description: isSet(object.description) ? String(object.description) : \"\",\n      denomUnits: Array.isArray(object === null || object === void 0 ? void 0 : object.denomUnits) ? object.denomUnits.map(function (e) {\n        return exports.DenomUnit.fromJSON(e);\n      }) : [],\n      base: isSet(object.base) ? String(object.base) : \"\",\n      display: isSet(object.display) ? String(object.display) : \"\",\n      name: isSet(object.name) ? String(object.name) : \"\",\n      symbol: isSet(object.symbol) ? String(object.symbol) : \"\"\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.description !== undefined && (obj.description = message.description);\n    if (message.denomUnits) {\n      obj.denomUnits = message.denomUnits.map(function (e) {\n        return e ? exports.DenomUnit.toJSON(e) : undefined;\n      });\n    } else {\n      obj.denomUnits = [];\n    }\n    message.base !== undefined && (obj.base = message.base);\n    message.display !== undefined && (obj.display = message.display);\n    message.name !== undefined && (obj.name = message.name);\n    message.symbol !== undefined && (obj.symbol = message.symbol);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c, _d, _e, _f;\n    var message = createBaseMetadata();\n    message.description = (_a = object.description) !== null && _a !== void 0 ? _a : \"\";\n    message.denomUnits = ((_b = object.denomUnits) === null || _b === void 0 ? void 0 : _b.map(function (e) {\n      return exports.DenomUnit.fromPartial(e);\n    })) || [];\n    message.base = (_c = object.base) !== null && _c !== void 0 ? _c : \"\";\n    message.display = (_d = object.display) !== null && _d !== void 0 ? _d : \"\";\n    message.name = (_e = object.name) !== null && _e !== void 0 ? _e : \"\";\n    message.symbol = (_f = object.symbol) !== null && _f !== void 0 ? _f : \"\";\n    return message;\n  }\n};\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}\nfunction isSet(value) {\n  return value !== null && value !== undefined;\n}","map":null,"metadata":{},"sourceType":"script"}