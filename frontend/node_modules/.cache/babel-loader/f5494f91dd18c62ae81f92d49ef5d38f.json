{"ast":null,"code":"\"use strict\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Params = exports.Height = exports.UpgradeProposal = exports.ClientUpdateProposal = exports.ClientConsensusStates = exports.ConsensusStateWithHeight = exports.IdentifiedClientState = exports.protobufPackage = void 0;\n/* eslint-disable */\nvar long_1 = __importDefault(require(\"long\"));\nvar minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nvar upgrade_1 = require(\"../../../../cosmos/upgrade/v1beta1/upgrade\");\nvar any_1 = require(\"../../../../google/protobuf/any\");\nexports.protobufPackage = \"ibc.core.client.v1\";\nfunction createBaseIdentifiedClientState() {\n  return {\n    clientId: \"\",\n    clientState: undefined\n  };\n}\nexports.IdentifiedClientState = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.clientId !== \"\") {\n      writer.uint32(10).string(message.clientId);\n    }\n    if (message.clientState !== undefined) {\n      any_1.Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseIdentifiedClientState();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n        case 2:\n          message.clientState = any_1.Any.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      clientId: isSet(object.clientId) ? String(object.clientId) : \"\",\n      clientState: isSet(object.clientState) ? any_1.Any.fromJSON(object.clientState) : undefined\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.clientId !== undefined && (obj.clientId = message.clientId);\n    message.clientState !== undefined && (obj.clientState = message.clientState ? any_1.Any.toJSON(message.clientState) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseIdentifiedClientState();\n    message.clientId = (_a = object.clientId) !== null && _a !== void 0 ? _a : \"\";\n    message.clientState = object.clientState !== undefined && object.clientState !== null ? any_1.Any.fromPartial(object.clientState) : undefined;\n    return message;\n  }\n};\nfunction createBaseConsensusStateWithHeight() {\n  return {\n    height: undefined,\n    consensusState: undefined\n  };\n}\nexports.ConsensusStateWithHeight = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.height !== undefined) {\n      exports.Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.consensusState !== undefined) {\n      any_1.Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseConsensusStateWithHeight();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.height = exports.Height.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.consensusState = any_1.Any.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      height: isSet(object.height) ? exports.Height.fromJSON(object.height) : undefined,\n      consensusState: isSet(object.consensusState) ? any_1.Any.fromJSON(object.consensusState) : undefined\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.height !== undefined && (obj.height = message.height ? exports.Height.toJSON(message.height) : undefined);\n    message.consensusState !== undefined && (obj.consensusState = message.consensusState ? any_1.Any.toJSON(message.consensusState) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseConsensusStateWithHeight();\n    message.height = object.height !== undefined && object.height !== null ? exports.Height.fromPartial(object.height) : undefined;\n    message.consensusState = object.consensusState !== undefined && object.consensusState !== null ? any_1.Any.fromPartial(object.consensusState) : undefined;\n    return message;\n  }\n};\nfunction createBaseClientConsensusStates() {\n  return {\n    clientId: \"\",\n    consensusStates: []\n  };\n}\nexports.ClientConsensusStates = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.clientId !== \"\") {\n      writer.uint32(10).string(message.clientId);\n    }\n    var _iterator = _createForOfIteratorHelper(message.consensusStates),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        exports.ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseClientConsensusStates();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n        case 2:\n          message.consensusStates.push(exports.ConsensusStateWithHeight.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      clientId: isSet(object.clientId) ? String(object.clientId) : \"\",\n      consensusStates: Array.isArray(object === null || object === void 0 ? void 0 : object.consensusStates) ? object.consensusStates.map(function (e) {\n        return exports.ConsensusStateWithHeight.fromJSON(e);\n      }) : []\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.clientId !== undefined && (obj.clientId = message.clientId);\n    if (message.consensusStates) {\n      obj.consensusStates = message.consensusStates.map(function (e) {\n        return e ? exports.ConsensusStateWithHeight.toJSON(e) : undefined;\n      });\n    } else {\n      obj.consensusStates = [];\n    }\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b;\n    var message = createBaseClientConsensusStates();\n    message.clientId = (_a = object.clientId) !== null && _a !== void 0 ? _a : \"\";\n    message.consensusStates = ((_b = object.consensusStates) === null || _b === void 0 ? void 0 : _b.map(function (e) {\n      return exports.ConsensusStateWithHeight.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nfunction createBaseClientUpdateProposal() {\n  return {\n    title: \"\",\n    description: \"\",\n    subjectClientId: \"\",\n    substituteClientId: \"\"\n  };\n}\nexports.ClientUpdateProposal = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.title !== \"\") {\n      writer.uint32(10).string(message.title);\n    }\n    if (message.description !== \"\") {\n      writer.uint32(18).string(message.description);\n    }\n    if (message.subjectClientId !== \"\") {\n      writer.uint32(26).string(message.subjectClientId);\n    }\n    if (message.substituteClientId !== \"\") {\n      writer.uint32(34).string(message.substituteClientId);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseClientUpdateProposal();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.title = reader.string();\n          break;\n        case 2:\n          message.description = reader.string();\n          break;\n        case 3:\n          message.subjectClientId = reader.string();\n          break;\n        case 4:\n          message.substituteClientId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      title: isSet(object.title) ? String(object.title) : \"\",\n      description: isSet(object.description) ? String(object.description) : \"\",\n      subjectClientId: isSet(object.subjectClientId) ? String(object.subjectClientId) : \"\",\n      substituteClientId: isSet(object.substituteClientId) ? String(object.substituteClientId) : \"\"\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.title !== undefined && (obj.title = message.title);\n    message.description !== undefined && (obj.description = message.description);\n    message.subjectClientId !== undefined && (obj.subjectClientId = message.subjectClientId);\n    message.substituteClientId !== undefined && (obj.substituteClientId = message.substituteClientId);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c, _d;\n    var message = createBaseClientUpdateProposal();\n    message.title = (_a = object.title) !== null && _a !== void 0 ? _a : \"\";\n    message.description = (_b = object.description) !== null && _b !== void 0 ? _b : \"\";\n    message.subjectClientId = (_c = object.subjectClientId) !== null && _c !== void 0 ? _c : \"\";\n    message.substituteClientId = (_d = object.substituteClientId) !== null && _d !== void 0 ? _d : \"\";\n    return message;\n  }\n};\nfunction createBaseUpgradeProposal() {\n  return {\n    title: \"\",\n    description: \"\",\n    plan: undefined,\n    upgradedClientState: undefined\n  };\n}\nexports.UpgradeProposal = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.title !== \"\") {\n      writer.uint32(10).string(message.title);\n    }\n    if (message.description !== \"\") {\n      writer.uint32(18).string(message.description);\n    }\n    if (message.plan !== undefined) {\n      upgrade_1.Plan.encode(message.plan, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.upgradedClientState !== undefined) {\n      any_1.Any.encode(message.upgradedClientState, writer.uint32(34).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseUpgradeProposal();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.title = reader.string();\n          break;\n        case 2:\n          message.description = reader.string();\n          break;\n        case 3:\n          message.plan = upgrade_1.Plan.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.upgradedClientState = any_1.Any.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      title: isSet(object.title) ? String(object.title) : \"\",\n      description: isSet(object.description) ? String(object.description) : \"\",\n      plan: isSet(object.plan) ? upgrade_1.Plan.fromJSON(object.plan) : undefined,\n      upgradedClientState: isSet(object.upgradedClientState) ? any_1.Any.fromJSON(object.upgradedClientState) : undefined\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.title !== undefined && (obj.title = message.title);\n    message.description !== undefined && (obj.description = message.description);\n    message.plan !== undefined && (obj.plan = message.plan ? upgrade_1.Plan.toJSON(message.plan) : undefined);\n    message.upgradedClientState !== undefined && (obj.upgradedClientState = message.upgradedClientState ? any_1.Any.toJSON(message.upgradedClientState) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b;\n    var message = createBaseUpgradeProposal();\n    message.title = (_a = object.title) !== null && _a !== void 0 ? _a : \"\";\n    message.description = (_b = object.description) !== null && _b !== void 0 ? _b : \"\";\n    message.plan = object.plan !== undefined && object.plan !== null ? upgrade_1.Plan.fromPartial(object.plan) : undefined;\n    message.upgradedClientState = object.upgradedClientState !== undefined && object.upgradedClientState !== null ? any_1.Any.fromPartial(object.upgradedClientState) : undefined;\n    return message;\n  }\n};\nfunction createBaseHeight() {\n  return {\n    revisionNumber: long_1.default.UZERO,\n    revisionHeight: long_1.default.UZERO\n  };\n}\nexports.Height = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (!message.revisionNumber.isZero()) {\n      writer.uint32(8).uint64(message.revisionNumber);\n    }\n    if (!message.revisionHeight.isZero()) {\n      writer.uint32(16).uint64(message.revisionHeight);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseHeight();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.revisionNumber = reader.uint64();\n          break;\n        case 2:\n          message.revisionHeight = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      revisionNumber: isSet(object.revisionNumber) ? long_1.default.fromValue(object.revisionNumber) : long_1.default.UZERO,\n      revisionHeight: isSet(object.revisionHeight) ? long_1.default.fromValue(object.revisionHeight) : long_1.default.UZERO\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.revisionNumber !== undefined && (obj.revisionNumber = (message.revisionNumber || long_1.default.UZERO).toString());\n    message.revisionHeight !== undefined && (obj.revisionHeight = (message.revisionHeight || long_1.default.UZERO).toString());\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseHeight();\n    message.revisionNumber = object.revisionNumber !== undefined && object.revisionNumber !== null ? long_1.default.fromValue(object.revisionNumber) : long_1.default.UZERO;\n    message.revisionHeight = object.revisionHeight !== undefined && object.revisionHeight !== null ? long_1.default.fromValue(object.revisionHeight) : long_1.default.UZERO;\n    return message;\n  }\n};\nfunction createBaseParams() {\n  return {\n    allowedClients: []\n  };\n}\nexports.Params = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    var _iterator2 = _createForOfIteratorHelper(message.allowedClients),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var v = _step2.value;\n        writer.uint32(10).string(v);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseParams();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.allowedClients.push(reader.string());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      allowedClients: Array.isArray(object === null || object === void 0 ? void 0 : object.allowedClients) ? object.allowedClients.map(function (e) {\n        return String(e);\n      }) : []\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    if (message.allowedClients) {\n      obj.allowedClients = message.allowedClients.map(function (e) {\n        return e;\n      });\n    } else {\n      obj.allowedClients = [];\n    }\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseParams();\n    message.allowedClients = ((_a = object.allowedClients) === null || _a === void 0 ? void 0 : _a.map(function (e) {\n      return e;\n    })) || [];\n    return message;\n  }\n};\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}\nfunction isSet(value) {\n  return value !== null && value !== undefined;\n}","map":null,"metadata":{},"sourceType":"script"}