{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/linanqi/Hackathon/GameRoom/frontend/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/Users/linanqi/Hackathon/GameRoom/frontend/node_modules/@babel/runtime/helpers/createClass\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.QueryClientImpl = exports.QueryDenomMetadataResponse = exports.QueryDenomMetadataRequest = exports.QueryDenomsMetadataResponse = exports.QueryDenomsMetadataRequest = exports.QueryParamsResponse = exports.QueryParamsRequest = exports.QuerySupplyOfResponse = exports.QuerySupplyOfRequest = exports.QueryTotalSupplyResponse = exports.QueryTotalSupplyRequest = exports.QuerySpendableBalancesResponse = exports.QuerySpendableBalancesRequest = exports.QueryAllBalancesResponse = exports.QueryAllBalancesRequest = exports.QueryBalanceResponse = exports.QueryBalanceRequest = exports.protobufPackage = void 0;\n/* eslint-disable */\nvar long_1 = __importDefault(require(\"long\"));\nvar minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nvar pagination_1 = require(\"../../base/query/v1beta1/pagination\");\nvar coin_1 = require(\"../../base/v1beta1/coin\");\nvar bank_1 = require(\"./bank\");\nexports.protobufPackage = \"cosmos.bank.v1beta1\";\nfunction createBaseQueryBalanceRequest() {\n  return {\n    address: \"\",\n    denom: \"\"\n  };\n}\nexports.QueryBalanceRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.address !== \"\") {\n      writer.uint32(10).string(message.address);\n    }\n    if (message.denom !== \"\") {\n      writer.uint32(18).string(message.denom);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryBalanceRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.address = reader.string();\n          break;\n        case 2:\n          message.denom = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      address: isSet(object.address) ? String(object.address) : \"\",\n      denom: isSet(object.denom) ? String(object.denom) : \"\"\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.address !== undefined && (obj.address = message.address);\n    message.denom !== undefined && (obj.denom = message.denom);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b;\n    var message = createBaseQueryBalanceRequest();\n    message.address = (_a = object.address) !== null && _a !== void 0 ? _a : \"\";\n    message.denom = (_b = object.denom) !== null && _b !== void 0 ? _b : \"\";\n    return message;\n  }\n};\nfunction createBaseQueryBalanceResponse() {\n  return {\n    balance: undefined\n  };\n}\nexports.QueryBalanceResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.balance !== undefined) {\n      coin_1.Coin.encode(message.balance, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryBalanceResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.balance = coin_1.Coin.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      balance: isSet(object.balance) ? coin_1.Coin.fromJSON(object.balance) : undefined\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.balance !== undefined && (obj.balance = message.balance ? coin_1.Coin.toJSON(message.balance) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseQueryBalanceResponse();\n    message.balance = object.balance !== undefined && object.balance !== null ? coin_1.Coin.fromPartial(object.balance) : undefined;\n    return message;\n  }\n};\nfunction createBaseQueryAllBalancesRequest() {\n  return {\n    address: \"\",\n    pagination: undefined\n  };\n}\nexports.QueryAllBalancesRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.address !== \"\") {\n      writer.uint32(10).string(message.address);\n    }\n    if (message.pagination !== undefined) {\n      pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryAllBalancesRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.address = reader.string();\n          break;\n        case 2:\n          message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      address: isSet(object.address) ? String(object.address) : \"\",\n      pagination: isSet(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : undefined\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.address !== undefined && (obj.address = message.address);\n    message.pagination !== undefined && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseQueryAllBalancesRequest();\n    message.address = (_a = object.address) !== null && _a !== void 0 ? _a : \"\";\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : undefined;\n    return message;\n  }\n};\nfunction createBaseQueryAllBalancesResponse() {\n  return {\n    balances: [],\n    pagination: undefined\n  };\n}\nexports.QueryAllBalancesResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    var _iterator = _createForOfIteratorHelper(message.balances),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    if (message.pagination !== undefined) {\n      pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryAllBalancesResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.balances.push(coin_1.Coin.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      balances: Array.isArray(object === null || object === void 0 ? void 0 : object.balances) ? object.balances.map(function (e) {\n        return coin_1.Coin.fromJSON(e);\n      }) : [],\n      pagination: isSet(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : undefined\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    if (message.balances) {\n      obj.balances = message.balances.map(function (e) {\n        return e ? coin_1.Coin.toJSON(e) : undefined;\n      });\n    } else {\n      obj.balances = [];\n    }\n    message.pagination !== undefined && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseQueryAllBalancesResponse();\n    message.balances = ((_a = object.balances) === null || _a === void 0 ? void 0 : _a.map(function (e) {\n      return coin_1.Coin.fromPartial(e);\n    })) || [];\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : undefined;\n    return message;\n  }\n};\nfunction createBaseQuerySpendableBalancesRequest() {\n  return {\n    address: \"\",\n    pagination: undefined\n  };\n}\nexports.QuerySpendableBalancesRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.address !== \"\") {\n      writer.uint32(10).string(message.address);\n    }\n    if (message.pagination !== undefined) {\n      pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQuerySpendableBalancesRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.address = reader.string();\n          break;\n        case 2:\n          message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      address: isSet(object.address) ? String(object.address) : \"\",\n      pagination: isSet(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : undefined\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.address !== undefined && (obj.address = message.address);\n    message.pagination !== undefined && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseQuerySpendableBalancesRequest();\n    message.address = (_a = object.address) !== null && _a !== void 0 ? _a : \"\";\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : undefined;\n    return message;\n  }\n};\nfunction createBaseQuerySpendableBalancesResponse() {\n  return {\n    balances: [],\n    pagination: undefined\n  };\n}\nexports.QuerySpendableBalancesResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    var _iterator2 = _createForOfIteratorHelper(message.balances),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var v = _step2.value;\n        coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    if (message.pagination !== undefined) {\n      pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQuerySpendableBalancesResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.balances.push(coin_1.Coin.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      balances: Array.isArray(object === null || object === void 0 ? void 0 : object.balances) ? object.balances.map(function (e) {\n        return coin_1.Coin.fromJSON(e);\n      }) : [],\n      pagination: isSet(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : undefined\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    if (message.balances) {\n      obj.balances = message.balances.map(function (e) {\n        return e ? coin_1.Coin.toJSON(e) : undefined;\n      });\n    } else {\n      obj.balances = [];\n    }\n    message.pagination !== undefined && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseQuerySpendableBalancesResponse();\n    message.balances = ((_a = object.balances) === null || _a === void 0 ? void 0 : _a.map(function (e) {\n      return coin_1.Coin.fromPartial(e);\n    })) || [];\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : undefined;\n    return message;\n  }\n};\nfunction createBaseQueryTotalSupplyRequest() {\n  return {\n    pagination: undefined\n  };\n}\nexports.QueryTotalSupplyRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.pagination !== undefined) {\n      pagination_1.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryTotalSupplyRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      pagination: isSet(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : undefined\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.pagination !== undefined && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseQueryTotalSupplyRequest();\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : undefined;\n    return message;\n  }\n};\nfunction createBaseQueryTotalSupplyResponse() {\n  return {\n    supply: [],\n    pagination: undefined\n  };\n}\nexports.QueryTotalSupplyResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    var _iterator3 = _createForOfIteratorHelper(message.supply),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var v = _step3.value;\n        coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    if (message.pagination !== undefined) {\n      pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryTotalSupplyResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.supply.push(coin_1.Coin.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      supply: Array.isArray(object === null || object === void 0 ? void 0 : object.supply) ? object.supply.map(function (e) {\n        return coin_1.Coin.fromJSON(e);\n      }) : [],\n      pagination: isSet(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : undefined\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    if (message.supply) {\n      obj.supply = message.supply.map(function (e) {\n        return e ? coin_1.Coin.toJSON(e) : undefined;\n      });\n    } else {\n      obj.supply = [];\n    }\n    message.pagination !== undefined && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseQueryTotalSupplyResponse();\n    message.supply = ((_a = object.supply) === null || _a === void 0 ? void 0 : _a.map(function (e) {\n      return coin_1.Coin.fromPartial(e);\n    })) || [];\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : undefined;\n    return message;\n  }\n};\nfunction createBaseQuerySupplyOfRequest() {\n  return {\n    denom: \"\"\n  };\n}\nexports.QuerySupplyOfRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.denom !== \"\") {\n      writer.uint32(10).string(message.denom);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQuerySupplyOfRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.denom = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      denom: isSet(object.denom) ? String(object.denom) : \"\"\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.denom !== undefined && (obj.denom = message.denom);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseQuerySupplyOfRequest();\n    message.denom = (_a = object.denom) !== null && _a !== void 0 ? _a : \"\";\n    return message;\n  }\n};\nfunction createBaseQuerySupplyOfResponse() {\n  return {\n    amount: undefined\n  };\n}\nexports.QuerySupplyOfResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.amount !== undefined) {\n      coin_1.Coin.encode(message.amount, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQuerySupplyOfResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.amount = coin_1.Coin.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      amount: isSet(object.amount) ? coin_1.Coin.fromJSON(object.amount) : undefined\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.amount !== undefined && (obj.amount = message.amount ? coin_1.Coin.toJSON(message.amount) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseQuerySupplyOfResponse();\n    message.amount = object.amount !== undefined && object.amount !== null ? coin_1.Coin.fromPartial(object.amount) : undefined;\n    return message;\n  }\n};\nfunction createBaseQueryParamsRequest() {\n  return {};\n}\nexports.QueryParamsRequest = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryParamsRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(_) {\n    return {};\n  },\n  toJSON: function toJSON(_) {\n    var obj = {};\n    return obj;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseQueryParamsRequest();\n    return message;\n  }\n};\nfunction createBaseQueryParamsResponse() {\n  return {\n    params: undefined\n  };\n}\nexports.QueryParamsResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.params !== undefined) {\n      bank_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryParamsResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.params = bank_1.Params.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      params: isSet(object.params) ? bank_1.Params.fromJSON(object.params) : undefined\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.params !== undefined && (obj.params = message.params ? bank_1.Params.toJSON(message.params) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseQueryParamsResponse();\n    message.params = object.params !== undefined && object.params !== null ? bank_1.Params.fromPartial(object.params) : undefined;\n    return message;\n  }\n};\nfunction createBaseQueryDenomsMetadataRequest() {\n  return {\n    pagination: undefined\n  };\n}\nexports.QueryDenomsMetadataRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.pagination !== undefined) {\n      pagination_1.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryDenomsMetadataRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      pagination: isSet(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : undefined\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.pagination !== undefined && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseQueryDenomsMetadataRequest();\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : undefined;\n    return message;\n  }\n};\nfunction createBaseQueryDenomsMetadataResponse() {\n  return {\n    metadatas: [],\n    pagination: undefined\n  };\n}\nexports.QueryDenomsMetadataResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    var _iterator4 = _createForOfIteratorHelper(message.metadatas),\n      _step4;\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var v = _step4.value;\n        bank_1.Metadata.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n    if (message.pagination !== undefined) {\n      pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryDenomsMetadataResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.metadatas.push(bank_1.Metadata.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      metadatas: Array.isArray(object === null || object === void 0 ? void 0 : object.metadatas) ? object.metadatas.map(function (e) {\n        return bank_1.Metadata.fromJSON(e);\n      }) : [],\n      pagination: isSet(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : undefined\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    if (message.metadatas) {\n      obj.metadatas = message.metadatas.map(function (e) {\n        return e ? bank_1.Metadata.toJSON(e) : undefined;\n      });\n    } else {\n      obj.metadatas = [];\n    }\n    message.pagination !== undefined && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseQueryDenomsMetadataResponse();\n    message.metadatas = ((_a = object.metadatas) === null || _a === void 0 ? void 0 : _a.map(function (e) {\n      return bank_1.Metadata.fromPartial(e);\n    })) || [];\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : undefined;\n    return message;\n  }\n};\nfunction createBaseQueryDenomMetadataRequest() {\n  return {\n    denom: \"\"\n  };\n}\nexports.QueryDenomMetadataRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.denom !== \"\") {\n      writer.uint32(10).string(message.denom);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryDenomMetadataRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.denom = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      denom: isSet(object.denom) ? String(object.denom) : \"\"\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.denom !== undefined && (obj.denom = message.denom);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseQueryDenomMetadataRequest();\n    message.denom = (_a = object.denom) !== null && _a !== void 0 ? _a : \"\";\n    return message;\n  }\n};\nfunction createBaseQueryDenomMetadataResponse() {\n  return {\n    metadata: undefined\n  };\n}\nexports.QueryDenomMetadataResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.metadata !== undefined) {\n      bank_1.Metadata.encode(message.metadata, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryDenomMetadataResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.metadata = bank_1.Metadata.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      metadata: isSet(object.metadata) ? bank_1.Metadata.fromJSON(object.metadata) : undefined\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.metadata !== undefined && (obj.metadata = message.metadata ? bank_1.Metadata.toJSON(message.metadata) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseQueryDenomMetadataResponse();\n    message.metadata = object.metadata !== undefined && object.metadata !== null ? bank_1.Metadata.fromPartial(object.metadata) : undefined;\n    return message;\n  }\n};\nvar QueryClientImpl = /*#__PURE__*/function () {\n  function QueryClientImpl(rpc) {\n    _classCallCheck(this, QueryClientImpl);\n    this.rpc = rpc;\n    this.Balance = this.Balance.bind(this);\n    this.AllBalances = this.AllBalances.bind(this);\n    this.SpendableBalances = this.SpendableBalances.bind(this);\n    this.TotalSupply = this.TotalSupply.bind(this);\n    this.SupplyOf = this.SupplyOf.bind(this);\n    this.Params = this.Params.bind(this);\n    this.DenomMetadata = this.DenomMetadata.bind(this);\n    this.DenomsMetadata = this.DenomsMetadata.bind(this);\n  }\n  _createClass(QueryClientImpl, [{\n    key: \"Balance\",\n    value: function Balance(request) {\n      var data = exports.QueryBalanceRequest.encode(request).finish();\n      var promise = this.rpc.request(\"cosmos.bank.v1beta1.Query\", \"Balance\", data);\n      return promise.then(function (data) {\n        return exports.QueryBalanceResponse.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }, {\n    key: \"AllBalances\",\n    value: function AllBalances(request) {\n      var data = exports.QueryAllBalancesRequest.encode(request).finish();\n      var promise = this.rpc.request(\"cosmos.bank.v1beta1.Query\", \"AllBalances\", data);\n      return promise.then(function (data) {\n        return exports.QueryAllBalancesResponse.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }, {\n    key: \"SpendableBalances\",\n    value: function SpendableBalances(request) {\n      var data = exports.QuerySpendableBalancesRequest.encode(request).finish();\n      var promise = this.rpc.request(\"cosmos.bank.v1beta1.Query\", \"SpendableBalances\", data);\n      return promise.then(function (data) {\n        return exports.QuerySpendableBalancesResponse.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }, {\n    key: \"TotalSupply\",\n    value: function TotalSupply(request) {\n      var data = exports.QueryTotalSupplyRequest.encode(request).finish();\n      var promise = this.rpc.request(\"cosmos.bank.v1beta1.Query\", \"TotalSupply\", data);\n      return promise.then(function (data) {\n        return exports.QueryTotalSupplyResponse.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }, {\n    key: \"SupplyOf\",\n    value: function SupplyOf(request) {\n      var data = exports.QuerySupplyOfRequest.encode(request).finish();\n      var promise = this.rpc.request(\"cosmos.bank.v1beta1.Query\", \"SupplyOf\", data);\n      return promise.then(function (data) {\n        return exports.QuerySupplyOfResponse.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }, {\n    key: \"Params\",\n    value: function Params(request) {\n      var data = exports.QueryParamsRequest.encode(request).finish();\n      var promise = this.rpc.request(\"cosmos.bank.v1beta1.Query\", \"Params\", data);\n      return promise.then(function (data) {\n        return exports.QueryParamsResponse.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }, {\n    key: \"DenomMetadata\",\n    value: function DenomMetadata(request) {\n      var data = exports.QueryDenomMetadataRequest.encode(request).finish();\n      var promise = this.rpc.request(\"cosmos.bank.v1beta1.Query\", \"DenomMetadata\", data);\n      return promise.then(function (data) {\n        return exports.QueryDenomMetadataResponse.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }, {\n    key: \"DenomsMetadata\",\n    value: function DenomsMetadata(request) {\n      var data = exports.QueryDenomsMetadataRequest.encode(request).finish();\n      var promise = this.rpc.request(\"cosmos.bank.v1beta1.Query\", \"DenomsMetadata\", data);\n      return promise.then(function (data) {\n        return exports.QueryDenomsMetadataResponse.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }]);\n  return QueryClientImpl;\n}();\nexports.QueryClientImpl = QueryClientImpl;\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}\nfunction isSet(value) {\n  return value !== null && value !== undefined;\n}","map":null,"metadata":{},"sourceType":"script"}