{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Params = exports.ValidatorSigningInfo = exports.protobufPackage = void 0;\n/* eslint-disable */\nvar long_1 = __importDefault(require(\"long\"));\nvar minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nvar duration_1 = require(\"../../../google/protobuf/duration\");\nvar timestamp_1 = require(\"../../../google/protobuf/timestamp\");\nexports.protobufPackage = \"cosmos.slashing.v1beta1\";\nfunction createBaseValidatorSigningInfo() {\n  return {\n    address: \"\",\n    startHeight: long_1.default.ZERO,\n    indexOffset: long_1.default.ZERO,\n    jailedUntil: undefined,\n    tombstoned: false,\n    missedBlocksCounter: long_1.default.ZERO\n  };\n}\nexports.ValidatorSigningInfo = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.address !== \"\") {\n      writer.uint32(10).string(message.address);\n    }\n    if (!message.startHeight.isZero()) {\n      writer.uint32(16).int64(message.startHeight);\n    }\n    if (!message.indexOffset.isZero()) {\n      writer.uint32(24).int64(message.indexOffset);\n    }\n    if (message.jailedUntil !== undefined) {\n      timestamp_1.Timestamp.encode(message.jailedUntil, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.tombstoned === true) {\n      writer.uint32(40).bool(message.tombstoned);\n    }\n    if (!message.missedBlocksCounter.isZero()) {\n      writer.uint32(48).int64(message.missedBlocksCounter);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseValidatorSigningInfo();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.address = reader.string();\n          break;\n        case 2:\n          message.startHeight = reader.int64();\n          break;\n        case 3:\n          message.indexOffset = reader.int64();\n          break;\n        case 4:\n          message.jailedUntil = timestamp_1.Timestamp.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.tombstoned = reader.bool();\n          break;\n        case 6:\n          message.missedBlocksCounter = reader.int64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      address: isSet(object.address) ? String(object.address) : \"\",\n      startHeight: isSet(object.startHeight) ? long_1.default.fromValue(object.startHeight) : long_1.default.ZERO,\n      indexOffset: isSet(object.indexOffset) ? long_1.default.fromValue(object.indexOffset) : long_1.default.ZERO,\n      jailedUntil: isSet(object.jailedUntil) ? fromJsonTimestamp(object.jailedUntil) : undefined,\n      tombstoned: isSet(object.tombstoned) ? Boolean(object.tombstoned) : false,\n      missedBlocksCounter: isSet(object.missedBlocksCounter) ? long_1.default.fromValue(object.missedBlocksCounter) : long_1.default.ZERO\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.address !== undefined && (obj.address = message.address);\n    message.startHeight !== undefined && (obj.startHeight = (message.startHeight || long_1.default.ZERO).toString());\n    message.indexOffset !== undefined && (obj.indexOffset = (message.indexOffset || long_1.default.ZERO).toString());\n    message.jailedUntil !== undefined && (obj.jailedUntil = fromTimestamp(message.jailedUntil).toISOString());\n    message.tombstoned !== undefined && (obj.tombstoned = message.tombstoned);\n    message.missedBlocksCounter !== undefined && (obj.missedBlocksCounter = (message.missedBlocksCounter || long_1.default.ZERO).toString());\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b;\n    var message = createBaseValidatorSigningInfo();\n    message.address = (_a = object.address) !== null && _a !== void 0 ? _a : \"\";\n    message.startHeight = object.startHeight !== undefined && object.startHeight !== null ? long_1.default.fromValue(object.startHeight) : long_1.default.ZERO;\n    message.indexOffset = object.indexOffset !== undefined && object.indexOffset !== null ? long_1.default.fromValue(object.indexOffset) : long_1.default.ZERO;\n    message.jailedUntil = object.jailedUntil !== undefined && object.jailedUntil !== null ? timestamp_1.Timestamp.fromPartial(object.jailedUntil) : undefined;\n    message.tombstoned = (_b = object.tombstoned) !== null && _b !== void 0 ? _b : false;\n    message.missedBlocksCounter = object.missedBlocksCounter !== undefined && object.missedBlocksCounter !== null ? long_1.default.fromValue(object.missedBlocksCounter) : long_1.default.ZERO;\n    return message;\n  }\n};\nfunction createBaseParams() {\n  return {\n    signedBlocksWindow: long_1.default.ZERO,\n    minSignedPerWindow: new Uint8Array(),\n    downtimeJailDuration: undefined,\n    slashFractionDoubleSign: new Uint8Array(),\n    slashFractionDowntime: new Uint8Array()\n  };\n}\nexports.Params = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (!message.signedBlocksWindow.isZero()) {\n      writer.uint32(8).int64(message.signedBlocksWindow);\n    }\n    if (message.minSignedPerWindow.length !== 0) {\n      writer.uint32(18).bytes(message.minSignedPerWindow);\n    }\n    if (message.downtimeJailDuration !== undefined) {\n      duration_1.Duration.encode(message.downtimeJailDuration, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.slashFractionDoubleSign.length !== 0) {\n      writer.uint32(34).bytes(message.slashFractionDoubleSign);\n    }\n    if (message.slashFractionDowntime.length !== 0) {\n      writer.uint32(42).bytes(message.slashFractionDowntime);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseParams();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.signedBlocksWindow = reader.int64();\n          break;\n        case 2:\n          message.minSignedPerWindow = reader.bytes();\n          break;\n        case 3:\n          message.downtimeJailDuration = duration_1.Duration.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.slashFractionDoubleSign = reader.bytes();\n          break;\n        case 5:\n          message.slashFractionDowntime = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      signedBlocksWindow: isSet(object.signedBlocksWindow) ? long_1.default.fromValue(object.signedBlocksWindow) : long_1.default.ZERO,\n      minSignedPerWindow: isSet(object.minSignedPerWindow) ? bytesFromBase64(object.minSignedPerWindow) : new Uint8Array(),\n      downtimeJailDuration: isSet(object.downtimeJailDuration) ? duration_1.Duration.fromJSON(object.downtimeJailDuration) : undefined,\n      slashFractionDoubleSign: isSet(object.slashFractionDoubleSign) ? bytesFromBase64(object.slashFractionDoubleSign) : new Uint8Array(),\n      slashFractionDowntime: isSet(object.slashFractionDowntime) ? bytesFromBase64(object.slashFractionDowntime) : new Uint8Array()\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.signedBlocksWindow !== undefined && (obj.signedBlocksWindow = (message.signedBlocksWindow || long_1.default.ZERO).toString());\n    message.minSignedPerWindow !== undefined && (obj.minSignedPerWindow = base64FromBytes(message.minSignedPerWindow !== undefined ? message.minSignedPerWindow : new Uint8Array()));\n    message.downtimeJailDuration !== undefined && (obj.downtimeJailDuration = message.downtimeJailDuration ? duration_1.Duration.toJSON(message.downtimeJailDuration) : undefined);\n    message.slashFractionDoubleSign !== undefined && (obj.slashFractionDoubleSign = base64FromBytes(message.slashFractionDoubleSign !== undefined ? message.slashFractionDoubleSign : new Uint8Array()));\n    message.slashFractionDowntime !== undefined && (obj.slashFractionDowntime = base64FromBytes(message.slashFractionDowntime !== undefined ? message.slashFractionDowntime : new Uint8Array()));\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c;\n    var message = createBaseParams();\n    message.signedBlocksWindow = object.signedBlocksWindow !== undefined && object.signedBlocksWindow !== null ? long_1.default.fromValue(object.signedBlocksWindow) : long_1.default.ZERO;\n    message.minSignedPerWindow = (_a = object.minSignedPerWindow) !== null && _a !== void 0 ? _a : new Uint8Array();\n    message.downtimeJailDuration = object.downtimeJailDuration !== undefined && object.downtimeJailDuration !== null ? duration_1.Duration.fromPartial(object.downtimeJailDuration) : undefined;\n    message.slashFractionDoubleSign = (_b = object.slashFractionDoubleSign) !== null && _b !== void 0 ? _b : new Uint8Array();\n    message.slashFractionDowntime = (_c = object.slashFractionDowntime) !== null && _c !== void 0 ? _c : new Uint8Array();\n    return message;\n  }\n};\nvar globalThis = function () {\n  if (typeof globalThis !== \"undefined\") {\n    return globalThis;\n  }\n  if (typeof self !== \"undefined\") {\n    return self;\n  }\n  if (typeof window !== \"undefined\") {\n    return window;\n  }\n  if (typeof global !== \"undefined\") {\n    return global;\n  }\n  throw \"Unable to locate global object\";\n}();\nfunction bytesFromBase64(b64) {\n  if (globalThis.Buffer) {\n    return Uint8Array.from(globalThis.Buffer.from(b64, \"base64\"));\n  } else {\n    var bin = globalThis.atob(b64);\n    var arr = new Uint8Array(bin.length);\n    for (var i = 0; i < bin.length; ++i) {\n      arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n  }\n}\nfunction base64FromBytes(arr) {\n  if (globalThis.Buffer) {\n    return globalThis.Buffer.from(arr).toString(\"base64\");\n  } else {\n    var bin = [];\n    arr.forEach(function (byte) {\n      bin.push(String.fromCharCode(byte));\n    });\n    return globalThis.btoa(bin.join(\"\"));\n  }\n}\nfunction toTimestamp(date) {\n  var seconds = numberToLong(date.getTime() / 1000);\n  var nanos = date.getTime() % 1000 * 1000000;\n  return {\n    seconds: seconds,\n    nanos: nanos\n  };\n}\nfunction fromTimestamp(t) {\n  var millis = t.seconds.toNumber() * 1000;\n  millis += t.nanos / 1000000;\n  return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n  if (o instanceof Date) {\n    return toTimestamp(o);\n  } else if (typeof o === \"string\") {\n    return toTimestamp(new Date(o));\n  } else {\n    return timestamp_1.Timestamp.fromJSON(o);\n  }\n}\nfunction numberToLong(number) {\n  return long_1.default.fromNumber(number);\n}\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}\nfunction isSet(value) {\n  return value !== null && value !== undefined;\n}","map":null,"metadata":{},"sourceType":"script"}