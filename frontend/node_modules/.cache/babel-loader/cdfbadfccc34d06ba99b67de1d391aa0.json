{"ast":null,"code":"\"use strict\";\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgConnectionOpenTryResponse = exports.MsgConnectionOpenTry = exports.MsgConnectionOpenInitResponse = exports.MsgConnectionOpenInit = exports.MsgConnectionOpenConfirmResponse = exports.MsgConnectionOpenConfirm = exports.MsgConnectionOpenAckResponse = exports.MsgConnectionOpenAck = void 0;\nvar _connection = require(\"./connection\");\nvar _any = require(\"../../../../google/protobuf/any\");\nvar _client = require(\"../../client/v1/client\");\nvar _helpers = require(\"../../../../helpers\");\nvar _m0 = _interopRequireWildcard(require(\"protobufjs/minimal\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj[\"default\"] = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction createBaseMsgConnectionOpenInit() {\n  return {\n    clientId: \"\",\n    counterparty: _connection.Counterparty.fromPartial({}),\n    version: _connection.Version.fromPartial({}),\n    delayPeriod: _helpers.Long.UZERO,\n    signer: \"\"\n  };\n}\nvar MsgConnectionOpenInit = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.clientId !== \"\") {\n      writer.uint32(10).string(message.clientId);\n    }\n    if (message.counterparty !== undefined) {\n      _connection.Counterparty.encode(message.counterparty, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.version !== undefined) {\n      _connection.Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n    }\n    if (!message.delayPeriod.isZero()) {\n      writer.uint32(32).uint64(message.delayPeriod);\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(42).string(message.signer);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgConnectionOpenInit();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n        case 2:\n          message.counterparty = _connection.Counterparty.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.version = _connection.Version.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.delayPeriod = reader.uint64();\n          break;\n        case 5:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$clientId, _object$signer;\n    var message = createBaseMsgConnectionOpenInit();\n    message.clientId = (_object$clientId = object.clientId) !== null && _object$clientId !== void 0 ? _object$clientId : \"\";\n    message.counterparty = object.counterparty !== undefined && object.counterparty !== null ? _connection.Counterparty.fromPartial(object.counterparty) : undefined;\n    message.version = object.version !== undefined && object.version !== null ? _connection.Version.fromPartial(object.version) : undefined;\n    message.delayPeriod = object.delayPeriod !== undefined && object.delayPeriod !== null ? _helpers.Long.fromValue(object.delayPeriod) : _helpers.Long.UZERO;\n    message.signer = (_object$signer = object.signer) !== null && _object$signer !== void 0 ? _object$signer : \"\";\n    return message;\n  }\n};\nexports.MsgConnectionOpenInit = MsgConnectionOpenInit;\nfunction createBaseMsgConnectionOpenInitResponse() {\n  return {};\n}\nvar MsgConnectionOpenInitResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgConnectionOpenInitResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseMsgConnectionOpenInitResponse();\n    return message;\n  }\n};\nexports.MsgConnectionOpenInitResponse = MsgConnectionOpenInitResponse;\nfunction createBaseMsgConnectionOpenTry() {\n  return {\n    clientId: \"\",\n    previousConnectionId: \"\",\n    clientState: undefined,\n    counterparty: _connection.Counterparty.fromPartial({}),\n    delayPeriod: _helpers.Long.UZERO,\n    counterpartyVersions: [],\n    proofHeight: _client.Height.fromPartial({}),\n    proofInit: new Uint8Array(),\n    proofClient: new Uint8Array(),\n    proofConsensus: new Uint8Array(),\n    consensusHeight: _client.Height.fromPartial({}),\n    signer: \"\"\n  };\n}\nvar MsgConnectionOpenTry = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.clientId !== \"\") {\n      writer.uint32(10).string(message.clientId);\n    }\n    if (message.previousConnectionId !== \"\") {\n      writer.uint32(18).string(message.previousConnectionId);\n    }\n    if (message.clientState !== undefined) {\n      _any.Any.encode(message.clientState, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.counterparty !== undefined) {\n      _connection.Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n    }\n    if (!message.delayPeriod.isZero()) {\n      writer.uint32(40).uint64(message.delayPeriod);\n    }\n    var _iterator = _createForOfIteratorHelper(message.counterpartyVersions),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        _connection.Version.encode(v, writer.uint32(50).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(58).fork()).ldelim();\n    }\n    if (message.proofInit.length !== 0) {\n      writer.uint32(66).bytes(message.proofInit);\n    }\n    if (message.proofClient.length !== 0) {\n      writer.uint32(74).bytes(message.proofClient);\n    }\n    if (message.proofConsensus.length !== 0) {\n      writer.uint32(82).bytes(message.proofConsensus);\n    }\n    if (message.consensusHeight !== undefined) {\n      _client.Height.encode(message.consensusHeight, writer.uint32(90).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(98).string(message.signer);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgConnectionOpenTry();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n        case 2:\n          message.previousConnectionId = reader.string();\n          break;\n        case 3:\n          message.clientState = _any.Any.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.counterparty = _connection.Counterparty.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.delayPeriod = reader.uint64();\n          break;\n        case 6:\n          message.counterpartyVersions.push(_connection.Version.decode(reader, reader.uint32()));\n          break;\n        case 7:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        case 8:\n          message.proofInit = reader.bytes();\n          break;\n        case 9:\n          message.proofClient = reader.bytes();\n          break;\n        case 10:\n          message.proofConsensus = reader.bytes();\n          break;\n        case 11:\n          message.consensusHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        case 12:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$clientId2, _object$previousConne, _object$counterpartyV, _object$proofInit, _object$proofClient, _object$proofConsensu, _object$signer2;\n    var message = createBaseMsgConnectionOpenTry();\n    message.clientId = (_object$clientId2 = object.clientId) !== null && _object$clientId2 !== void 0 ? _object$clientId2 : \"\";\n    message.previousConnectionId = (_object$previousConne = object.previousConnectionId) !== null && _object$previousConne !== void 0 ? _object$previousConne : \"\";\n    message.clientState = object.clientState !== undefined && object.clientState !== null ? _any.Any.fromPartial(object.clientState) : undefined;\n    message.counterparty = object.counterparty !== undefined && object.counterparty !== null ? _connection.Counterparty.fromPartial(object.counterparty) : undefined;\n    message.delayPeriod = object.delayPeriod !== undefined && object.delayPeriod !== null ? _helpers.Long.fromValue(object.delayPeriod) : _helpers.Long.UZERO;\n    message.counterpartyVersions = ((_object$counterpartyV = object.counterpartyVersions) === null || _object$counterpartyV === void 0 ? void 0 : _object$counterpartyV.map(function (e) {\n      return _connection.Version.fromPartial(e);\n    })) || [];\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    message.proofInit = (_object$proofInit = object.proofInit) !== null && _object$proofInit !== void 0 ? _object$proofInit : new Uint8Array();\n    message.proofClient = (_object$proofClient = object.proofClient) !== null && _object$proofClient !== void 0 ? _object$proofClient : new Uint8Array();\n    message.proofConsensus = (_object$proofConsensu = object.proofConsensus) !== null && _object$proofConsensu !== void 0 ? _object$proofConsensu : new Uint8Array();\n    message.consensusHeight = object.consensusHeight !== undefined && object.consensusHeight !== null ? _client.Height.fromPartial(object.consensusHeight) : undefined;\n    message.signer = (_object$signer2 = object.signer) !== null && _object$signer2 !== void 0 ? _object$signer2 : \"\";\n    return message;\n  }\n};\nexports.MsgConnectionOpenTry = MsgConnectionOpenTry;\nfunction createBaseMsgConnectionOpenTryResponse() {\n  return {};\n}\nvar MsgConnectionOpenTryResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgConnectionOpenTryResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseMsgConnectionOpenTryResponse();\n    return message;\n  }\n};\nexports.MsgConnectionOpenTryResponse = MsgConnectionOpenTryResponse;\nfunction createBaseMsgConnectionOpenAck() {\n  return {\n    connectionId: \"\",\n    counterpartyConnectionId: \"\",\n    version: _connection.Version.fromPartial({}),\n    clientState: undefined,\n    proofHeight: _client.Height.fromPartial({}),\n    proofTry: new Uint8Array(),\n    proofClient: new Uint8Array(),\n    proofConsensus: new Uint8Array(),\n    consensusHeight: _client.Height.fromPartial({}),\n    signer: \"\"\n  };\n}\nvar MsgConnectionOpenAck = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.connectionId !== \"\") {\n      writer.uint32(10).string(message.connectionId);\n    }\n    if (message.counterpartyConnectionId !== \"\") {\n      writer.uint32(18).string(message.counterpartyConnectionId);\n    }\n    if (message.version !== undefined) {\n      _connection.Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.clientState !== undefined) {\n      _any.Any.encode(message.clientState, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(42).fork()).ldelim();\n    }\n    if (message.proofTry.length !== 0) {\n      writer.uint32(50).bytes(message.proofTry);\n    }\n    if (message.proofClient.length !== 0) {\n      writer.uint32(58).bytes(message.proofClient);\n    }\n    if (message.proofConsensus.length !== 0) {\n      writer.uint32(66).bytes(message.proofConsensus);\n    }\n    if (message.consensusHeight !== undefined) {\n      _client.Height.encode(message.consensusHeight, writer.uint32(74).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(82).string(message.signer);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgConnectionOpenAck();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connectionId = reader.string();\n          break;\n        case 2:\n          message.counterpartyConnectionId = reader.string();\n          break;\n        case 3:\n          message.version = _connection.Version.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.clientState = _any.Any.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        case 6:\n          message.proofTry = reader.bytes();\n          break;\n        case 7:\n          message.proofClient = reader.bytes();\n          break;\n        case 8:\n          message.proofConsensus = reader.bytes();\n          break;\n        case 9:\n          message.consensusHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        case 10:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$connectionId, _object$counterpartyC, _object$proofTry, _object$proofClient2, _object$proofConsensu2, _object$signer3;\n    var message = createBaseMsgConnectionOpenAck();\n    message.connectionId = (_object$connectionId = object.connectionId) !== null && _object$connectionId !== void 0 ? _object$connectionId : \"\";\n    message.counterpartyConnectionId = (_object$counterpartyC = object.counterpartyConnectionId) !== null && _object$counterpartyC !== void 0 ? _object$counterpartyC : \"\";\n    message.version = object.version !== undefined && object.version !== null ? _connection.Version.fromPartial(object.version) : undefined;\n    message.clientState = object.clientState !== undefined && object.clientState !== null ? _any.Any.fromPartial(object.clientState) : undefined;\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    message.proofTry = (_object$proofTry = object.proofTry) !== null && _object$proofTry !== void 0 ? _object$proofTry : new Uint8Array();\n    message.proofClient = (_object$proofClient2 = object.proofClient) !== null && _object$proofClient2 !== void 0 ? _object$proofClient2 : new Uint8Array();\n    message.proofConsensus = (_object$proofConsensu2 = object.proofConsensus) !== null && _object$proofConsensu2 !== void 0 ? _object$proofConsensu2 : new Uint8Array();\n    message.consensusHeight = object.consensusHeight !== undefined && object.consensusHeight !== null ? _client.Height.fromPartial(object.consensusHeight) : undefined;\n    message.signer = (_object$signer3 = object.signer) !== null && _object$signer3 !== void 0 ? _object$signer3 : \"\";\n    return message;\n  }\n};\nexports.MsgConnectionOpenAck = MsgConnectionOpenAck;\nfunction createBaseMsgConnectionOpenAckResponse() {\n  return {};\n}\nvar MsgConnectionOpenAckResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgConnectionOpenAckResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseMsgConnectionOpenAckResponse();\n    return message;\n  }\n};\nexports.MsgConnectionOpenAckResponse = MsgConnectionOpenAckResponse;\nfunction createBaseMsgConnectionOpenConfirm() {\n  return {\n    connectionId: \"\",\n    proofAck: new Uint8Array(),\n    proofHeight: _client.Height.fromPartial({}),\n    signer: \"\"\n  };\n}\nvar MsgConnectionOpenConfirm = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.connectionId !== \"\") {\n      writer.uint32(10).string(message.connectionId);\n    }\n    if (message.proofAck.length !== 0) {\n      writer.uint32(18).bytes(message.proofAck);\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(34).string(message.signer);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgConnectionOpenConfirm();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connectionId = reader.string();\n          break;\n        case 2:\n          message.proofAck = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$connectionId2, _object$proofAck, _object$signer4;\n    var message = createBaseMsgConnectionOpenConfirm();\n    message.connectionId = (_object$connectionId2 = object.connectionId) !== null && _object$connectionId2 !== void 0 ? _object$connectionId2 : \"\";\n    message.proofAck = (_object$proofAck = object.proofAck) !== null && _object$proofAck !== void 0 ? _object$proofAck : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    message.signer = (_object$signer4 = object.signer) !== null && _object$signer4 !== void 0 ? _object$signer4 : \"\";\n    return message;\n  }\n};\nexports.MsgConnectionOpenConfirm = MsgConnectionOpenConfirm;\nfunction createBaseMsgConnectionOpenConfirmResponse() {\n  return {};\n}\nvar MsgConnectionOpenConfirmResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgConnectionOpenConfirmResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseMsgConnectionOpenConfirmResponse();\n    return message;\n  }\n};\nexports.MsgConnectionOpenConfirmResponse = MsgConnectionOpenConfirmResponse;","map":{"version":3,"names":["_typeof","require","Object","defineProperty","exports","value","MsgConnectionOpenTryResponse","MsgConnectionOpenTry","MsgConnectionOpenInitResponse","MsgConnectionOpenInit","MsgConnectionOpenConfirmResponse","MsgConnectionOpenConfirm","MsgConnectionOpenAckResponse","MsgConnectionOpenAck","_connection","_any","_client","_helpers","_m0","_interopRequireWildcard","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","e","_e","f","TypeError","normalCompletion","didErr","err","step","next","_e2","minLen","_arrayLikeToArray","toString","slice","constructor","name","from","test","arr","len","arr2","createBaseMsgConnectionOpenInit","clientId","counterparty","Counterparty","fromPartial","version","Version","delayPeriod","Long","UZERO","signer","encode","message","writer","arguments","undefined","Writer","create","uint32","string","fork","ldelim","isZero","uint64","decode","input","reader","Reader","end","pos","tag","skipType","object","_object$clientId","_object$signer","fromValue","createBaseMsgConnectionOpenInitResponse","_","createBaseMsgConnectionOpenTry","previousConnectionId","clientState","counterpartyVersions","proofHeight","Height","proofInit","Uint8Array","proofClient","proofConsensus","consensusHeight","Any","_iterator","_step","v","bytes","push","_object$clientId2","_object$previousConne","_object$counterpartyV","_object$proofInit","_object$proofClient","_object$proofConsensu","_object$signer2","map","createBaseMsgConnectionOpenTryResponse","createBaseMsgConnectionOpenAck","connectionId","counterpartyConnectionId","proofTry","_object$connectionId","_object$counterpartyC","_object$proofTry","_object$proofClient2","_object$proofConsensu2","_object$signer3","createBaseMsgConnectionOpenAckResponse","createBaseMsgConnectionOpenConfirm","proofAck","_object$connectionId2","_object$proofAck","_object$signer4","createBaseMsgConnectionOpenConfirmResponse"],"sources":["/Users/linanqi/Hackathon/Magic-Movie/frontend/node_modules/@sei-js/proto/main/codegen/ibc/core/connection/v1/tx.js"],"sourcesContent":["\"use strict\";\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgConnectionOpenTryResponse = exports.MsgConnectionOpenTry = exports.MsgConnectionOpenInitResponse = exports.MsgConnectionOpenInit = exports.MsgConnectionOpenConfirmResponse = exports.MsgConnectionOpenConfirm = exports.MsgConnectionOpenAckResponse = exports.MsgConnectionOpenAck = void 0;\nvar _connection = require(\"./connection\");\nvar _any = require(\"../../../../google/protobuf/any\");\nvar _client = require(\"../../client/v1/client\");\nvar _helpers = require(\"../../../../helpers\");\nvar _m0 = _interopRequireWildcard(require(\"protobufjs/minimal\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction createBaseMsgConnectionOpenInit() {\n  return {\n    clientId: \"\",\n    counterparty: _connection.Counterparty.fromPartial({}),\n    version: _connection.Version.fromPartial({}),\n    delayPeriod: _helpers.Long.UZERO,\n    signer: \"\"\n  };\n}\nvar MsgConnectionOpenInit = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.clientId !== \"\") {\n      writer.uint32(10).string(message.clientId);\n    }\n    if (message.counterparty !== undefined) {\n      _connection.Counterparty.encode(message.counterparty, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.version !== undefined) {\n      _connection.Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n    }\n    if (!message.delayPeriod.isZero()) {\n      writer.uint32(32).uint64(message.delayPeriod);\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(42).string(message.signer);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgConnectionOpenInit();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n        case 2:\n          message.counterparty = _connection.Counterparty.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.version = _connection.Version.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.delayPeriod = reader.uint64();\n          break;\n        case 5:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$clientId, _object$signer;\n    var message = createBaseMsgConnectionOpenInit();\n    message.clientId = (_object$clientId = object.clientId) !== null && _object$clientId !== void 0 ? _object$clientId : \"\";\n    message.counterparty = object.counterparty !== undefined && object.counterparty !== null ? _connection.Counterparty.fromPartial(object.counterparty) : undefined;\n    message.version = object.version !== undefined && object.version !== null ? _connection.Version.fromPartial(object.version) : undefined;\n    message.delayPeriod = object.delayPeriod !== undefined && object.delayPeriod !== null ? _helpers.Long.fromValue(object.delayPeriod) : _helpers.Long.UZERO;\n    message.signer = (_object$signer = object.signer) !== null && _object$signer !== void 0 ? _object$signer : \"\";\n    return message;\n  }\n};\nexports.MsgConnectionOpenInit = MsgConnectionOpenInit;\nfunction createBaseMsgConnectionOpenInitResponse() {\n  return {};\n}\nvar MsgConnectionOpenInitResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgConnectionOpenInitResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseMsgConnectionOpenInitResponse();\n    return message;\n  }\n};\nexports.MsgConnectionOpenInitResponse = MsgConnectionOpenInitResponse;\nfunction createBaseMsgConnectionOpenTry() {\n  return {\n    clientId: \"\",\n    previousConnectionId: \"\",\n    clientState: undefined,\n    counterparty: _connection.Counterparty.fromPartial({}),\n    delayPeriod: _helpers.Long.UZERO,\n    counterpartyVersions: [],\n    proofHeight: _client.Height.fromPartial({}),\n    proofInit: new Uint8Array(),\n    proofClient: new Uint8Array(),\n    proofConsensus: new Uint8Array(),\n    consensusHeight: _client.Height.fromPartial({}),\n    signer: \"\"\n  };\n}\nvar MsgConnectionOpenTry = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.clientId !== \"\") {\n      writer.uint32(10).string(message.clientId);\n    }\n    if (message.previousConnectionId !== \"\") {\n      writer.uint32(18).string(message.previousConnectionId);\n    }\n    if (message.clientState !== undefined) {\n      _any.Any.encode(message.clientState, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.counterparty !== undefined) {\n      _connection.Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n    }\n    if (!message.delayPeriod.isZero()) {\n      writer.uint32(40).uint64(message.delayPeriod);\n    }\n    var _iterator = _createForOfIteratorHelper(message.counterpartyVersions),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        _connection.Version.encode(v, writer.uint32(50).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(58).fork()).ldelim();\n    }\n    if (message.proofInit.length !== 0) {\n      writer.uint32(66).bytes(message.proofInit);\n    }\n    if (message.proofClient.length !== 0) {\n      writer.uint32(74).bytes(message.proofClient);\n    }\n    if (message.proofConsensus.length !== 0) {\n      writer.uint32(82).bytes(message.proofConsensus);\n    }\n    if (message.consensusHeight !== undefined) {\n      _client.Height.encode(message.consensusHeight, writer.uint32(90).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(98).string(message.signer);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgConnectionOpenTry();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n        case 2:\n          message.previousConnectionId = reader.string();\n          break;\n        case 3:\n          message.clientState = _any.Any.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.counterparty = _connection.Counterparty.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.delayPeriod = reader.uint64();\n          break;\n        case 6:\n          message.counterpartyVersions.push(_connection.Version.decode(reader, reader.uint32()));\n          break;\n        case 7:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        case 8:\n          message.proofInit = reader.bytes();\n          break;\n        case 9:\n          message.proofClient = reader.bytes();\n          break;\n        case 10:\n          message.proofConsensus = reader.bytes();\n          break;\n        case 11:\n          message.consensusHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        case 12:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$clientId2, _object$previousConne, _object$counterpartyV, _object$proofInit, _object$proofClient, _object$proofConsensu, _object$signer2;\n    var message = createBaseMsgConnectionOpenTry();\n    message.clientId = (_object$clientId2 = object.clientId) !== null && _object$clientId2 !== void 0 ? _object$clientId2 : \"\";\n    message.previousConnectionId = (_object$previousConne = object.previousConnectionId) !== null && _object$previousConne !== void 0 ? _object$previousConne : \"\";\n    message.clientState = object.clientState !== undefined && object.clientState !== null ? _any.Any.fromPartial(object.clientState) : undefined;\n    message.counterparty = object.counterparty !== undefined && object.counterparty !== null ? _connection.Counterparty.fromPartial(object.counterparty) : undefined;\n    message.delayPeriod = object.delayPeriod !== undefined && object.delayPeriod !== null ? _helpers.Long.fromValue(object.delayPeriod) : _helpers.Long.UZERO;\n    message.counterpartyVersions = ((_object$counterpartyV = object.counterpartyVersions) === null || _object$counterpartyV === void 0 ? void 0 : _object$counterpartyV.map(function (e) {\n      return _connection.Version.fromPartial(e);\n    })) || [];\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    message.proofInit = (_object$proofInit = object.proofInit) !== null && _object$proofInit !== void 0 ? _object$proofInit : new Uint8Array();\n    message.proofClient = (_object$proofClient = object.proofClient) !== null && _object$proofClient !== void 0 ? _object$proofClient : new Uint8Array();\n    message.proofConsensus = (_object$proofConsensu = object.proofConsensus) !== null && _object$proofConsensu !== void 0 ? _object$proofConsensu : new Uint8Array();\n    message.consensusHeight = object.consensusHeight !== undefined && object.consensusHeight !== null ? _client.Height.fromPartial(object.consensusHeight) : undefined;\n    message.signer = (_object$signer2 = object.signer) !== null && _object$signer2 !== void 0 ? _object$signer2 : \"\";\n    return message;\n  }\n};\nexports.MsgConnectionOpenTry = MsgConnectionOpenTry;\nfunction createBaseMsgConnectionOpenTryResponse() {\n  return {};\n}\nvar MsgConnectionOpenTryResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgConnectionOpenTryResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseMsgConnectionOpenTryResponse();\n    return message;\n  }\n};\nexports.MsgConnectionOpenTryResponse = MsgConnectionOpenTryResponse;\nfunction createBaseMsgConnectionOpenAck() {\n  return {\n    connectionId: \"\",\n    counterpartyConnectionId: \"\",\n    version: _connection.Version.fromPartial({}),\n    clientState: undefined,\n    proofHeight: _client.Height.fromPartial({}),\n    proofTry: new Uint8Array(),\n    proofClient: new Uint8Array(),\n    proofConsensus: new Uint8Array(),\n    consensusHeight: _client.Height.fromPartial({}),\n    signer: \"\"\n  };\n}\nvar MsgConnectionOpenAck = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.connectionId !== \"\") {\n      writer.uint32(10).string(message.connectionId);\n    }\n    if (message.counterpartyConnectionId !== \"\") {\n      writer.uint32(18).string(message.counterpartyConnectionId);\n    }\n    if (message.version !== undefined) {\n      _connection.Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.clientState !== undefined) {\n      _any.Any.encode(message.clientState, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(42).fork()).ldelim();\n    }\n    if (message.proofTry.length !== 0) {\n      writer.uint32(50).bytes(message.proofTry);\n    }\n    if (message.proofClient.length !== 0) {\n      writer.uint32(58).bytes(message.proofClient);\n    }\n    if (message.proofConsensus.length !== 0) {\n      writer.uint32(66).bytes(message.proofConsensus);\n    }\n    if (message.consensusHeight !== undefined) {\n      _client.Height.encode(message.consensusHeight, writer.uint32(74).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(82).string(message.signer);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgConnectionOpenAck();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connectionId = reader.string();\n          break;\n        case 2:\n          message.counterpartyConnectionId = reader.string();\n          break;\n        case 3:\n          message.version = _connection.Version.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.clientState = _any.Any.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        case 6:\n          message.proofTry = reader.bytes();\n          break;\n        case 7:\n          message.proofClient = reader.bytes();\n          break;\n        case 8:\n          message.proofConsensus = reader.bytes();\n          break;\n        case 9:\n          message.consensusHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        case 10:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$connectionId, _object$counterpartyC, _object$proofTry, _object$proofClient2, _object$proofConsensu2, _object$signer3;\n    var message = createBaseMsgConnectionOpenAck();\n    message.connectionId = (_object$connectionId = object.connectionId) !== null && _object$connectionId !== void 0 ? _object$connectionId : \"\";\n    message.counterpartyConnectionId = (_object$counterpartyC = object.counterpartyConnectionId) !== null && _object$counterpartyC !== void 0 ? _object$counterpartyC : \"\";\n    message.version = object.version !== undefined && object.version !== null ? _connection.Version.fromPartial(object.version) : undefined;\n    message.clientState = object.clientState !== undefined && object.clientState !== null ? _any.Any.fromPartial(object.clientState) : undefined;\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    message.proofTry = (_object$proofTry = object.proofTry) !== null && _object$proofTry !== void 0 ? _object$proofTry : new Uint8Array();\n    message.proofClient = (_object$proofClient2 = object.proofClient) !== null && _object$proofClient2 !== void 0 ? _object$proofClient2 : new Uint8Array();\n    message.proofConsensus = (_object$proofConsensu2 = object.proofConsensus) !== null && _object$proofConsensu2 !== void 0 ? _object$proofConsensu2 : new Uint8Array();\n    message.consensusHeight = object.consensusHeight !== undefined && object.consensusHeight !== null ? _client.Height.fromPartial(object.consensusHeight) : undefined;\n    message.signer = (_object$signer3 = object.signer) !== null && _object$signer3 !== void 0 ? _object$signer3 : \"\";\n    return message;\n  }\n};\nexports.MsgConnectionOpenAck = MsgConnectionOpenAck;\nfunction createBaseMsgConnectionOpenAckResponse() {\n  return {};\n}\nvar MsgConnectionOpenAckResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgConnectionOpenAckResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseMsgConnectionOpenAckResponse();\n    return message;\n  }\n};\nexports.MsgConnectionOpenAckResponse = MsgConnectionOpenAckResponse;\nfunction createBaseMsgConnectionOpenConfirm() {\n  return {\n    connectionId: \"\",\n    proofAck: new Uint8Array(),\n    proofHeight: _client.Height.fromPartial({}),\n    signer: \"\"\n  };\n}\nvar MsgConnectionOpenConfirm = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.connectionId !== \"\") {\n      writer.uint32(10).string(message.connectionId);\n    }\n    if (message.proofAck.length !== 0) {\n      writer.uint32(18).bytes(message.proofAck);\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(34).string(message.signer);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgConnectionOpenConfirm();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connectionId = reader.string();\n          break;\n        case 2:\n          message.proofAck = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$connectionId2, _object$proofAck, _object$signer4;\n    var message = createBaseMsgConnectionOpenConfirm();\n    message.connectionId = (_object$connectionId2 = object.connectionId) !== null && _object$connectionId2 !== void 0 ? _object$connectionId2 : \"\";\n    message.proofAck = (_object$proofAck = object.proofAck) !== null && _object$proofAck !== void 0 ? _object$proofAck : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    message.signer = (_object$signer4 = object.signer) !== null && _object$signer4 !== void 0 ? _object$signer4 : \"\";\n    return message;\n  }\n};\nexports.MsgConnectionOpenConfirm = MsgConnectionOpenConfirm;\nfunction createBaseMsgConnectionOpenConfirmResponse() {\n  return {};\n}\nvar MsgConnectionOpenConfirmResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMsgConnectionOpenConfirmResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseMsgConnectionOpenConfirmResponse();\n    return message;\n  }\n};\nexports.MsgConnectionOpenConfirmResponse = MsgConnectionOpenConfirmResponse;"],"mappings":"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"},"metadata":{},"sourceType":"script"}