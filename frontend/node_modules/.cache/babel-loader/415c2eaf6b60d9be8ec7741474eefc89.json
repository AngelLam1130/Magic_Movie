{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/linanqi/Hackathon/GameRoom/frontend/node_modules/@babel/runtime/helpers/slicedToArray\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createStakingAminoConverters = exports.isAminoMsgUndelegate = exports.isAminoMsgBeginRedelegate = exports.isAminoMsgDelegate = exports.isAminoMsgEditValidator = exports.isAminoMsgCreateValidator = exports.protoDecimalToJson = void 0;\nvar math_1 = require(\"@cosmjs/math\");\nvar proto_signing_1 = require(\"@cosmjs/proto-signing\");\nvar utils_1 = require(\"@cosmjs/utils\");\nfunction protoDecimalToJson(decimal) {\n  var parsed = math_1.Decimal.fromAtomics(decimal, 18);\n  var _parsed$toString$spli = parsed.toString().split(\".\"),\n    _parsed$toString$spli2 = _slicedToArray(_parsed$toString$spli, 2),\n    whole = _parsed$toString$spli2[0],\n    fractional = _parsed$toString$spli2[1];\n  return \"\".concat(whole, \".\").concat((fractional !== null && fractional !== void 0 ? fractional : \"\").padEnd(18, \"0\"));\n}\nexports.protoDecimalToJson = protoDecimalToJson;\nfunction jsonDecimalToProto(decimal) {\n  var parsed = math_1.Decimal.fromUserInput(decimal, 18);\n  return parsed.atomics;\n}\nfunction isAminoMsgCreateValidator(msg) {\n  return msg.type === \"cosmos-sdk/MsgCreateValidator\";\n}\nexports.isAminoMsgCreateValidator = isAminoMsgCreateValidator;\nfunction isAminoMsgEditValidator(msg) {\n  return msg.type === \"cosmos-sdk/MsgEditValidator\";\n}\nexports.isAminoMsgEditValidator = isAminoMsgEditValidator;\nfunction isAminoMsgDelegate(msg) {\n  return msg.type === \"cosmos-sdk/MsgDelegate\";\n}\nexports.isAminoMsgDelegate = isAminoMsgDelegate;\nfunction isAminoMsgBeginRedelegate(msg) {\n  return msg.type === \"cosmos-sdk/MsgBeginRedelegate\";\n}\nexports.isAminoMsgBeginRedelegate = isAminoMsgBeginRedelegate;\nfunction isAminoMsgUndelegate(msg) {\n  return msg.type === \"cosmos-sdk/MsgUndelegate\";\n}\nexports.isAminoMsgUndelegate = isAminoMsgUndelegate;\nfunction createStakingAminoConverters(_prefix) {\n  return {\n    \"/cosmos.staking.v1beta1.MsgBeginRedelegate\": {\n      aminoType: \"cosmos-sdk/MsgBeginRedelegate\",\n      toAmino: function toAmino(_ref) {\n        var delegatorAddress = _ref.delegatorAddress,\n          validatorSrcAddress = _ref.validatorSrcAddress,\n          validatorDstAddress = _ref.validatorDstAddress,\n          amount = _ref.amount;\n        (0, utils_1.assertDefinedAndNotNull)(amount, \"missing amount\");\n        return {\n          delegator_address: delegatorAddress,\n          validator_src_address: validatorSrcAddress,\n          validator_dst_address: validatorDstAddress,\n          amount: amount\n        };\n      },\n      fromAmino: function fromAmino(_ref2) {\n        var delegator_address = _ref2.delegator_address,\n          validator_src_address = _ref2.validator_src_address,\n          validator_dst_address = _ref2.validator_dst_address,\n          amount = _ref2.amount;\n        return {\n          delegatorAddress: delegator_address,\n          validatorSrcAddress: validator_src_address,\n          validatorDstAddress: validator_dst_address,\n          amount: amount\n        };\n      }\n    },\n    \"/cosmos.staking.v1beta1.MsgCreateValidator\": {\n      aminoType: \"cosmos-sdk/MsgCreateValidator\",\n      toAmino: function toAmino(_ref3) {\n        var description = _ref3.description,\n          commission = _ref3.commission,\n          minSelfDelegation = _ref3.minSelfDelegation,\n          delegatorAddress = _ref3.delegatorAddress,\n          validatorAddress = _ref3.validatorAddress,\n          pubkey = _ref3.pubkey,\n          value = _ref3.value;\n        (0, utils_1.assertDefinedAndNotNull)(description, \"missing description\");\n        (0, utils_1.assertDefinedAndNotNull)(commission, \"missing commission\");\n        (0, utils_1.assertDefinedAndNotNull)(pubkey, \"missing pubkey\");\n        (0, utils_1.assertDefinedAndNotNull)(value, \"missing value\");\n        return {\n          description: {\n            moniker: description.moniker,\n            identity: description.identity,\n            website: description.website,\n            security_contact: description.securityContact,\n            details: description.details\n          },\n          commission: {\n            rate: protoDecimalToJson(commission.rate),\n            max_rate: protoDecimalToJson(commission.maxRate),\n            max_change_rate: protoDecimalToJson(commission.maxChangeRate)\n          },\n          min_self_delegation: minSelfDelegation,\n          delegator_address: delegatorAddress,\n          validator_address: validatorAddress,\n          pubkey: (0, proto_signing_1.anyToSinglePubkey)(pubkey),\n          value: value\n        };\n      },\n      fromAmino: function fromAmino(_ref4) {\n        var description = _ref4.description,\n          commission = _ref4.commission,\n          min_self_delegation = _ref4.min_self_delegation,\n          delegator_address = _ref4.delegator_address,\n          validator_address = _ref4.validator_address,\n          pubkey = _ref4.pubkey,\n          value = _ref4.value;\n        return {\n          description: {\n            moniker: description.moniker,\n            identity: description.identity,\n            website: description.website,\n            securityContact: description.security_contact,\n            details: description.details\n          },\n          commission: {\n            rate: jsonDecimalToProto(commission.rate),\n            maxRate: jsonDecimalToProto(commission.max_rate),\n            maxChangeRate: jsonDecimalToProto(commission.max_change_rate)\n          },\n          minSelfDelegation: min_self_delegation,\n          delegatorAddress: delegator_address,\n          validatorAddress: validator_address,\n          pubkey: (0, proto_signing_1.encodePubkey)(pubkey),\n          value: value\n        };\n      }\n    },\n    \"/cosmos.staking.v1beta1.MsgDelegate\": {\n      aminoType: \"cosmos-sdk/MsgDelegate\",\n      toAmino: function toAmino(_ref5) {\n        var delegatorAddress = _ref5.delegatorAddress,\n          validatorAddress = _ref5.validatorAddress,\n          amount = _ref5.amount;\n        (0, utils_1.assertDefinedAndNotNull)(amount, \"missing amount\");\n        return {\n          delegator_address: delegatorAddress,\n          validator_address: validatorAddress,\n          amount: amount\n        };\n      },\n      fromAmino: function fromAmino(_ref6) {\n        var delegator_address = _ref6.delegator_address,\n          validator_address = _ref6.validator_address,\n          amount = _ref6.amount;\n        return {\n          delegatorAddress: delegator_address,\n          validatorAddress: validator_address,\n          amount: amount\n        };\n      }\n    },\n    \"/cosmos.staking.v1beta1.MsgEditValidator\": {\n      aminoType: \"cosmos-sdk/MsgEditValidator\",\n      toAmino: function toAmino(_ref7) {\n        var description = _ref7.description,\n          commissionRate = _ref7.commissionRate,\n          minSelfDelegation = _ref7.minSelfDelegation,\n          validatorAddress = _ref7.validatorAddress;\n        (0, utils_1.assertDefinedAndNotNull)(description, \"missing description\");\n        return {\n          description: {\n            moniker: description.moniker,\n            identity: description.identity,\n            website: description.website,\n            security_contact: description.securityContact,\n            details: description.details\n          },\n          // empty string in the protobuf document means \"do not change\"\n          commission_rate: commissionRate ? protoDecimalToJson(commissionRate) : undefined,\n          // empty string in the protobuf document means \"do not change\"\n          min_self_delegation: minSelfDelegation ? minSelfDelegation : undefined,\n          validator_address: validatorAddress\n        };\n      },\n      fromAmino: function fromAmino(_ref8) {\n        var description = _ref8.description,\n          commission_rate = _ref8.commission_rate,\n          min_self_delegation = _ref8.min_self_delegation,\n          validator_address = _ref8.validator_address;\n        return {\n          description: {\n            moniker: description.moniker,\n            identity: description.identity,\n            website: description.website,\n            securityContact: description.security_contact,\n            details: description.details\n          },\n          // empty string in the protobuf document means \"do not change\"\n          commissionRate: commission_rate ? jsonDecimalToProto(commission_rate) : \"\",\n          // empty string in the protobuf document means \"do not change\"\n          minSelfDelegation: min_self_delegation !== null && min_self_delegation !== void 0 ? min_self_delegation : \"\",\n          validatorAddress: validator_address\n        };\n      }\n    },\n    \"/cosmos.staking.v1beta1.MsgUndelegate\": {\n      aminoType: \"cosmos-sdk/MsgUndelegate\",\n      toAmino: function toAmino(_ref9) {\n        var delegatorAddress = _ref9.delegatorAddress,\n          validatorAddress = _ref9.validatorAddress,\n          amount = _ref9.amount;\n        (0, utils_1.assertDefinedAndNotNull)(amount, \"missing amount\");\n        return {\n          delegator_address: delegatorAddress,\n          validator_address: validatorAddress,\n          amount: amount\n        };\n      },\n      fromAmino: function fromAmino(_ref10) {\n        var delegator_address = _ref10.delegator_address,\n          validator_address = _ref10.validator_address,\n          amount = _ref10.amount;\n        return {\n          delegatorAddress: delegator_address,\n          validatorAddress: validator_address,\n          amount: amount\n        };\n      }\n    }\n  };\n}\nexports.createStakingAminoConverters = createStakingAminoConverters;","map":null,"metadata":{},"sourceType":"script"}