{"ast":null,"code":"\"use strict\";\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.QueryConnectionsResponse = exports.QueryConnectionsRequest = exports.QueryConnectionResponse = exports.QueryConnectionRequest = exports.QueryConnectionConsensusStateResponse = exports.QueryConnectionConsensusStateRequest = exports.QueryConnectionClientStateResponse = exports.QueryConnectionClientStateRequest = exports.QueryClientConnectionsResponse = exports.QueryClientConnectionsRequest = void 0;\nvar _pagination = require(\"../../../../cosmos/base/query/v1beta1/pagination\");\nvar _connection = require(\"./connection\");\nvar _client = require(\"../../client/v1/client\");\nvar _any = require(\"../../../../google/protobuf/any\");\nvar _helpers = require(\"../../../../helpers\");\nvar _m0 = _interopRequireWildcard(require(\"protobufjs/minimal\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj[\"default\"] = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction createBaseQueryConnectionRequest() {\n  return {\n    connectionId: \"\"\n  };\n}\nvar QueryConnectionRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.connectionId !== \"\") {\n      writer.uint32(10).string(message.connectionId);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryConnectionRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connectionId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$connectionId;\n    var message = createBaseQueryConnectionRequest();\n    message.connectionId = (_object$connectionId = object.connectionId) !== null && _object$connectionId !== void 0 ? _object$connectionId : \"\";\n    return message;\n  }\n};\nexports.QueryConnectionRequest = QueryConnectionRequest;\nfunction createBaseQueryConnectionResponse() {\n  return {\n    connection: _connection.ConnectionEnd.fromPartial({}),\n    proof: new Uint8Array(),\n    proofHeight: _client.Height.fromPartial({})\n  };\n}\nvar QueryConnectionResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.connection !== undefined) {\n      _connection.ConnectionEnd.encode(message.connection, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(18).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryConnectionResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connection = _connection.ConnectionEnd.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.proof = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$proof;\n    var message = createBaseQueryConnectionResponse();\n    message.connection = object.connection !== undefined && object.connection !== null ? _connection.ConnectionEnd.fromPartial(object.connection) : undefined;\n    message.proof = (_object$proof = object.proof) !== null && _object$proof !== void 0 ? _object$proof : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    return message;\n  }\n};\nexports.QueryConnectionResponse = QueryConnectionResponse;\nfunction createBaseQueryConnectionsRequest() {\n  return {\n    pagination: _pagination.PageRequest.fromPartial({})\n  };\n}\nvar QueryConnectionsRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.pagination !== undefined) {\n      _pagination.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryConnectionsRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.pagination = _pagination.PageRequest.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseQueryConnectionsRequest();\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? _pagination.PageRequest.fromPartial(object.pagination) : undefined;\n    return message;\n  }\n};\nexports.QueryConnectionsRequest = QueryConnectionsRequest;\nfunction createBaseQueryConnectionsResponse() {\n  return {\n    connections: [],\n    pagination: _pagination.PageResponse.fromPartial({}),\n    height: _client.Height.fromPartial({})\n  };\n}\nvar QueryConnectionsResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    var _iterator = _createForOfIteratorHelper(message.connections),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        _connection.IdentifiedConnection.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    if (message.pagination !== undefined) {\n      _pagination.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.height !== undefined) {\n      _client.Height.encode(message.height, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryConnectionsResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connections.push(_connection.IdentifiedConnection.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.pagination = _pagination.PageResponse.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.height = _client.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$connections;\n    var message = createBaseQueryConnectionsResponse();\n    message.connections = ((_object$connections = object.connections) === null || _object$connections === void 0 ? void 0 : _object$connections.map(function (e) {\n      return _connection.IdentifiedConnection.fromPartial(e);\n    })) || [];\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? _pagination.PageResponse.fromPartial(object.pagination) : undefined;\n    message.height = object.height !== undefined && object.height !== null ? _client.Height.fromPartial(object.height) : undefined;\n    return message;\n  }\n};\nexports.QueryConnectionsResponse = QueryConnectionsResponse;\nfunction createBaseQueryClientConnectionsRequest() {\n  return {\n    clientId: \"\"\n  };\n}\nvar QueryClientConnectionsRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.clientId !== \"\") {\n      writer.uint32(10).string(message.clientId);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryClientConnectionsRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$clientId;\n    var message = createBaseQueryClientConnectionsRequest();\n    message.clientId = (_object$clientId = object.clientId) !== null && _object$clientId !== void 0 ? _object$clientId : \"\";\n    return message;\n  }\n};\nexports.QueryClientConnectionsRequest = QueryClientConnectionsRequest;\nfunction createBaseQueryClientConnectionsResponse() {\n  return {\n    connectionPaths: [],\n    proof: new Uint8Array(),\n    proofHeight: _client.Height.fromPartial({})\n  };\n}\nvar QueryClientConnectionsResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    var _iterator2 = _createForOfIteratorHelper(message.connectionPaths),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var v = _step2.value;\n        writer.uint32(10).string(v);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(18).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryClientConnectionsResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connectionPaths.push(reader.string());\n          break;\n        case 2:\n          message.proof = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$connectionPat, _object$proof2;\n    var message = createBaseQueryClientConnectionsResponse();\n    message.connectionPaths = ((_object$connectionPat = object.connectionPaths) === null || _object$connectionPat === void 0 ? void 0 : _object$connectionPat.map(function (e) {\n      return e;\n    })) || [];\n    message.proof = (_object$proof2 = object.proof) !== null && _object$proof2 !== void 0 ? _object$proof2 : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    return message;\n  }\n};\nexports.QueryClientConnectionsResponse = QueryClientConnectionsResponse;\nfunction createBaseQueryConnectionClientStateRequest() {\n  return {\n    connectionId: \"\"\n  };\n}\nvar QueryConnectionClientStateRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.connectionId !== \"\") {\n      writer.uint32(10).string(message.connectionId);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryConnectionClientStateRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connectionId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$connectionId2;\n    var message = createBaseQueryConnectionClientStateRequest();\n    message.connectionId = (_object$connectionId2 = object.connectionId) !== null && _object$connectionId2 !== void 0 ? _object$connectionId2 : \"\";\n    return message;\n  }\n};\nexports.QueryConnectionClientStateRequest = QueryConnectionClientStateRequest;\nfunction createBaseQueryConnectionClientStateResponse() {\n  return {\n    identifiedClientState: _client.IdentifiedClientState.fromPartial({}),\n    proof: new Uint8Array(),\n    proofHeight: _client.Height.fromPartial({})\n  };\n}\nvar QueryConnectionClientStateResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.identifiedClientState !== undefined) {\n      _client.IdentifiedClientState.encode(message.identifiedClientState, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(18).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryConnectionClientStateResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.identifiedClientState = _client.IdentifiedClientState.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.proof = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$proof3;\n    var message = createBaseQueryConnectionClientStateResponse();\n    message.identifiedClientState = object.identifiedClientState !== undefined && object.identifiedClientState !== null ? _client.IdentifiedClientState.fromPartial(object.identifiedClientState) : undefined;\n    message.proof = (_object$proof3 = object.proof) !== null && _object$proof3 !== void 0 ? _object$proof3 : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    return message;\n  }\n};\nexports.QueryConnectionClientStateResponse = QueryConnectionClientStateResponse;\nfunction createBaseQueryConnectionConsensusStateRequest() {\n  return {\n    connectionId: \"\",\n    revisionNumber: _helpers.Long.UZERO,\n    revisionHeight: _helpers.Long.UZERO\n  };\n}\nvar QueryConnectionConsensusStateRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.connectionId !== \"\") {\n      writer.uint32(10).string(message.connectionId);\n    }\n    if (!message.revisionNumber.isZero()) {\n      writer.uint32(16).uint64(message.revisionNumber);\n    }\n    if (!message.revisionHeight.isZero()) {\n      writer.uint32(24).uint64(message.revisionHeight);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryConnectionConsensusStateRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connectionId = reader.string();\n          break;\n        case 2:\n          message.revisionNumber = reader.uint64();\n          break;\n        case 3:\n          message.revisionHeight = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$connectionId3;\n    var message = createBaseQueryConnectionConsensusStateRequest();\n    message.connectionId = (_object$connectionId3 = object.connectionId) !== null && _object$connectionId3 !== void 0 ? _object$connectionId3 : \"\";\n    message.revisionNumber = object.revisionNumber !== undefined && object.revisionNumber !== null ? _helpers.Long.fromValue(object.revisionNumber) : _helpers.Long.UZERO;\n    message.revisionHeight = object.revisionHeight !== undefined && object.revisionHeight !== null ? _helpers.Long.fromValue(object.revisionHeight) : _helpers.Long.UZERO;\n    return message;\n  }\n};\nexports.QueryConnectionConsensusStateRequest = QueryConnectionConsensusStateRequest;\nfunction createBaseQueryConnectionConsensusStateResponse() {\n  return {\n    consensusState: undefined,\n    clientId: \"\",\n    proof: new Uint8Array(),\n    proofHeight: _client.Height.fromPartial({})\n  };\n}\nvar QueryConnectionConsensusStateResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.consensusState !== undefined) {\n      _any.Any.encode(message.consensusState, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.clientId !== \"\") {\n      writer.uint32(18).string(message.clientId);\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(26).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryConnectionConsensusStateResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.consensusState = _any.Any.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.clientId = reader.string();\n          break;\n        case 3:\n          message.proof = reader.bytes();\n          break;\n        case 4:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$clientId2, _object$proof4;\n    var message = createBaseQueryConnectionConsensusStateResponse();\n    message.consensusState = object.consensusState !== undefined && object.consensusState !== null ? _any.Any.fromPartial(object.consensusState) : undefined;\n    message.clientId = (_object$clientId2 = object.clientId) !== null && _object$clientId2 !== void 0 ? _object$clientId2 : \"\";\n    message.proof = (_object$proof4 = object.proof) !== null && _object$proof4 !== void 0 ? _object$proof4 : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    return message;\n  }\n};\nexports.QueryConnectionConsensusStateResponse = QueryConnectionConsensusStateResponse;","map":{"version":3,"names":["_typeof","require","Object","defineProperty","exports","value","QueryConnectionsResponse","QueryConnectionsRequest","QueryConnectionResponse","QueryConnectionRequest","QueryConnectionConsensusStateResponse","QueryConnectionConsensusStateRequest","QueryConnectionClientStateResponse","QueryConnectionClientStateRequest","QueryClientConnectionsResponse","QueryClientConnectionsRequest","_pagination","_connection","_client","_any","_helpers","_m0","_interopRequireWildcard","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","e","_e","f","TypeError","normalCompletion","didErr","err","step","next","_e2","minLen","_arrayLikeToArray","toString","slice","constructor","name","from","test","arr","len","arr2","createBaseQueryConnectionRequest","connectionId","encode","message","writer","arguments","undefined","Writer","create","uint32","string","decode","input","reader","Reader","end","pos","tag","skipType","fromPartial","object","_object$connectionId","createBaseQueryConnectionResponse","connection","ConnectionEnd","proof","Uint8Array","proofHeight","Height","fork","ldelim","bytes","_object$proof","createBaseQueryConnectionsRequest","pagination","PageRequest","createBaseQueryConnectionsResponse","connections","PageResponse","height","_iterator","_step","v","IdentifiedConnection","push","_object$connections","map","createBaseQueryClientConnectionsRequest","clientId","_object$clientId","createBaseQueryClientConnectionsResponse","connectionPaths","_iterator2","_step2","_object$connectionPat","_object$proof2","createBaseQueryConnectionClientStateRequest","_object$connectionId2","createBaseQueryConnectionClientStateResponse","identifiedClientState","IdentifiedClientState","_object$proof3","createBaseQueryConnectionConsensusStateRequest","revisionNumber","Long","UZERO","revisionHeight","isZero","uint64","_object$connectionId3","fromValue","createBaseQueryConnectionConsensusStateResponse","consensusState","Any","_object$clientId2","_object$proof4"],"sources":["/Users/linanqi/node_modules/@sei-js/proto/main/codegen/ibc/core/connection/v1/query.js"],"sourcesContent":["\"use strict\";\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.QueryConnectionsResponse = exports.QueryConnectionsRequest = exports.QueryConnectionResponse = exports.QueryConnectionRequest = exports.QueryConnectionConsensusStateResponse = exports.QueryConnectionConsensusStateRequest = exports.QueryConnectionClientStateResponse = exports.QueryConnectionClientStateRequest = exports.QueryClientConnectionsResponse = exports.QueryClientConnectionsRequest = void 0;\nvar _pagination = require(\"../../../../cosmos/base/query/v1beta1/pagination\");\nvar _connection = require(\"./connection\");\nvar _client = require(\"../../client/v1/client\");\nvar _any = require(\"../../../../google/protobuf/any\");\nvar _helpers = require(\"../../../../helpers\");\nvar _m0 = _interopRequireWildcard(require(\"protobufjs/minimal\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction createBaseQueryConnectionRequest() {\n  return {\n    connectionId: \"\"\n  };\n}\nvar QueryConnectionRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.connectionId !== \"\") {\n      writer.uint32(10).string(message.connectionId);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryConnectionRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connectionId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$connectionId;\n    var message = createBaseQueryConnectionRequest();\n    message.connectionId = (_object$connectionId = object.connectionId) !== null && _object$connectionId !== void 0 ? _object$connectionId : \"\";\n    return message;\n  }\n};\nexports.QueryConnectionRequest = QueryConnectionRequest;\nfunction createBaseQueryConnectionResponse() {\n  return {\n    connection: _connection.ConnectionEnd.fromPartial({}),\n    proof: new Uint8Array(),\n    proofHeight: _client.Height.fromPartial({})\n  };\n}\nvar QueryConnectionResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.connection !== undefined) {\n      _connection.ConnectionEnd.encode(message.connection, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(18).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryConnectionResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connection = _connection.ConnectionEnd.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.proof = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$proof;\n    var message = createBaseQueryConnectionResponse();\n    message.connection = object.connection !== undefined && object.connection !== null ? _connection.ConnectionEnd.fromPartial(object.connection) : undefined;\n    message.proof = (_object$proof = object.proof) !== null && _object$proof !== void 0 ? _object$proof : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    return message;\n  }\n};\nexports.QueryConnectionResponse = QueryConnectionResponse;\nfunction createBaseQueryConnectionsRequest() {\n  return {\n    pagination: _pagination.PageRequest.fromPartial({})\n  };\n}\nvar QueryConnectionsRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.pagination !== undefined) {\n      _pagination.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryConnectionsRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.pagination = _pagination.PageRequest.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseQueryConnectionsRequest();\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? _pagination.PageRequest.fromPartial(object.pagination) : undefined;\n    return message;\n  }\n};\nexports.QueryConnectionsRequest = QueryConnectionsRequest;\nfunction createBaseQueryConnectionsResponse() {\n  return {\n    connections: [],\n    pagination: _pagination.PageResponse.fromPartial({}),\n    height: _client.Height.fromPartial({})\n  };\n}\nvar QueryConnectionsResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    var _iterator = _createForOfIteratorHelper(message.connections),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        _connection.IdentifiedConnection.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    if (message.pagination !== undefined) {\n      _pagination.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.height !== undefined) {\n      _client.Height.encode(message.height, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryConnectionsResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connections.push(_connection.IdentifiedConnection.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.pagination = _pagination.PageResponse.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.height = _client.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$connections;\n    var message = createBaseQueryConnectionsResponse();\n    message.connections = ((_object$connections = object.connections) === null || _object$connections === void 0 ? void 0 : _object$connections.map(function (e) {\n      return _connection.IdentifiedConnection.fromPartial(e);\n    })) || [];\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? _pagination.PageResponse.fromPartial(object.pagination) : undefined;\n    message.height = object.height !== undefined && object.height !== null ? _client.Height.fromPartial(object.height) : undefined;\n    return message;\n  }\n};\nexports.QueryConnectionsResponse = QueryConnectionsResponse;\nfunction createBaseQueryClientConnectionsRequest() {\n  return {\n    clientId: \"\"\n  };\n}\nvar QueryClientConnectionsRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.clientId !== \"\") {\n      writer.uint32(10).string(message.clientId);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryClientConnectionsRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$clientId;\n    var message = createBaseQueryClientConnectionsRequest();\n    message.clientId = (_object$clientId = object.clientId) !== null && _object$clientId !== void 0 ? _object$clientId : \"\";\n    return message;\n  }\n};\nexports.QueryClientConnectionsRequest = QueryClientConnectionsRequest;\nfunction createBaseQueryClientConnectionsResponse() {\n  return {\n    connectionPaths: [],\n    proof: new Uint8Array(),\n    proofHeight: _client.Height.fromPartial({})\n  };\n}\nvar QueryClientConnectionsResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    var _iterator2 = _createForOfIteratorHelper(message.connectionPaths),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var v = _step2.value;\n        writer.uint32(10).string(v);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(18).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryClientConnectionsResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connectionPaths.push(reader.string());\n          break;\n        case 2:\n          message.proof = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$connectionPat, _object$proof2;\n    var message = createBaseQueryClientConnectionsResponse();\n    message.connectionPaths = ((_object$connectionPat = object.connectionPaths) === null || _object$connectionPat === void 0 ? void 0 : _object$connectionPat.map(function (e) {\n      return e;\n    })) || [];\n    message.proof = (_object$proof2 = object.proof) !== null && _object$proof2 !== void 0 ? _object$proof2 : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    return message;\n  }\n};\nexports.QueryClientConnectionsResponse = QueryClientConnectionsResponse;\nfunction createBaseQueryConnectionClientStateRequest() {\n  return {\n    connectionId: \"\"\n  };\n}\nvar QueryConnectionClientStateRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.connectionId !== \"\") {\n      writer.uint32(10).string(message.connectionId);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryConnectionClientStateRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connectionId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$connectionId2;\n    var message = createBaseQueryConnectionClientStateRequest();\n    message.connectionId = (_object$connectionId2 = object.connectionId) !== null && _object$connectionId2 !== void 0 ? _object$connectionId2 : \"\";\n    return message;\n  }\n};\nexports.QueryConnectionClientStateRequest = QueryConnectionClientStateRequest;\nfunction createBaseQueryConnectionClientStateResponse() {\n  return {\n    identifiedClientState: _client.IdentifiedClientState.fromPartial({}),\n    proof: new Uint8Array(),\n    proofHeight: _client.Height.fromPartial({})\n  };\n}\nvar QueryConnectionClientStateResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.identifiedClientState !== undefined) {\n      _client.IdentifiedClientState.encode(message.identifiedClientState, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(18).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryConnectionClientStateResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.identifiedClientState = _client.IdentifiedClientState.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.proof = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$proof3;\n    var message = createBaseQueryConnectionClientStateResponse();\n    message.identifiedClientState = object.identifiedClientState !== undefined && object.identifiedClientState !== null ? _client.IdentifiedClientState.fromPartial(object.identifiedClientState) : undefined;\n    message.proof = (_object$proof3 = object.proof) !== null && _object$proof3 !== void 0 ? _object$proof3 : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    return message;\n  }\n};\nexports.QueryConnectionClientStateResponse = QueryConnectionClientStateResponse;\nfunction createBaseQueryConnectionConsensusStateRequest() {\n  return {\n    connectionId: \"\",\n    revisionNumber: _helpers.Long.UZERO,\n    revisionHeight: _helpers.Long.UZERO\n  };\n}\nvar QueryConnectionConsensusStateRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.connectionId !== \"\") {\n      writer.uint32(10).string(message.connectionId);\n    }\n    if (!message.revisionNumber.isZero()) {\n      writer.uint32(16).uint64(message.revisionNumber);\n    }\n    if (!message.revisionHeight.isZero()) {\n      writer.uint32(24).uint64(message.revisionHeight);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryConnectionConsensusStateRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connectionId = reader.string();\n          break;\n        case 2:\n          message.revisionNumber = reader.uint64();\n          break;\n        case 3:\n          message.revisionHeight = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$connectionId3;\n    var message = createBaseQueryConnectionConsensusStateRequest();\n    message.connectionId = (_object$connectionId3 = object.connectionId) !== null && _object$connectionId3 !== void 0 ? _object$connectionId3 : \"\";\n    message.revisionNumber = object.revisionNumber !== undefined && object.revisionNumber !== null ? _helpers.Long.fromValue(object.revisionNumber) : _helpers.Long.UZERO;\n    message.revisionHeight = object.revisionHeight !== undefined && object.revisionHeight !== null ? _helpers.Long.fromValue(object.revisionHeight) : _helpers.Long.UZERO;\n    return message;\n  }\n};\nexports.QueryConnectionConsensusStateRequest = QueryConnectionConsensusStateRequest;\nfunction createBaseQueryConnectionConsensusStateResponse() {\n  return {\n    consensusState: undefined,\n    clientId: \"\",\n    proof: new Uint8Array(),\n    proofHeight: _client.Height.fromPartial({})\n  };\n}\nvar QueryConnectionConsensusStateResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.consensusState !== undefined) {\n      _any.Any.encode(message.consensusState, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.clientId !== \"\") {\n      writer.uint32(18).string(message.clientId);\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(26).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      _client.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryConnectionConsensusStateResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.consensusState = _any.Any.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.clientId = reader.string();\n          break;\n        case 3:\n          message.proof = reader.bytes();\n          break;\n        case 4:\n          message.proofHeight = _client.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$clientId2, _object$proof4;\n    var message = createBaseQueryConnectionConsensusStateResponse();\n    message.consensusState = object.consensusState !== undefined && object.consensusState !== null ? _any.Any.fromPartial(object.consensusState) : undefined;\n    message.clientId = (_object$clientId2 = object.clientId) !== null && _object$clientId2 !== void 0 ? _object$clientId2 : \"\";\n    message.proof = (_object$proof4 = object.proof) !== null && _object$proof4 !== void 0 ? _object$proof4 : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? _client.Height.fromPartial(object.proofHeight) : undefined;\n    return message;\n  }\n};\nexports.QueryConnectionConsensusStateResponse = QueryConnectionConsensusStateResponse;"],"mappings":"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"},"metadata":{},"sourceType":"script"}