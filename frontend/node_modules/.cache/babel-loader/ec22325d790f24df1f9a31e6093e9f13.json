{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/linanqi/Hackathon/GameRoom/frontend/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/Users/linanqi/Hackathon/GameRoom/frontend/node_modules/@babel/runtime/helpers/createClass\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.QueryClientImpl = exports.QueryUpgradedConsensusStateResponse = exports.QueryUpgradedConsensusStateRequest = exports.QueryUpgradedClientStateResponse = exports.QueryUpgradedClientStateRequest = exports.QueryClientParamsResponse = exports.QueryClientParamsRequest = exports.QueryClientStatusResponse = exports.QueryClientStatusRequest = exports.QueryConsensusStatesResponse = exports.QueryConsensusStatesRequest = exports.QueryConsensusStateResponse = exports.QueryConsensusStateRequest = exports.QueryClientStatesResponse = exports.QueryClientStatesRequest = exports.QueryClientStateResponse = exports.QueryClientStateRequest = exports.protobufPackage = void 0;\n/* eslint-disable */\nvar long_1 = __importDefault(require(\"long\"));\nvar minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nvar pagination_1 = require(\"../../../../cosmos/base/query/v1beta1/pagination\");\nvar any_1 = require(\"../../../../google/protobuf/any\");\nvar client_1 = require(\"./client\");\nexports.protobufPackage = \"ibc.core.client.v1\";\nfunction createBaseQueryClientStateRequest() {\n  return {\n    clientId: \"\"\n  };\n}\nexports.QueryClientStateRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.clientId !== \"\") {\n      writer.uint32(10).string(message.clientId);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryClientStateRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      clientId: isSet(object.clientId) ? String(object.clientId) : \"\"\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.clientId !== undefined && (obj.clientId = message.clientId);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseQueryClientStateRequest();\n    message.clientId = (_a = object.clientId) !== null && _a !== void 0 ? _a : \"\";\n    return message;\n  }\n};\nfunction createBaseQueryClientStateResponse() {\n  return {\n    clientState: undefined,\n    proof: new Uint8Array(),\n    proofHeight: undefined\n  };\n}\nexports.QueryClientStateResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.clientState !== undefined) {\n      any_1.Any.encode(message.clientState, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(18).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryClientStateResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.clientState = any_1.Any.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.proof = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      clientState: isSet(object.clientState) ? any_1.Any.fromJSON(object.clientState) : undefined,\n      proof: isSet(object.proof) ? bytesFromBase64(object.proof) : new Uint8Array(),\n      proofHeight: isSet(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : undefined\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.clientState !== undefined && (obj.clientState = message.clientState ? any_1.Any.toJSON(message.clientState) : undefined);\n    message.proof !== undefined && (obj.proof = base64FromBytes(message.proof !== undefined ? message.proof : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseQueryClientStateResponse();\n    message.clientState = object.clientState !== undefined && object.clientState !== null ? any_1.Any.fromPartial(object.clientState) : undefined;\n    message.proof = (_a = object.proof) !== null && _a !== void 0 ? _a : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : undefined;\n    return message;\n  }\n};\nfunction createBaseQueryClientStatesRequest() {\n  return {\n    pagination: undefined\n  };\n}\nexports.QueryClientStatesRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.pagination !== undefined) {\n      pagination_1.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryClientStatesRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      pagination: isSet(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : undefined\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.pagination !== undefined && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseQueryClientStatesRequest();\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : undefined;\n    return message;\n  }\n};\nfunction createBaseQueryClientStatesResponse() {\n  return {\n    clientStates: [],\n    pagination: undefined\n  };\n}\nexports.QueryClientStatesResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    var _iterator = _createForOfIteratorHelper(message.clientStates),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        client_1.IdentifiedClientState.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    if (message.pagination !== undefined) {\n      pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryClientStatesResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.clientStates.push(client_1.IdentifiedClientState.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      clientStates: Array.isArray(object === null || object === void 0 ? void 0 : object.clientStates) ? object.clientStates.map(function (e) {\n        return client_1.IdentifiedClientState.fromJSON(e);\n      }) : [],\n      pagination: isSet(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : undefined\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    if (message.clientStates) {\n      obj.clientStates = message.clientStates.map(function (e) {\n        return e ? client_1.IdentifiedClientState.toJSON(e) : undefined;\n      });\n    } else {\n      obj.clientStates = [];\n    }\n    message.pagination !== undefined && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseQueryClientStatesResponse();\n    message.clientStates = ((_a = object.clientStates) === null || _a === void 0 ? void 0 : _a.map(function (e) {\n      return client_1.IdentifiedClientState.fromPartial(e);\n    })) || [];\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : undefined;\n    return message;\n  }\n};\nfunction createBaseQueryConsensusStateRequest() {\n  return {\n    clientId: \"\",\n    revisionNumber: long_1.default.UZERO,\n    revisionHeight: long_1.default.UZERO,\n    latestHeight: false\n  };\n}\nexports.QueryConsensusStateRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.clientId !== \"\") {\n      writer.uint32(10).string(message.clientId);\n    }\n    if (!message.revisionNumber.isZero()) {\n      writer.uint32(16).uint64(message.revisionNumber);\n    }\n    if (!message.revisionHeight.isZero()) {\n      writer.uint32(24).uint64(message.revisionHeight);\n    }\n    if (message.latestHeight === true) {\n      writer.uint32(32).bool(message.latestHeight);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryConsensusStateRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n        case 2:\n          message.revisionNumber = reader.uint64();\n          break;\n        case 3:\n          message.revisionHeight = reader.uint64();\n          break;\n        case 4:\n          message.latestHeight = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      clientId: isSet(object.clientId) ? String(object.clientId) : \"\",\n      revisionNumber: isSet(object.revisionNumber) ? long_1.default.fromValue(object.revisionNumber) : long_1.default.UZERO,\n      revisionHeight: isSet(object.revisionHeight) ? long_1.default.fromValue(object.revisionHeight) : long_1.default.UZERO,\n      latestHeight: isSet(object.latestHeight) ? Boolean(object.latestHeight) : false\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.clientId !== undefined && (obj.clientId = message.clientId);\n    message.revisionNumber !== undefined && (obj.revisionNumber = (message.revisionNumber || long_1.default.UZERO).toString());\n    message.revisionHeight !== undefined && (obj.revisionHeight = (message.revisionHeight || long_1.default.UZERO).toString());\n    message.latestHeight !== undefined && (obj.latestHeight = message.latestHeight);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b;\n    var message = createBaseQueryConsensusStateRequest();\n    message.clientId = (_a = object.clientId) !== null && _a !== void 0 ? _a : \"\";\n    message.revisionNumber = object.revisionNumber !== undefined && object.revisionNumber !== null ? long_1.default.fromValue(object.revisionNumber) : long_1.default.UZERO;\n    message.revisionHeight = object.revisionHeight !== undefined && object.revisionHeight !== null ? long_1.default.fromValue(object.revisionHeight) : long_1.default.UZERO;\n    message.latestHeight = (_b = object.latestHeight) !== null && _b !== void 0 ? _b : false;\n    return message;\n  }\n};\nfunction createBaseQueryConsensusStateResponse() {\n  return {\n    consensusState: undefined,\n    proof: new Uint8Array(),\n    proofHeight: undefined\n  };\n}\nexports.QueryConsensusStateResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.consensusState !== undefined) {\n      any_1.Any.encode(message.consensusState, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(18).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryConsensusStateResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.consensusState = any_1.Any.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.proof = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      consensusState: isSet(object.consensusState) ? any_1.Any.fromJSON(object.consensusState) : undefined,\n      proof: isSet(object.proof) ? bytesFromBase64(object.proof) : new Uint8Array(),\n      proofHeight: isSet(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : undefined\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.consensusState !== undefined && (obj.consensusState = message.consensusState ? any_1.Any.toJSON(message.consensusState) : undefined);\n    message.proof !== undefined && (obj.proof = base64FromBytes(message.proof !== undefined ? message.proof : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseQueryConsensusStateResponse();\n    message.consensusState = object.consensusState !== undefined && object.consensusState !== null ? any_1.Any.fromPartial(object.consensusState) : undefined;\n    message.proof = (_a = object.proof) !== null && _a !== void 0 ? _a : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : undefined;\n    return message;\n  }\n};\nfunction createBaseQueryConsensusStatesRequest() {\n  return {\n    clientId: \"\",\n    pagination: undefined\n  };\n}\nexports.QueryConsensusStatesRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.clientId !== \"\") {\n      writer.uint32(10).string(message.clientId);\n    }\n    if (message.pagination !== undefined) {\n      pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryConsensusStatesRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n        case 2:\n          message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      clientId: isSet(object.clientId) ? String(object.clientId) : \"\",\n      pagination: isSet(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : undefined\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.clientId !== undefined && (obj.clientId = message.clientId);\n    message.pagination !== undefined && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseQueryConsensusStatesRequest();\n    message.clientId = (_a = object.clientId) !== null && _a !== void 0 ? _a : \"\";\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : undefined;\n    return message;\n  }\n};\nfunction createBaseQueryConsensusStatesResponse() {\n  return {\n    consensusStates: [],\n    pagination: undefined\n  };\n}\nexports.QueryConsensusStatesResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    var _iterator2 = _createForOfIteratorHelper(message.consensusStates),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var v = _step2.value;\n        client_1.ConsensusStateWithHeight.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    if (message.pagination !== undefined) {\n      pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryConsensusStatesResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.consensusStates.push(client_1.ConsensusStateWithHeight.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      consensusStates: Array.isArray(object === null || object === void 0 ? void 0 : object.consensusStates) ? object.consensusStates.map(function (e) {\n        return client_1.ConsensusStateWithHeight.fromJSON(e);\n      }) : [],\n      pagination: isSet(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : undefined\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    if (message.consensusStates) {\n      obj.consensusStates = message.consensusStates.map(function (e) {\n        return e ? client_1.ConsensusStateWithHeight.toJSON(e) : undefined;\n      });\n    } else {\n      obj.consensusStates = [];\n    }\n    message.pagination !== undefined && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseQueryConsensusStatesResponse();\n    message.consensusStates = ((_a = object.consensusStates) === null || _a === void 0 ? void 0 : _a.map(function (e) {\n      return client_1.ConsensusStateWithHeight.fromPartial(e);\n    })) || [];\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : undefined;\n    return message;\n  }\n};\nfunction createBaseQueryClientStatusRequest() {\n  return {\n    clientId: \"\"\n  };\n}\nexports.QueryClientStatusRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.clientId !== \"\") {\n      writer.uint32(10).string(message.clientId);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryClientStatusRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      clientId: isSet(object.clientId) ? String(object.clientId) : \"\"\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.clientId !== undefined && (obj.clientId = message.clientId);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseQueryClientStatusRequest();\n    message.clientId = (_a = object.clientId) !== null && _a !== void 0 ? _a : \"\";\n    return message;\n  }\n};\nfunction createBaseQueryClientStatusResponse() {\n  return {\n    status: \"\"\n  };\n}\nexports.QueryClientStatusResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.status !== \"\") {\n      writer.uint32(10).string(message.status);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryClientStatusResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.status = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      status: isSet(object.status) ? String(object.status) : \"\"\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.status !== undefined && (obj.status = message.status);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = createBaseQueryClientStatusResponse();\n    message.status = (_a = object.status) !== null && _a !== void 0 ? _a : \"\";\n    return message;\n  }\n};\nfunction createBaseQueryClientParamsRequest() {\n  return {};\n}\nexports.QueryClientParamsRequest = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryClientParamsRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(_) {\n    return {};\n  },\n  toJSON: function toJSON(_) {\n    var obj = {};\n    return obj;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseQueryClientParamsRequest();\n    return message;\n  }\n};\nfunction createBaseQueryClientParamsResponse() {\n  return {\n    params: undefined\n  };\n}\nexports.QueryClientParamsResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.params !== undefined) {\n      client_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryClientParamsResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.params = client_1.Params.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      params: isSet(object.params) ? client_1.Params.fromJSON(object.params) : undefined\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.params !== undefined && (obj.params = message.params ? client_1.Params.toJSON(message.params) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseQueryClientParamsResponse();\n    message.params = object.params !== undefined && object.params !== null ? client_1.Params.fromPartial(object.params) : undefined;\n    return message;\n  }\n};\nfunction createBaseQueryUpgradedClientStateRequest() {\n  return {};\n}\nexports.QueryUpgradedClientStateRequest = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryUpgradedClientStateRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(_) {\n    return {};\n  },\n  toJSON: function toJSON(_) {\n    var obj = {};\n    return obj;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseQueryUpgradedClientStateRequest();\n    return message;\n  }\n};\nfunction createBaseQueryUpgradedClientStateResponse() {\n  return {\n    upgradedClientState: undefined\n  };\n}\nexports.QueryUpgradedClientStateResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.upgradedClientState !== undefined) {\n      any_1.Any.encode(message.upgradedClientState, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryUpgradedClientStateResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.upgradedClientState = any_1.Any.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      upgradedClientState: isSet(object.upgradedClientState) ? any_1.Any.fromJSON(object.upgradedClientState) : undefined\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.upgradedClientState !== undefined && (obj.upgradedClientState = message.upgradedClientState ? any_1.Any.toJSON(message.upgradedClientState) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseQueryUpgradedClientStateResponse();\n    message.upgradedClientState = object.upgradedClientState !== undefined && object.upgradedClientState !== null ? any_1.Any.fromPartial(object.upgradedClientState) : undefined;\n    return message;\n  }\n};\nfunction createBaseQueryUpgradedConsensusStateRequest() {\n  return {};\n}\nexports.QueryUpgradedConsensusStateRequest = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryUpgradedConsensusStateRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(_) {\n    return {};\n  },\n  toJSON: function toJSON(_) {\n    var obj = {};\n    return obj;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = createBaseQueryUpgradedConsensusStateRequest();\n    return message;\n  }\n};\nfunction createBaseQueryUpgradedConsensusStateResponse() {\n  return {\n    upgradedConsensusState: undefined\n  };\n}\nexports.QueryUpgradedConsensusStateResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.upgradedConsensusState !== undefined) {\n      any_1.Any.encode(message.upgradedConsensusState, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseQueryUpgradedConsensusStateResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.upgradedConsensusState = any_1.Any.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      upgradedConsensusState: isSet(object.upgradedConsensusState) ? any_1.Any.fromJSON(object.upgradedConsensusState) : undefined\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.upgradedConsensusState !== undefined && (obj.upgradedConsensusState = message.upgradedConsensusState ? any_1.Any.toJSON(message.upgradedConsensusState) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseQueryUpgradedConsensusStateResponse();\n    message.upgradedConsensusState = object.upgradedConsensusState !== undefined && object.upgradedConsensusState !== null ? any_1.Any.fromPartial(object.upgradedConsensusState) : undefined;\n    return message;\n  }\n};\nvar QueryClientImpl = /*#__PURE__*/function () {\n  function QueryClientImpl(rpc) {\n    _classCallCheck(this, QueryClientImpl);\n    this.rpc = rpc;\n    this.ClientState = this.ClientState.bind(this);\n    this.ClientStates = this.ClientStates.bind(this);\n    this.ConsensusState = this.ConsensusState.bind(this);\n    this.ConsensusStates = this.ConsensusStates.bind(this);\n    this.ClientStatus = this.ClientStatus.bind(this);\n    this.ClientParams = this.ClientParams.bind(this);\n    this.UpgradedClientState = this.UpgradedClientState.bind(this);\n    this.UpgradedConsensusState = this.UpgradedConsensusState.bind(this);\n  }\n  _createClass(QueryClientImpl, [{\n    key: \"ClientState\",\n    value: function ClientState(request) {\n      var data = exports.QueryClientStateRequest.encode(request).finish();\n      var promise = this.rpc.request(\"ibc.core.client.v1.Query\", \"ClientState\", data);\n      return promise.then(function (data) {\n        return exports.QueryClientStateResponse.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }, {\n    key: \"ClientStates\",\n    value: function ClientStates(request) {\n      var data = exports.QueryClientStatesRequest.encode(request).finish();\n      var promise = this.rpc.request(\"ibc.core.client.v1.Query\", \"ClientStates\", data);\n      return promise.then(function (data) {\n        return exports.QueryClientStatesResponse.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }, {\n    key: \"ConsensusState\",\n    value: function ConsensusState(request) {\n      var data = exports.QueryConsensusStateRequest.encode(request).finish();\n      var promise = this.rpc.request(\"ibc.core.client.v1.Query\", \"ConsensusState\", data);\n      return promise.then(function (data) {\n        return exports.QueryConsensusStateResponse.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }, {\n    key: \"ConsensusStates\",\n    value: function ConsensusStates(request) {\n      var data = exports.QueryConsensusStatesRequest.encode(request).finish();\n      var promise = this.rpc.request(\"ibc.core.client.v1.Query\", \"ConsensusStates\", data);\n      return promise.then(function (data) {\n        return exports.QueryConsensusStatesResponse.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }, {\n    key: \"ClientStatus\",\n    value: function ClientStatus(request) {\n      var data = exports.QueryClientStatusRequest.encode(request).finish();\n      var promise = this.rpc.request(\"ibc.core.client.v1.Query\", \"ClientStatus\", data);\n      return promise.then(function (data) {\n        return exports.QueryClientStatusResponse.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }, {\n    key: \"ClientParams\",\n    value: function ClientParams(request) {\n      var data = exports.QueryClientParamsRequest.encode(request).finish();\n      var promise = this.rpc.request(\"ibc.core.client.v1.Query\", \"ClientParams\", data);\n      return promise.then(function (data) {\n        return exports.QueryClientParamsResponse.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }, {\n    key: \"UpgradedClientState\",\n    value: function UpgradedClientState(request) {\n      var data = exports.QueryUpgradedClientStateRequest.encode(request).finish();\n      var promise = this.rpc.request(\"ibc.core.client.v1.Query\", \"UpgradedClientState\", data);\n      return promise.then(function (data) {\n        return exports.QueryUpgradedClientStateResponse.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }, {\n    key: \"UpgradedConsensusState\",\n    value: function UpgradedConsensusState(request) {\n      var data = exports.QueryUpgradedConsensusStateRequest.encode(request).finish();\n      var promise = this.rpc.request(\"ibc.core.client.v1.Query\", \"UpgradedConsensusState\", data);\n      return promise.then(function (data) {\n        return exports.QueryUpgradedConsensusStateResponse.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }]);\n  return QueryClientImpl;\n}();\nexports.QueryClientImpl = QueryClientImpl;\nvar globalThis = function () {\n  if (typeof globalThis !== \"undefined\") {\n    return globalThis;\n  }\n  if (typeof self !== \"undefined\") {\n    return self;\n  }\n  if (typeof window !== \"undefined\") {\n    return window;\n  }\n  if (typeof global !== \"undefined\") {\n    return global;\n  }\n  throw \"Unable to locate global object\";\n}();\nfunction bytesFromBase64(b64) {\n  if (globalThis.Buffer) {\n    return Uint8Array.from(globalThis.Buffer.from(b64, \"base64\"));\n  } else {\n    var bin = globalThis.atob(b64);\n    var arr = new Uint8Array(bin.length);\n    for (var i = 0; i < bin.length; ++i) {\n      arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n  }\n}\nfunction base64FromBytes(arr) {\n  if (globalThis.Buffer) {\n    return globalThis.Buffer.from(arr).toString(\"base64\");\n  } else {\n    var bin = [];\n    arr.forEach(function (byte) {\n      bin.push(String.fromCharCode(byte));\n    });\n    return globalThis.btoa(bin.join(\"\"));\n  }\n}\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}\nfunction isSet(value) {\n  return value !== null && value !== undefined;\n}","map":null,"metadata":{},"sourceType":"script"}